

.. comment 

.. raw:: html

    <style type="text/css">
        span.alarm { color: red; } 
        span.warn { color: orange; } 
        span.ok { color: green; } 
        span.i { display: none; } 
        pre.sliteral { class:"literal-block small"; }   
        pre.mypre {
             display: block;
             font-family: monospace;
             font-size: 20px;
             white-space: pre;
             margin: 1em 0;
        }

    </style>

.. role:: i 
.. role:: alarm
.. role:: warn
.. role:: ok
.. role:: sliteral
.. role:: mypre 


.. include:: <s5defs.txt>

.. s5_background_image::

    #
    # slide titles and background image urls, 
    # including server relative urls like /env/geant4/geometry/collada/daeview/20140419-170713.png
    # and protocol relative urls like //localhost/env/test/LANS_AD3_CoverGas_Humidity.png
    #
    # NB1 slide titles here must match those in body precisely, 
    # NB2 also ensure all slide titles are unique
    #
    # first slide id is exceptionally: slide0, not the mangled title
    slide0
    /env/geant4/geometry/collada/g4daeview/20140419-170713.png auto_auto 0px_0px

    g4daeview.py : Fast OpenGL 3D viewer for G4DAE files
    /env/geant4/geometry/collada/g4daeview/20140419-170713.png

    Cerenkov Photons Simulation - Top View
    /env/geant4/geometry/collada/g4daeview/20141224-115923.png

    Cerenkov Photons Simulation - Side View
    /env/geant4/geometry/collada/g4daeview/20141224-115935.png

    Scintillation Photons Simulation - Top View
    /env/geant4/geometry/collada/g4daeview/20141224-121444.png

    Scintillation Photons Simulation - Side View
    /env/geant4/geometry/collada/g4daeview/20141224-121435.png

    Standard Geant4 Workflow
    /env/keynotefigs/G4DAEChroma/G4DAEChroma.001.png

    External Photon Simulation Workflow
    /env/keynotefigs/G4DAEChroma/G4DAEChroma.002.png

    GGeoView
    /env/graphics/ggeoview/ggeoview-cerenkov-001.png 1047px_795px

    GGeoView M1 Points
    /env/graphics/ggeoview/ggeoview-scintillation-points-mat1.png 1435px_848px

    GGeoView Flag Selection 
    /env/graphics/ggeoview/ggeoview-scintillation-flag-seq-select.png 1436px_842px

    GGeoView Cerenkov Geom M1
    /env/graphics/ggeoview/ggeoview-cerenkov-m1-geom.png 1416px_845px
   
    JPMT Inside Wide 
    /env/graphics/ggeoview/jpmt-inside-wide_half.png 1432px_844px

    JPMT Wide
    /env/graphics/ggeoview/jpmt-wide_half.png 1409px_836px
  
    JPMT Headview
    /env/graphics/ggeoview/jpmt-headview_half.png 1308px_783px
 
    JPMT Backview
    /env/graphics/ggeoview/jpmt-backview_half.png 1149px_794px 
 
    JPMT Approach 
    /env/graphics/ggeoview/jpmt-approach_half.png 1431px_839px

    JPMT Arrival 
    /env/graphics/ggeoview/jpmt-arrival_half.png 1427px_841px 
 
    JPMT Before Contact 
    /env/graphics/ggeoview/jpmt-before-contact_half.png 1430px_844px 
 
    JPMT After Contact 
    /env/graphics/ggeoview/jpmt-after-contact_half.png 1425px_840px 
  
    JPMT Inside Outside 
    /env/graphics/ggeoview/jpmt-inside-outside_half.png 1401px_842px

    NVIDIA OptiX In Action
    /env/presentation/optix-in-action_half.png 966px_646px 100px_50px
 
.. comment 

    GGeoView image is 2094x1590 1047x795

    GGeoView M1 Points is 2870x1696  1435x848

    GGeoView Flag Selection 2872x1684 1436x842

    GGeoView Cerenkov Geom M1 2832x1690 1416x845


    Generated Scintillation Photons GPU cf Geant4
    /env/g4dae/generated_scintillation_time_wavelength.png

    G4/DetSim Generated Cerenkov Wavelength
    /env/g4dae/g4_cerenkov_wavelength.png



.. comment

    Placeholder

    jpmt-after-contact.png 2850px_1680px
    jpmt-approach.png 2862px_1678px
    jpmt-arrival.png 2854px_1682px
    jpmt-backview.png 2298px_1588px
    jpmt-before-contact.png 2860px_1688px
    jpmt-headview.png 2616px_1566px
    jpmt-inside-outside.png 2802px_1684px
    jpmt-wide.png 2818px_1672px





======================================================================
Opticks : GPU Optical Photon Simulation 
======================================================================

.. class:: small

    http://simoncblyth.bitbucket.org/env/presentation/opticks_gpu_optical_photon_simulation.html (Jan 2016)
    http://simoncblyth.bitbucket.org/env/presentation/optical_photon_simulation_with_nvidia_optix.html (July 2015)

.. class:: small

   **Executive Summary**

   * Validation comparisons with Geant4 started, rainbow geometry validated
   * Performance factors **so large they become irrelevant** (>> 200x) 

   **Contents**

   * Brief History of GPU Optical Photon Simulation Development
   * Introducing Opticks
   * Handling JUNO geometry 
   * Mesh Fixing with OpenMesh surgery
   * Analytic PMT geometry description 
   * Opticks/Geant4 : Dynamic Test Geometry
   * Rainbow Geometry Testing
   * Summary 

   |  Simon C Blyth, National Taiwan University
   |  **January 2016** 



:small:`Brief History of GPU Optical Photon Simulation Development`
----------------------------------------------------------------------

.. sidebar:: G4+Opticks Simulation ?   

    .. class:: small
    
         **Optical Photon Problem** 

         *Geant4* optical photon propagation dominates 
         simulation time ~95%

         **Optical Photon Solution** 

         External photon propagation made possible by  
         isolated nature of photons in simulation chain.
         
         * produced only by Cerenkov/Scintillation 
         * yielding only PMT hits 


.. class:: small

   **winter 2014** (within *Chroma*)

   * integrate G4DAE geometry exports
   * generate Cerenkov/Scintillation photons on GPU

   **spring 2015** (start transition to *Opticks*)

   * :red:`decide lack of multi-GPU is showstopper` for *Chroma* 
   * discover :blue:`NVIDIA OptiX` ray tracing framework 
   * create *Opticks* (using OptiX) to replace *Chroma*

   **summer/autumn 2015** (*Opticks* transition completed)

   * infrastructure operational, G4 optical physics ported 
   * large geometry support added using instancing  

   **autumn/winter 2015** (Validations begin)

   * major tesselation bug avoided with *OpenMesh*   
   * develop analytic PMT description 
   * validation machinery created *CfG4*

.. class:: tiny

   Newton published *Opticks* in 1704


:small:`Based on: NVIDIA OptiX Ray Tracing Engine [C++/C/CUDA]`
-------------------------------------------------------------------

.. sidebar:: OptiX *Tutorial* App

    .. class:: small

        Image pixels calculated by recursively bouncing rays 
        doing shadow, reflection, refraction calculations.
        Runs at interactive speeds with GeForce GT 750M.

    .. image:: /env/optix/samples/optix-tutorial-10.png 
       :width: 450px
       :align: right

.. class:: small

    OptiX provides: :blue:`CUDA compiler optimized for Ray Tracing` 
 
    * ray tracing framework, **no rendering assumptions**

    * state-of-the-art GPU accelerated geometry intersection 

    * regular releases, improvements, tuning for new GPUs

    * shared C++/CUDA context eases development 

    :red:`NVIDIA expertise on efficient GPU/multi-GPU usage` 

    * persistent warps sized to fill machine

    * load balancing between warps, GPUs

    **IHEP Performance Check** 

    Used IHEP 4 GPU workstation to verify 
    near linear performance scaling across multiple GPUs


.. class:: tiny

    https://developer.nvidia.com/optix 

    https://research.nvidia.com/publication/optix-general-purpose-ray-tracing-engine


:i:`NVIDIA OptiX In Action`
-------------------------------------------------------------------



:small:`Introducing Opticks : Recreating G4 Context on GPU`
-------------------------------------------------------------

.. sidebar:: Opticks ~15 C++ Pkgs 

      .. class:: small

          Organized by dependencies

          * :red:`Recreates Geant4 context on GPU`
          * :blue:`Optical simulation by OptiX programs` 
          * :blue:`Photon Indexing by Thrust`

          Interop between OpenGL/OptiX/Thrust/CUDA  

          * :blue:`shared GPU buffers, efficient visualization`

          C++ code but NumPy analysis/debugging by using 
          :red:`.npy serialization` for all buffers 

          Externals: 

          * Boost + Asio-ZMQ, ZMQ
          * CUDA 7.0, Thrust 1.8
          * OptiX 3.8, OpenGL 4.1 
          * OpenMesh 4.1, ImGUI  


.. class:: small

   **Basis packages**

   * *Opticks* : definitions, configuration
   * *NPY* : host array handling, persistency, python analysis
   * *NumpyServer* : network IO of *NPY* arrays

   **Geometry packages** 

   * *AssimpWrap* : G4DAE geometry loading with Assimp fork
   * *GGeo* : preparing geometry for GPU
   * *OpenMeshRap* : mesh fixing 

   **GPU library interface packages** 

   * *OpticksOp* : high level GPU control 
   * *OptiXRap* : OptiX control
   * *ThrustRap* : photon indexing
   * *CUDAWrap* : persist cuRAND state 
   * *OGLWrap* : OpenGL visualization

   **Main packages**
   
   * *GGeoView* : visualization, Opticks main
   * *CFG4* : Geant4 10.2 comparison, separate main


:small:`Large Geometry/Event Techniques`
------------------------------------------------------- 

.. sidebar:: JUNO Geometry 

   .. class:: small

      289733 volumes split into instanced: 
 
      * name: count (faces)
      * PMT_3inch: 36572 (540) 
      * PMT_20inch: 19452 (3502)
      * lFasteners: 480 (1856)
      * lPlane: 124 (6252) 

      And the rest:

      * Global     (95436)  
 

.. class:: small

   **Instancing implemented for OpenGL and OptiX**

   Geometry analysed to find instances

   * repeated sub-trees with transforms for each **instance** 
   * JUNO: ~90M triangles, instancing reduces to 0.1M

   **Switchable Rendering**

   * Multiple renderers: global, full instances, bbox instances
   * Rapid switching GUI control

   **Compute Mode**

   * Pure OptiX buffers faster (~7X interop)
   * Less GPU memory (1) 
   * Visualize by separate event loading  
      
   **Ideas to investigate**

   * Analytic PMT definition expected to improve OptiX efficiency 
   * Culling non-visible geometry to improve OpenGL performance
   * Level-of-detail : change geometry detail based on distance


.. class:: tiny  

   (1) Interop forced to duplicate data as OpenGL/OptiX geometry sharing not operational



:small:`JUNO Geometry Instance Rendering Control`
------------------------------------------------------- 

.. image:: /env/graphics/ggeoview/ggv-juno-instancing.png
   :width: 900px
   :align: center

   
:i:`JPMT Inside Wide`
----------------------

.. class:: tiny

   http://simoncblyth.bitbucket.org/env/graphics/ggeoview/jpmt-inside-wide_half.png



:small:`Mesh Fixing with OpenMesh surgery`
------------------------------------------------------------

.. sidebar:: After fix 

    .. class:: small

        .. image:: /env/graphics/ggeoview/mesh-fix-iav-oav.png
           :width: 500px
           :align: center

        Color indicates material assigned.
        Prior to fix, assignments incorrect for all photons 
        heading towards Dayabay AD top lid.

        For topologically correct meshes, without holes:

        ``V - E + F = 2``  (Eulers Characteristic) 


.. class:: small

   Intersection boundaries determines photon material, bad 
   meshes cause incorrect material assignments

   **G4Polyhedron Tesselation Bug** 

   * Some union solids become cleaved meshes 
   * **close parallel faces** cause flickering OpenGL render
   * ~25/250 Dayabay meshes have issues 
   * two critical ones fixed: IAV, OAV. 
   * :red:`TODO: check/apply to JUNO geometry` 

   **OpenMeshRap** finds/fixes cleaved meshes

   * based on open source project: **OpenMesh** 

   * extracts real topological meshes
   * finds close parallel faces between the meshes
   * deletes the extra faces
   * stitches the split mesh together with added triangles




:small:`Analytic PMT geometry : more realistic, faster, less memory`
---------------------------------------------------------------------

.. class:: small
 
   * parse geometry XML to give CSG tree : solids with boolean intersections, unions
   * partition 5 solids into 12 **single primitive** parts 
   * splitting at geometrical intersections avoids implementing general CSG boolean handling

.. image:: /env/nuwa/detdesc/pmt/hemi-pmt-solids.png
   :width: 900px
   :align: center


:small:`Analytic PMT in 12 parts instead of 2928 triangles`
-------------------------------------------------------------

.. sidebar:: Partitioned PMT 

    .. class:: small

        .. image:: /env/nuwa/detdesc/pmt/hemi-pmt-parts.png
           :width: 500px
           :align: center
    
.. class:: small

   Geometry provided to OptiX in form of ray intersection code

   PMT intersection by comparison with part intersections: 
   cylinder and partial sphere intersection from quadratic roots  
   
   **Volume to Surface translation**

   Volume heirarchy: Pyrex/Vacuum/Bialkali puts photocathode inside vacuum
   but as coincident boundaries it makes no difference for volume description.

   Coincident boundaries do not work for surface description, must 
   adopt correct heirarchy: Pyrex/Bialkali/Vacuum 

   :red:`TODO: single PMT testing vs G4 to check implications`


.. class:: tiny

   Sphere intersection only 2 cases, Cylinder 10 cases (axial, walls, endcap, outside/inside) 


:small:`OptiX Ray Traced Analytic PMT geometry`
------------------------------------------------

.. class:: small

.. image:: /env/nuwa/detdesc/pmt/hemi-pmt-analytic-near-clipped.png
   :width: 800px
   :align: center

.. class:: tiny 

   Near clipped, orthographic projection.


:small:`Analytic PMTs together with triangulated geometry`
----------------------------------------------------------------

.. class:: small

   Dayabay Ray Trace: PMTs analytic, the rest triangulated 

.. image:: /env/nuwa/detdesc/pmt/analytic-pmt-optix-geometry.png
   :width: 800px
   :align: center

:small:`Opticks/Geant4 : Dynamic Test Geometry`
----------------------------------------------------------------


.. sidebar:: *CfG4* package 

   .. class:: small
     
      * G4 step recorder in Opticks event format 
      * load events into Opticks for visualization 

.. class:: small

   Commandline arguments parsed into geometry/material/surface description. Each test shape requires: 
   
   * OptiX: analytic intersection code 
   * OpenGL: tesselation for visualization
   * Geant4: geometry construction code in *CfG4* package
   
   ===========================================  =================  =================  ================== 
     Shape                                        OptiX              OpenGL             Geant4
   ===========================================  =================  =================  ================== 
     sphere                                        Y                  Y                   Y
     box                                           needs debug        Y                   Y
     prism                                         Y                  Y                            
     convex lens                                   Y                  Y                            
   ===========================================  =================  =================  ================== 

   Compare Opticks/Geant4 propagations with simple test geometries with: 

.. raw:: html

    <pre class="mypre">
         ggv.sh        --test --testconfig "..."  --torch --torchconfig "..."   # Opticks
         ggv.sh --cfg4 --test --testconfig "..."  --torch --torchconfig "..."   # Geant4 
    </pre>


:small:`Opticks Absolute Reflection compared to Fresnel expectation`
-----------------------------------------------------------------------

.. class:: tiny

   Comparison of simulated absolute reflection of S and P polarized single events against 
   expectation from Fresnel formula. Using uniform planar incident cyclindrically directed light.

.. image:: /env/numerics/npy/reflection.png
   :width: 700px
   :align: center



:small:`Multiple Rainbows from a Single Drop of Water`
--------------------------------------------------------

.. image:: /env/presentation/rainbow-mechanism.png
   :width: 900px
   :align: center

.. class:: small

   Caustic bunching at least deviation causes rainbow 

   (a) Primary bow, single reflection : ray f at bow angle
   (b) Secondary bow, double reflection : ray g at bow angle
   (c) Deviation angles 0:180 degrees hemisphere opposite to incident rays

.. class:: tiny

   Jearl D. Walker, 1975, Multiple rainbows from single drops of water and other liquids
   http://patarnott.com/atms749/pdf/MultipleRainbowsSingleDrops.pdf


:small:`Disc beam 1M Photons incident on Water Sphere (S-Pol)`
----------------------------------------------------------------

.. class:: tiny

    Photons shown by lines with color representing polarization direction. S-Polarized (perpendicular to plane of incidence) 
    intersection by disc radially directed polarization. Geodesic icosahedron tesselation just for OpenGL visualization, 
    actual OptiX geometry is perfect sphere.

.. image:: /env/graphics/ggeoview/rainbow-spol-disc-incident-sphere.png
   :width: 900px
   :align: center


:small:`2ns later, Several Bows Apparent`
---------------------------------------------------------------------

.. image:: /env/graphics/ggeoview/rainbow-spol-disc-several-bows.png
   :width: 900px
   :align: center


:small:`Opticks/Geant4 Photon Step Sequence Comparison`
---------------------------------------------------------------------

.. class:: small

   * BT/BR: boundary transmit/reflect
   * TO/SC/SA: torch/scatter/surface absorb

   **1M flag sequences indexed using CUDA Thrust, 0.040 s**

.. raw:: html

    <pre class="mypre">
     64-bit uint  Opticks    Geant4    chi2                                      (tag:5,-5)   

            8ccd   819160    819654    0.15  [4 ] TO BT BT SA                    (cross droplet) 
             8bd   102087    101615    1.09  [3 ] TO BR SA                       (external reflect)
           8cbcd    61869     61890    0.00  [5 ] TO BT BR BT SA                 (bow 1)
          8cbbcd     9618      9577    0.09  [6 ] TO BT BR BR BT SA              (bow 2)
         8cbbbcd     2604      2687    1.30  [7 ] TO BT BR BR BR BT SA           (bow 3)
        8cbbbbcd     1056      1030    0.32  [8 ] TO BT BR BR BR BR BT SA        (bow 4)
           86ccd     1014      1000    0.10  [5 ] TO BT BT SC SA
       8cbbbbbcd      472       516    1.96  [9 ] TO BT BR BR BR BR BR BT SA     (bow 5)
             86d      498       473    0.64  [3 ] TO SC SA
      bbbbbbbbcd      304       294    0.17  [10] TO BT BR BR BR BR BR BR BR BR  (bow 8+ truncated)
      8cbbbbbbcd      272       247    1.20  [10] TO BT BR BR BR BR BR BR BT SA  (bow 6)
      cbbbbbbbcd      183       161    1.41  [10] TO BT BR BR BR BR BR BR BR BT  (bow 7 truncated) 
             4cd      161       139    1.61  [3 ] TO BT AB
           8c6cd      153       106    8.53  [5 ] TO BT SC BT SA
            86bd      138       142    0.06  [4 ] TO BR SC SA
            4ccd      100       117    1.33  [4 ] TO BT BT AB
    </pre>



:small:`Rainbow deviation angles`
----------------------------------------------------------

.. class:: tiny

    Deviation angle distribution of all 3M photons. Photon wavelengths
    from Plankian 6500K blackbody spectrum (implemented with inverse CDF GPU texture lookup).
    Simulated "images" obtained from wavelength spectrum of each bin using CIEXYZ weighting functions 
    converted into sRGB/D65 colorspace.   
    The two images exposed for luminance (CIE-Y) of max bin of 1st and 2nd bows.

.. image:: /env/numerics/npy/rainbow16_deviation_angle.png
   :width: 900px
   :align: center


:small:`Rainbow Spectrum for 1st six bows`
----------------------------------------------------------

.. class:: tiny

    Spectra obtained by selecting photons by internal reflection counts. 
    Colors obtained from spectra of each bin using CIEXYZ weighting functions 
    converted into sRGB/D65 colorspace.  
    Exposures by normalizing to bin with maximum luminance (CIE-Y) of each bow. 
    White lines indicate geometric optics prediction of deviation angle ranges 
    of the visible range 380-780nm. 180-360 degrees signifies exit on same 
    side of droplet as incidence.  
 

.. image:: /env/numerics/npy/rainbow6-spectrum.png
   :width: 900px
   :align: center






:small:`1M Rainbow S-Polarized, Comparison Opticks/Geant4`
------------------------------------------------------------

.. class:: tiny

   Deviation angle(degrees) of 1M parallel monochromatic photons in disc shaped beam incident on water sphere.
   Numbered bands are visible range expectations of first 11 rainbows.
   S-Polarized intersection (E field perpendicular to plane of incidence) arranged by directing polarization radially.

.. image:: /env/optix/cfg4/rainbow-cfg4-spol.png
   :width: 800px
   :align: center

:small:`1M Rainbow P-Polarized, Comparison Opticks/Geant4`
------------------------------------------------------------

.. class:: tiny

   Deviation angle(degrees) of 1M parallel monochromatic photons in disc shaped beam incident on water sphere.
   Numbered bands are visible range expectations of first 11 rainbows.
   P-Polarized intersection (E field within plane of incidence) arranged by directing polarization tangentially.

.. image:: /env/optix/cfg4/rainbow-cfg4-ppol.png
   :width: 800px
   :align: center



:small:`Performance Comparison Opticks/Geant4`
----------------------------------------------------------

.. sidebar:: Rainbow 1M S-Pol

    .. class:: small

        .. image:: /env/optix/cfg4/rainbow-cfg4-2.png
           :width: 500px
           :align: center


.. class:: small

    **Average Propagate Time for 1M photons** 

    MacBook Pro 2013, NVIDIA GeForce GT 750M 2GB (384 cores)

    ====================  =================  =================  ================== 
     Rainbow Test            Geant4 10.2       Opticks Interop     Opticks Compute      
    ====================  =================  =================  ================== 
     1M (S-Pol)               56 s               1.62 s            0.28 s         
     1M (P-Pol)               58 s               1.71 s            0.25 s         
    ====================  =================  =================  ================== 

    * **Opticks ~200X Geant4** with only 384 core mobile GPU
    * multi-GPU workstation up to 20x more cores 
    * :red:`photon propagation time will become effectively zero`
   
    **Opticks Interop/Compute Modes**

    * perfectly identical results, monitored by digest
    * Interop: uses OpenGL buffers allowing visualization
    * Compute: uses OptiX buffers
    * Compute (and G4) propagated events can be visualized 
      by loading into interop mode viewer



:small:`Summary`
-----------------------------

.. sidebar:: Opticks Performance 

   .. class:: small
     
      * **200x Geant4** with mobile GPU
      * **>> 200x** expected with workstation GPUs 
      * :red:`photon propagation time --> zero`

.. class:: small

   **Opticks Transition Complete**

   * squeezed JUNO geometry onto GPU with instancing
   * devised mesh fixing workaround for G4Polyhedron bug 
   * developed analytic PMT representation
   * photons fully GPU resident, only copy PMT hits to CPU

   **Opticks Validation**

   * developed validation machinery *CfG4*
   * simple rainbow geometry matches Geant4

   **Next Tests**

   * Prism, Lens, Fresnel Rhomb (2x TIR)
   * Single Analytic PMT 
   * Full geometries 



:i:`JPMT Wide`
----------------------

.. class:: tiny

   http://simoncblyth.bitbucket.org/env/graphics/ggeoview/jpmt-wide_half.png

  

:i:`JPMT Before Contact`
-------------------------

.. class:: tiny

   http://simoncblyth.bitbucket.org/env/graphics/ggeoview/jpmt-before-contact_half.png


:i:`JPMT After Contact`
-------------------------

.. class:: tiny

   http://simoncblyth.bitbucket.org/env/graphics/ggeoview/jpmt-after-contact_half.png


:i:`JPMT Approach`
----------------------

.. class:: tiny

   http://simoncblyth.bitbucket.org/env/graphics/ggeoview/jpmt-approach_half.png


:i:`JPMT Arrival`
----------------------

.. class:: tiny

   http://simoncblyth.bitbucket.org/env/graphics/ggeoview/jpmt-arrival_half.png


:i:`JPMT Inside Outside`
-------------------------

.. class:: tiny

   http://simoncblyth.bitbucket.org/env/graphics/ggeoview/jpmt-inside-outside_half.png


.. sidebar:: Photon History Selection

   Only *CK BT BT BT SA*, three boundary transmits before surface absorption 


:i:`JPMT Headview`
----------------------

.. class:: tiny

   http://simoncblyth.bitbucket.org/env/graphics/ggeoview/jpmt-headview_half.png


:i:`JPMT Backview`
----------------------

.. class:: tiny

   http://simoncblyth.bitbucket.org/env/graphics/ggeoview/jpmt-backview_half.png



:small:`EXTRAS : Details and Tests in progress`
--------------------------------------------------

.. class:: small

   **Details**

   * Optical Photons now fully GPU resident
   * Volume to Surface Translation details need validation
   * OptiX Geometry Experience

   **Tests requiring G4 comparison**

   * Prism S-Polarized
   * Prism P-Polarized
   * Prism Deviation vs Incident angles for 10 wavelengths
   * Lens focussing 


:small:`Optical Photons now fully GPU resident`
--------------------------------------------------

.. class:: small

     All photon operations now done on GPU:

     * seeded (assigned gensteps)
     * generated 
     * propagated
     * indexed material/interaction histories 
     
     Only PMT hits need to be copied back to CPU


.. class:: tiny

     Thrust/CUDA/OptiX interop used to implement


:small:`Volume to Surface Translation details need validation`
------------------------------------------------------------------

.. class:: small
    
   Zoomed view of PMT edge (mm): showing 3mm Pyrex, 

   .. image:: /env/nuwa/detdesc/pmt/analytic-pmt-detail.png
      :width: 600px
      :align: center

   **Volume based geometry can get away with coincident
   boundaries, Surface based geometry cannot**


:small:`OptiX Geometry Experience`
--------------------------------------

.. class:: small

   **Geometry Issues Fixed/Avoidable**

   * triangulated geometry leaks when shoot millions of photons at cracks (1)
   
   * bounding boxes that touch geometry cause leaks, slightly   
     enlarging the boxes avoids leak (<1 in 3M)  
   

.. class:: tiny

    (1) more of a problem for testing than actual usage



:small:`Prism S-Polarized`
------------------------------------------------------------------

.. class:: small

    Quadrant of cylindrically directed S-polarized photons at 10 wavelengths (from 100 to 800 nm) 
    incident from left.  

.. class:: tiny

    S-polarization: perpendicular to incident plane

.. image:: /env/numerics/npy/prism-spol-ripple.png
   :width: 900px
   :align: center


:small:`Prism P-Polarized`
------------------------------------------------------------------

.. class:: small

    Gap in reflection at Brewsters angle is apparent where 
    the P-polarized photons can only be transmitted. 

.. class:: tiny

    P-polarization: not perpendicular to incident plane


.. image:: /env/numerics/npy/prism-ppol-ripple.png
   :width: 900px
   :align: center


:small:`Prism Deviation vs Incident angles for 10 wavelengths`
------------------------------------------------------------------

.. class:: small

   Prism geometry and Snell's law at two refractions allows deviation 
   angle vs incident angle to be predicted.  Comparison of simulation
   results with expectations for 10 wavelengths   
   using refractive index of Schott F2 Flint Glass.

.. image:: /env/numerics/npy/prism-deviation.png
   :width: 900px
   :align: center


:small:`Lens focussing`
----------------------------------------------------------

.. class:: small

    Lens constructed from intersection of two spheres.
    Disc parallel beam incident from left.
    Color represents polarization direction.  2nd reflections 
    are apparent. 


.. image:: /env/graphics/ggeoview/lens-polcolor.png
   :width: 900px
   :align: center



