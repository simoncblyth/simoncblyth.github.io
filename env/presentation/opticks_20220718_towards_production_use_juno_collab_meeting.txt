.. meta::

   :title: Opticks: towards production use, Simon Blyth
   :name: opticks_20220329_progress_towards_production
   :description: (July 2022)
   :notes: 25 min : general status summary and highlight the work since last review : 
   :url: https://juno.ihep.ac.cn/cgi-bin/Dev_DocDB/DisplayMeeting?conferenceid=1079
   :date: Jul 18 14:30(07:30) meeting start, talk 15:45(08:45)

.. include:: my_s5defs.txt

.. include:: s5_background_image.txt



:i:`JUNO+Opticks : Progress Towards Production` 
========================================================================================

.. raw:: html

    <p style="margin-bottom:4cm;" />
    <div class="mytitle">
    <header>
    <h1 style="background-color:lightgrey"> 
        JUNO+Opticks : Progress Towards Production
        <h2 style="background-color:lightgrey;text-align:center"> Open source, https://bitbucket.org/simoncblyth/opticks </h2>
    </h1>
    </header>
    </div>

..

  *Opticks* replaces *Geant4* optical photon simulation with an **equivalent implementation** 
  that benefits from state-of-the-art GPU ray tracing from NVIDIA OptiX. 
  All optically relevant aspects of *Geant4* context must be translated+copied to GPU:

  * geometry : solids, structure, material+surface properties
  * generation : Cerenkov + Scintillation (using **Gensteps** from *Geant4*) 
  * :b:`propagation : Rayleigh scattering, absorption, reemission, boundary`


  Achieving+maintaining **equivalence** is time consuming, BUT:

  * :r:`transformative performance benefits >1000x Geant4`   



.. raw:: html

    <div class="mycredit">
    <h2 style="background-color:lightgrey"> Simon C Blyth &mdash; IHEP, CAS  &mdash; 18 July 2022 </h2>
    </div>


.. s5_talk:: 

    Focus of last months on simulation reinmplementation, now returning to geometry

    


:i:`Geant4OpticksWorkflow`
------------------------------

.. s5_talk::

    A brief reminder of Opticks


:i:`Geant4OpticksWorkflow 2`
------------------------------

.. raw:: html 

    <p style="margin-bottom:1cm;" />


.. sidebar:: :small:`Integrate NVIDIA OptiX with Geant4`
 
  .. class:: small

     :g:`Geometry Translation` + :b:`"Gensteps"`
       :r:`=> entirely offload photon simulation to GPU` 

     * upload translated geometry at initialization
     * only hits need to consume CPU memory 


.. s5_talk::

    Getting the geometry translated is the difficult part






Validation : Opticks-Geant4 A-B testing 
----------------------------------------------

.. sidebar:: :small:`SEvt NumPy arrays : Extreme Detail`

   .. raw:: html

      <pre class="mypre15"> 
      : a.genstep :        (1, 6, 4) : generation param
      : a.seed    :         (10000,) : photon -> genstep
      : a.inphoton:    (10000, 4, 4) : input photon 
      : a.photon  :    (10000, 4, 4) : final photon param
      : a.hit     :     (9633, 4, 4) : hitmasked photon
      : a.seq     :       (10000, 2) : history sequence
      : a.record  :(10000, 10, 4, 4) : steppoint record
      : a.rec     :(10000, 10, 2, 4) : compressed record
      : a.domain  :        (2, 4, 4) : used for compression
      : a.sframe  :        (4, 4, 4) : used for targetting 
      : a.flat    :      (10000, 64) : random numbers tagged
      : a.tag     :       (10000, 4) : compressed tag enum 
      : a.prd     :(10000, 10, 2, 4) : per-ray-data isect
      </pre>

   .. class:: small

      :b:`Every random consumed by every photon step`


.. class:: normal 

   :huge:`A` : Opticks : GPU geometry + optical sim.

   * full step point recording (QEvent, SEvt)

   :huge:`B` : Geant4 simulation
   
   * full step point recording (U4Recorder, SEvt)

   :huge:`A-B` : comparison via python/NumPy analysis

   **Random Aligned**
      direct comparison of photon steppoint record and history arrays 

   **Non-aligned**  
      statistical comparison of history fractions 



.. s5_talk::

    A - B  


:small:`July => ??? : A-B validation iteration : random alignment, deviation checks`
-------------------------------------------------------------------------------------

.. class:: normal 

    March : :b:`Shifted focus, geom issues => optical sim`,  July : :r:`A-B` iteration starting 

.. image:: /env/presentation/notes/progress/2022_jul.png
   :align: center
   :width: 1000px


.. class:: small 

   :huge:`A` : Opticks GPU sim,  :huge:`B` : Geant4 CPU sim (both fully instrumented: point recording, histories, tagged random consumption) 


.. comment 

   https://bitbucket.org/simoncblyth/opticks/src/master/notes/progress.rst  


.. s5_talk::

    This link provides month by month progress notes



Opticks Packages : Many Removed, Many Added
--------------------------------------------

.. comment
    created by bin/packages.py:presentation_page with bin/stats.sh 


.. class:: small

    +-------------------------+-------------------------+--------------------------------------------------------------------------------+
    |                 pkg     |         hh/cc/cu/py     |                                      Old CUDA Simulation and Visualization     |
    +=========================+=========================+================================================================================+
    |         :r:`cudarap`    |        :r:`16/8/3/0`    |                                                     :r:`old CUDA interface`    |
    +-------------------------+-------------------------+--------------------------------------------------------------------------------+
    |       :r:`thrustrap`    |        :r:`20/2/6/1`    |                  :r:`old CUDA thrust interface : photon seeding, indexing`     |
    +-------------------------+-------------------------+--------------------------------------------------------------------------------+
    |        :r:`optixrap`    |       :r:`43/30/3/2`    |            :r:`old optical photon simulation implemented in old OptiX API`     |
    +-------------------------+-------------------------+--------------------------------------------------------------------------------+
    |            :r:`okop`    |       :r:`14/10/1/0`    |                                     :r:`high level pkg on top of optixrap`     |
    +-------------------------+-------------------------+--------------------------------------------------------------------------------+
    |          :r:`oglrap`    |       :r:`38/29/0/0`    |                  :r:`old OpenGL based visualization of opticksgeo geometry`    |
    +-------------------------+-------------------------+--------------------------------------------------------------------------------+
    |       :r:`opticksgl`    |         :r:`9/5/0/0`    |                                    :r:`integrating OpenGL with okop OptiX`     |
    +-------------------------+-------------------------+--------------------------------------------------------------------------------+



.. class:: small

    +-------------------------+-------------------------+--------------------------------------------------------------------------------+
    |                 pkg     |         hh/cc/cu/py     |                                   New Geometry model and CUDA simulation       |
    +=========================+=========================+================================================================================+
    |        :b:`CSG_GGeo`    |         :b:`3/2/0/0`    |                                      :b:`GGeo to CSG geometry translation`     |
    +-------------------------+-------------------------+--------------------------------------------------------------------------------+
    |        :b:`GeoChain`    |         :b:`3/2/0/0`    |                                           :b:`geometry translation testing`    |
    +-------------------------+-------------------------+--------------------------------------------------------------------------------+
    |             :g:`CSG`    |       :g:`37/18/0/7`    |                                                     :g:`New geometry model`    |
    +-------------------------+-------------------------+--------------------------------------------------------------------------------+
    |        :g:`CSGOptiX`    |       :g:`20/14/4/2`    |                                         :g:`CSG intersection with OptiX 7`     |
    +-------------------------+-------------------------+--------------------------------------------------------------------------------+
    |         :g:`qudarap`    |      :g:`43/25/13/1`    |        :g:`CUDA optical photon simulation, CUDA upload, download, textures`    |
    +-------------------------+-------------------------+--------------------------------------------------------------------------------+
    |              :g:`u4`    |       :g:`32/10/0/2`    |                  :g:`New Geant4 interface, genstep collection, U4Recorder`     |
    +-------------------------+-------------------------+--------------------------------------------------------------------------------+
    |           :g:`gdxml`    |         :g:`6/4/0/0`    |                                         :g:`GDML loaded as XML for fixups`     |
    +-------------------------+-------------------------+--------------------------------------------------------------------------------+
    |            :g:`g4cx`    |         :g:`3/2/0/0`    |                  :g:`New top level package integrating Geant4 and CSGOptiX`    |
    +-------------------------+-------------------------+--------------------------------------------------------------------------------+



:g:`green : active development`,   :b:`blue : plan to remove`,   :r:`red : removed`


.. s5_talk::

    Lots of Change 


:small:`Simulation : Why so much had to be re-implemented ?` 
---------------------------------------------------------------

.. class:: small

    * :r:`Huge change unavoidable from new OptiX API` --> :b:`So profit from rethink of simulation code` --> **2nd impl advantage** 

    +------------------------------------------+-----------------------------------------------------+
    |  Old simulation (OptiXRap)               |  New simulation (QUDARap/qsim.h + CSGOptiX)         | 
    +==========================================+=====================================================+
    |  * implemented on top of old OptiX API   | * pure CUDA implementation                          |
    |                                          | * OptiX use kept separate, just for intersection    |
    |                                          |                                                     |
    +------------------------------------------+-----------------------------------------------------+
    |  * rather monolithic .cu                 | * many small headers                                |
    |  * GPU only implementation               | * many GPU+CPU headers                              |
    |  * deep stack of support code            | * shallow stack : QUDARap depends only on SYSRap    | 
    +------------------------------------------+-----------------------------------------------------+
    |  * most code in GPU only context,        | * strict code segregation                           |
    |    even when not needing OptiX or CUDA   |                                                     |
    |                                          |   * code not needing GPU in SYSRap not QUDARap      |
    +------------------------------------------+-----------------------------------------------------+
    |  * testing : GPU only, coarse            | * testing : CPU+GPU , fine-grained                  |
    |                                          | * curand mocking on CPU                             | 
    +------------------------------------------+-----------------------------------------------------+
    |  * limited code sharing between A and B  | * maximal sharing : SEvt.hh, sphoton.h, ...         |
    +------------------------------------------+-----------------------------------------------------+
    |  * timeconsuming manual random alignment | * :b:`new systematic approach to random alignment`  |  
    |    conducted via debugger                |                                                     |
    +------------------------------------------+-----------------------------------------------------+

    **Goals of re-implementation : flexible, modular GPU simulation, easily testable, less code**

    * code reduction, sharing as much as possible between **A** and **B** 
    * fine grained testing on both CPU and GPU, with GPU curand mocking 
    * profit from several years of CUDA experience, eg QSim.hh/qsim.h host/device counterpart pattern:

      * hostside initializes and uploads device side counterpart --> :r:`device side hits ground running` 


.. s5_talk::

    Embrace the change : might as well profit from a rethink 



Opticks Packages : :b:`Many more to be removed`
-----------------------------------------------

.. comment
    created by bin/packages.py:presentation_page with bin/stats.sh 


.. sidebar:: :small:`Strong Code Reduction Potential`

    .. class:: small

        Several :b:`pkgs only used by geo translation`, not sim

        Longer term: revisit geometry translation + viz

        * more direct G4 -> GGeo -> CSG model
        * simplified intermediary "GGeo"

        Same translation in less code: 

        * non-urgent, necessary for maintainability 



.. class:: small

    +-------------------------+-------------------------+--------------------------------------------------------------------------------+
    |                 pkg     |         hh/cc/cu/py     |                                                                       Base     |
    +=========================+=========================+================================================================================+
    |              okconf     |             3/2/0/0     |                                                   config version detection     |
    +-------------------------+-------------------------+--------------------------------------------------------------------------------+
    |          :g:`sysrap`    |      :g:`150/70/1/8`    |                                           :g:`basis types, new array NP.hh`    |
    +-------------------------+-------------------------+--------------------------------------------------------------------------------+
    |        :b:`boostrap`    |       :b:`46/42/0/0`    |                                                            :b:`boost tools`    |
    +-------------------------+-------------------------+--------------------------------------------------------------------------------+
    |             :b:`npy`    |     :b:`181/165/0/6`    |                                      :b:`geo primitives, old array NPY.hpp`    |
    +-------------------------+-------------------------+--------------------------------------------------------------------------------+
    |     :b:`optickscore`    |       :b:`70/62/0/1`    |                                           :b:`old core, argument parsing`      |
    +-------------------------+-------------------------+--------------------------------------------------------------------------------+



.. class:: small

    +-------------------------+-------------------------+--------------------------------------------------------------------------------+
    |                 pkg     |         hh/cc/cu/py     |                                                                  Geometry      |
    +=========================+=========================+================================================================================+
    |            :b:`ggeo`    |       :b:`68/65/0/2`    |                         :b:`complete geometry model : no Geant4 dependency`    |
    +-------------------------+-------------------------+--------------------------------------------------------------------------------+
    |           :b:`extg4`    |       :b:`62/53/0/0`    |                           :b:`Geant4 geometry translation into GGeo model`     |
    +-------------------------+-------------------------+--------------------------------------------------------------------------------+
    |      :r:`opticksgeo`    |        :r:`10/6/0/0`    |                                          :r:`high level pkg on top of ggeo`    |
    +-------------------------+-------------------------+--------------------------------------------------------------------------------+
    |            :r:`cfg4`    |     :r:`126/117/0/3`    |                         :r:`Old Geant4 comparison machinery, eg CRecorder`     |
    +-------------------------+-------------------------+--------------------------------------------------------------------------------+



:g:`green : active development`,   :b:`blue : plan to remove`,   :r:`red : removed`




.. s5_talk::

    Having the final model, gives strong motivation to simplify intermediary geometry model 




:small:`Systematic Approach to Random Alignment of Two Simulations : A side`
---------------------------------------------------------------------------------

.. sidebar:: :small:`sysrap/stag.h enum`

    .. raw:: html

        <pre class="mypre15"> 
         enum {
             stag_undef      =    0,
             stag_to_sci     =    1,
             stag_to_bnd     =    2,
             stag_to_sca     =    3,
             <span class="r">stag_to_abs     =    4,</span>
             stag_at_burn_sf_sd = 5,
             stag_at_ref     =    6,
             stag_sf_burn    =    7,
             stag_sc         =    8,
             stag_to_ree     =    9,
             stag_re_wl      =   10,
             stag_re_mom_ph  =   11,
             stag_re_mom_ct  =   12,
             stag_re_pol_ph  =   13,
             stag_re_pol_ct  =   14,
             stag_hp_ph      =   15
             //stag_hp_ct      =   16
          };   // 4 bit tags pack better
        </pre>

.. class:: small 

    * :b:`run simulation with all random consumption tagged` 

    **qudarap/qsim.h:**

.. raw:: html

    <pre class="mypre15"> 
     459 inline QSIM_METHOD int qsim::propagate_to_boundary(unsigned& flag, 
              curandStateXORWOW& rng, sctx& ctx)
     460 {
     462     const sstate& s = ctx.s ;
     464     const float& absorption_length = s.material1.y ;
     465     const float& scattering_length = s.material1.z ;
     471 #ifdef DEBUG_TAG
     472     <span class="b">float u_to_sci = curand_uniform(&rng)</span> ; <span class="r">// burn to align </span>
     473     <span class="b">float u_to_bnd = curand_uniform(&rng)</span> ; <span class="r">// burn to align </span>
     474 #endif
     475     float u_scattering = curand_uniform(&rng) ;
     476     float u_absorption = curand_uniform(&rng) ;
     478 #ifdef DEBUG_TAG
     479     stagr& tagr = ctx.tagr ;
     480     tagr.add( stag_to_sci, u_to_sci);
     481     tagr.add( stag_to_bnd, u_to_bnd);
     482     tagr.add( stag_to_sca, u_scattering);
     483     <span class="r">tagr.add( stag_to_abs, u_absorption);</span>
     491 #endif
     489     float scattering_distance = -scattering_length*logf(u_scattering);
     490     float absorption_distance = -absorption_length*logf(u_absorption);
     ...
    </pre>

.. class:: small

    **sysrap/stag.h/stagr** collects into **tag.npy flat.npy** : :huge:`A`-side straightforward as already control all code 



:small:`Systematic Approach to Random Alignment of Two Simulations : B side`
---------------------------------------------------------------------------------

.. sidebar:: :small:`u4/U4Stack.h enum`

    .. raw:: html

        <pre class="mypre15"> 
        enum {
        U4Stack_Unclassified            = 0,
        U4Stack_RestDiscreteReset       = 1,
        U4Stack_DiscreteReset           = 2,  
        U4Stack_ScintDiscreteReset      = 3,
        U4Stack_BoundaryDiscreteReset   = 4,
        U4Stack_RayleighDiscreteReset   = 5,
        <span class="r">U4Stack_AbsorptionDiscreteReset = 6,</span>
        U4Stack_BoundaryBurn_SurfaceReflectTransmitAbsorb = 7,
        U4Stack_BoundaryDiDiTransCoeff  = 8,
        U4Stack_AbsorptionEffDetect     = 9,
        U4Stack_RayleighScatter         = 10, 
        U4Stack_BoundaryDiMeReflectivity = 11, 
        U4Stack_ChooseReflection         = 12, 
        U4Stack_RandomDirection          = 13, 
        U4Stack_LambertianRand           = 14, 
        U4Stack_Reemission               = 15 // 4-bit better
        };

        u4/InstrumentedG4OpBoundaryProcess.hh
        u4/InstrumentedG4OpBoundaryProcess.cc
        u4/tests/ShimG4OpRayleigh.hh
        u4/tests/ShimG4OpRayleigh.cc  
        u4/tests/ShimG4OpAbsorption.hh
        <span class="b">u4/tests/ShimG4OpAbsorption.cc</span>
        u4/tests/DsG4Scintillation.h
        u4/tests/DsG4Scintillation.cc
        </pre>


.. class:: small 

    * :huge:`A` : collect **curand_uniform** streams eg:(1M,256)
    * *u4/U4Random* : get **G4UniformRand** to supply precooked **u**
    * :b:`manual tagging -> override all u consuming Geant4 code`

    **u4/tests/ShimG4OpAbsorption.cc:**

.. raw:: html

    <pre class="mypre15"> 
     32  void ShimG4OpAbsorption::ResetNumberOfInteractionLengthLeft()
     33 {
     35     G4double u = G4UniformRand() ;
     36     <span class="r">SEvt::AddTag( U4Stack_AbsorptionDiscreteReset, u );</span>
     45     theNumberOfInteractionLengthLeft = -1.*G4Log(u) ;
     49 }

     882 void SEvt::addTag(unsigned tag, float flat){
     883 {
     885     stagr& tagr = current_ctx.tagr ;
     899     tagr.add(tag,flat)  ;
     929 }
     </pre>

.. class:: small

    **sysrap/SEvt.cc:SEvt::AddTag** using same **stagr** struct as :huge:`A`

    **u4/U4Process::ClearNumberOfInteractionLengthLeft**
   
    * makes Geant4 consumption more regular -> possible to align 
    * used from **U4Recorder::UserSteppingAction_Optical**



:small:`A - B : Compare tag arrays with NumPy to check alignment`
---------------------------------------------------------------------  

.. sidebar:: :small:`Aligned : same u, same purpose`

    .. class:: small

          * scatter, absorb, reflect, refract, ... ~almost same
          * => :r:`direct comparison : unclouded by stats`


.. raw:: html

    <pre class="mypre15"> 
    epsilon:~ blyth$ gx
    /Users/blyth/opticks/g4cx
    epsilon:g4cx blyth$ ./ab.sh 

    In [1]: AB(54)                                                                                                                                              
    Out[1]: 
    A(54) : TO BT BR BR BT SA                     B(54) : TO BT BR BR BT SA
           A.t : (1000, 64)                              B.t : (1000, 64)
          A.t2 : (1000, 64)                             B.t2 : (1000, 64)

     0 :     0.7082 :  1 :     to_sci              0 :     0.7082 :  3 : ScintDiscreteReset :
     1 :     0.0797 :  2 :     to_bnd              1 :     0.0797 :  4 : BoundaryDiscreteReset :
     2 :     0.1970 :  3 :     to_sca              2 :     0.1970 :  5 : RayleighDiscreteReset :
     3 :     0.4009 :  4 :     to_abs              3 :     0.4009 :  6 : AbsorptionDiscreteReset :
     4 :     0.3778 :  5 : at_burn_sf_sd           4 :     0.3778 :  7 : BoundaryBurn_SurfaceReflectTransmitAbsorb :
     5 :     0.7441 :  6 :     at_ref              5 :     0.7441 :  8 : BoundaryDiDiTransCoeff :
    ...
    32 :     0.2452 :  1 :     to_sci             32 :     0.2452 :  3 : ScintDiscreteReset :
    33 :     0.5043 :  2 :     to_bnd             33 :     0.5043 :  4 : BoundaryDiscreteReset :
    34 :     0.1788 :  3 :     to_sca             34 :     0.1788 :  5 : RayleighDiscreteReset :
    35 :     0.8004 :  4 :     to_abs             35 :     0.8004 :  6 : AbsorptionDiscreteReset :
    36 :     0.3335 :  5 : at_burn_sf_sd          36 :     0.3335 :  7 : BoundaryBurn_SurfaceReflectTransmitAbsorb :
    37 :     0.7170 :  7 :    sf_burn             37 :     0.7170 :  9 : AbsorptionEffDetect :
    38 :     0.0000 :  0 :      undef             38 :     0.0000 :  0 : Unclassified :

    A : /tmp/blyth/opticks/RaindropRockAirWaterSmall/G4CXSimulateTest/ALL
    B : /tmp/blyth/opticks/RaindropRockAirWaterSmall/U4RecorderTest/ShimG4OpAbsorption_FLOAT_ShimG4OpRayleigh_FLOAT/ALL
    In [2]:              

    sm = np.all( a.seq[:,0] == b.seq[:,0] )            : True       
    ww = np.where( a.seq[:,0] != b.seq[:,0] )[0]       : []         <span class="r"> History alignment : can be accidental </span> 
    we = np.where( A.t.view('|S64') != B.t2.view('|S64') )[0] : []  <span class="b"> Tag enum alignment : much more stringent </span>
    <span class="b"> match sequences of 64 tags by viewing as 64 char string </span> 
    </pre>



``RaindropRockAirWaterSmall_UpXZ1000_chk.png``
------------------------------------------------



:small:`A - B : 1M : RaindropRockAirWaterSmall : simple geometry machinery test`
-----------------------------------------------------------------------------------------------

.. class:: small

    * a.record shape ``(1000000, 10, 4, 4)`` : photon pos/mom/pol/flags/.. at 10 step points 
    * A-B deviation from direct subtraction eg: ``w = np.where(np.abs(a.record-b.record) > 0.01)``

.. raw:: html

    <pre class="mypre15"> 
    epsilon:~ blyth$ ~/opticks/g4cx/ab.sh 

    sm = np.all( a.seq[:,0] == b.seq[:,0] )            : True      <span class="r"> ## all 1M histories match </span>
    we = np.where( A.t.view('|S64') != B.t2.view('|S64') )[0] : [ 41595 114799 125032 158475 174993 243023 ... ]  

    In [2]: seqhis_(a.seq[we,0])    <span class="r">  ## 22/1M not enum aligned : all with truncated record </span>
    Out[2]: ['TO BT SC BR BR BR BR BR BR BR', 'TO BT SC BR BR BR BR BR BR BR', ...

    In [4]: wm = np.where( A.t.view('|S64') == B.t2.view('|S64') )[0] ; wm, len(wm)    <span class="r"> ## select the A-B enum aligned </span>
    Out[4]: array([     0,      1,      2,      3,  ...,  999995, 999996, 999997, 999998, 999999]), 999978

    In [29]: np.abs(a.record[wm] - b.record[wm]).max()     <span class="b"> ## max deviation : 0.018 mm  </span> 
    Out[29]: 0.018722534

    In [30]: np.where( np.abs(a.record[wm] - b.record[wm]) > 0.01 )   <span class="b"> ## select photon step points with deviation > 0.01 </span>  
    Out[30]: 
    (array([ 18157, 125121, 467717, 499537, 624529, 695184, 759091, 779861, 938053]),   <span class="b"> ## photon index </span> 
     array([1, 1, 3, 1, 1, 2, 4, 1, 1]),            <span class="b"> ## step point index </span>
     array([0, 0, 0, 0, 0, 0, 0, 0, 0]),            <span class="b"> ## first photon row is position, time </span> 
     array([2, 2, 2, 2, 2, 0, 2, 2, 2]))            <span class="b"> ## 2:Z 0:X coordinate </span>


    In [31]: dv = wm[np.unique(np.where( np.abs(a.record[wm] - b.record[wm]) > 0.01 )[0])]  <span class="b"> ## deviant indices  </span>

    In [36]: seqhis_(a.seq[dv,0])  <span class="r"> ## deviant step point mostly AB/SC position </span>
    Out[36]: ['TO AB','TO AB','TO BT BT AB','TO AB','TO AB','TO BR AB','TO SC BT BT SA','TO AB','TO AB']
     </pre>

.. class:: small 

    * :r:`22/1M not tag aligned, 9(466)/1M with deviation > 0.01(0.001)`    


:small:`22/1M mis-aligned : tag arrays show alignment lost at 1st BR after SC`
-------------------------------------------------------------------------------------------

.. class:: small

   * Select non-aligned : ``we = np.where( A.t.view('|S64') != B.t2.view('|S64') )[0]``

.. raw:: html

    <pre class="mypre15"> 
    In [4]: AB(we[0])    <span class="r"> ## all 22/1M loose alignment at 1st BR after SC </span>
    Out[4]: A(41595) : TO BT SC BR BR BR BR BR BR BR          B(41595) : TO BT SC BR BR BR BR BR BR BR

     0 :     0.6518 :  1 :     to_sci                  0 :     0.6518 :  3 : ScintDiscreteReset :
     1 :     0.3244 :  2 :     to_bnd                  1 :     0.3244 :  4 : BoundaryDiscreteReset :
     2 :     0.2309 :  3 :     to_sca                  2 :     0.2309 :  5 : RayleighDiscreteReset :
     3 :     0.7327 :  4 :     to_abs                  3 :     0.7327 :  6 : AbsorptionDiscreteReset :
     4 :     0.1133 :  5 : at_burn_sf_sd               4 :     0.1133 :  7 : BoundaryBurn_SurfaceReflectTransmitAbsorb :
     5 :     0.6275 :  6 :     at_ref                  5 :     0.6275 :  8 : <span class="b">BoundaryDiDiTransCoeff</span> :

     6 :     0.4789 :  1 :     to_sci                  6 :     0.4789 :  3 : ScintDiscreteReset :
     7 :     0.6990 :  2 :     to_bnd                  7 :     0.6990 :  4 : BoundaryDiscreteReset :
     8 :     0.9998 :  3 :     to_sca                  8 :     0.9998 :  5 : RayleighDiscreteReset :
     9 :     0.0067 :  4 :     to_abs                  9 :     0.0067 :  6 : AbsorptionDiscreteReset :
    10 :     0.1797 :  8 :         sc                 10 :     0.1797 : 10 : RayleighScatter :
    11 :     0.0088 :  8 :         sc                 11 :     0.0088 : 10 : RayleighScatter :
    12 :     0.5316 :  8 :         sc                 12 :     0.5316 : 10 : RayleighScatter :
    13 :     0.8436 :  8 :         sc                 13 :     0.8436 : 10 : RayleighScatter :
    14 :     0.4477 :  8 :         sc                 14 :     0.4477 : 10 : RayleighScatter :

    15 :     0.4004 :  1 :     to_sci                 15 :     0.4004 :  3 : ScintDiscreteReset :
    16 :     0.8328 :  2 :     to_bnd                 16 :     0.8328 :  4 : BoundaryDiscreteReset :
    17 :     0.0016 :  3 :     to_sca                 17 :     0.0016 :  5 : RayleighDiscreteReset :
    18 :     0.2059 :  4 :     to_abs                 18 :     0.2059 :  6 : AbsorptionDiscreteReset :
    19 :     0.5832 :  5 : at_burn_sf_sd              19 :     0.5832 :  7 : BoundaryBurn_SurfaceReflectTransmitAbsorb :
    20 :     0.7585 :  6 :     at_ref  <span class="r"> <----- ALIGNMENT LOST HERE : DO NOT GET EXPECTED TAG : BoundaryDiDiTransCoeff </span>
                                                      20 :     0.7585 :  3 : ScintDiscreteReset :
    21 :     0.6396 :  1 :     to_sci                 21 :     0.6396 :  4 : BoundaryDiscreteReset :
    22 :     0.9837 :  2 :     to_bnd                 22 :     0.9837 :  5 : RayleighDiscreteReset :
    </pre>

.. class:: small

   * TODO: :b:`run the non-aligned indices in debugger to understand unexpected G4 random consumption` 







:small:`A - B : Deviant Scattering SC and Absorption AB Position : __logf(u)`  
-------------------------------------------------------------------------------

.. sidebar:: :small:`SC/AB distance = -length*logf(u)`

    .. class:: small

         SC/AB lengths often large > 1e6 mm 
        
         small logf(u) deviations scaled up 

         :r:`=> SC/AB position difference`

         SC+AB compete on distance with reaching boundary  

         :b:`=> when SC/AB win : u > 0.998`


    .. raw:: html

        <pre class="mypre15"> 
        -log(u)              u > 0.998 
        -log(1-x) ~= x       x < 0.002 
         </pre>



.. class:: small

    **"Raindrop" geometry : 50mm radius sphere of water in air**

    * near perfect alignment : 22/1M not enum aligned
    * largest deviation ~0.02mm from SC/AB position 

    Previously assumed float/double difference between Opticks/Geant4
  
    * :b:`BUT: changing Geant4 to use float -> almost no difference` 

    **sysrap/tests/logTest.cu : CUDA comparison**

    * ``logf(u)`` 
    * ``__logf(u)`` (used with ``-use_fast_math``) 

    Deviations small, 

    * BUT: relevant ~0.5e-7  for ``u > 0.998``

    :r:`Using KLUDGE_FASTMATH_LOGF reduces SC/AB position deviation`

.. raw:: html

    <pre class="mypre20"> 
    ##define KLUDGE_FASTMATH_LOGF(u) (u < 0.998f ? __logf(u) : __logf(u) - 0.46735790f*1e-7f )
    </pre>



:small:`Start A - B aligned iteration with full JUNO GDML geometry`  
--------------------------------------------------------------------------------

.. sidebar:: :small:`Full geom, but target single PMT`

     .. class:: small

          

         **OPTICKS_INPUT_PHOTON**
              .npy path of input photons (n,4,4)

         **OPTICKS_INPUT_PHOTON_FRAME**
              frame string eg "Hama:0:1000"
                    
         Input photons simplify random consumption
       
         * :r:`no random consumption from generation` 


.. class:: small

    * Simple geometry : ~perfect A-B aligned match 
    * Full geometry : JUST STARTED, CROP OF ISSUES

.. class:: small

   Configure geometry and input photons:

.. raw:: html

     <pre class="mypre15"> 
     geom_     
     oip      
     </pre>


.. class:: small

    Run A and B simulations and "T" simtrace running:

.. raw:: html

     <pre class="mypre15"> 
     cd ~/opticks/g4cx 
     ./gxs.sh       ## A
     ./gxt.sh       ## T  collect "simtrace" arrays of intersect

     cd ~/opticks/u4
     ./u4s.sh       ## B 
     </pre>

.. class:: small 

    ``gxt.sh`` uses "simtrace" arrays to make 2D slice plots (pyvista, matplotlib)

.. raw:: html

     <pre class="mypre15"> 
     cd ~/opticks/g4cx 
     ./gxt.sh ana      
     ./ab.sh           # compare A and B with NumPy 
     </pre>
 


``J000_DownXZ1000_PMT_ellipsoid_transform_again.png``
--------------------------------------------------------

.. class:: small

   ``"simtrace" : scatter plot of intersects, looks like missed ellipsoid transform`` 



``J000_DownXZ1000_virtual_too.png``
--------------------------------------------------------------

.. raw:: html

   <pre>






   </pre> 

.. class:: small

    ``gx ; EYE=0,1000,200 LOOK=0,0,200 ./ab.sh recplot``

    ``A:red, B:blue : virtual Water/Water "hatbox" skipped in A``
          ``prevents alignment``    






``hama_body_log_DownXZ1000_no_issue_with_hama_body_log.png``
--------------------------------------------------------------

.. class:: small

   ``single PMT test : no-such missed ellipsoid transform issue`` 



Next steps in detail
---------------------------------

.. sidebar:: :small:`Full GDML geometry tests + Standalone tests`

    .. class:: small

          * Full GDML geometry -> slow Geant4 startup

          First step to investigate issues:

          * reproduce in small geometry test 
          * -> :b:`fast geometry iteration` 


.. class:: small 

   **Aligned A-B validation iteration**

   Very powerful tool for finding geometry issues

   * complete random aligned iteration 
   * find solutions for bookkeeping + geometry issues eg: 

     * B: Pyrex/Pyrex "microstep" from PMT virtuals : will need stream rewind to stay aligned

   **Non-aligned A-B iteration : statistical comparison**

   * less resource intensive than aligned running : no large tag+flat arrays
   * handle ordinary genstep running, not restricted to input photons 
   * statistical comparison can be used with much larger samples than aligned  

   **Update JUNO-Opticks integration to use new Opticks**

   * integration designed to be simpler 
   * additional identity info for multifilm optical model 

     * check performance with very large textures

   





:small:`Overview`
----------------------------------------------------------------

.. table::
   :align: center

   +------------------------------------------------------------------+
   |   **JUNO Simulation -> Opticks -> GPU**                          |
   +---------------+--------------------------------------------------+
   | Benefits:     |  1. drastically faster GPU sim. in production    |
   |               |  2. improved CPU sim. speed + correctness        |
   +---------------+--------------------------------------------------+
   | Status:       |  * :b:`DONE : OptiX 7 sim. re-implementation`    |
   |               |  * :r:`Started : A-B validation iteration`       |  
   +---------------+--------------------------------------------------+

.. sidebar:: :small:`Next Steps Summary`

   .. class:: small

      * A-B iteration, geom issues
      * update offline JUNO-Opticks integration
      * additions for Yuxiangs multifilm PMT model  
      * performance iteration
      * production optimization

.. class:: normal

   Changed gears:

   * :r:`sim. development` -> :b:`geometry debug`   

   **Many Thanks to : Yuxiang Hu**

   * More pioneer users very welcome


.. table::
   :align: center

   +--------------------------------------------------+-----------------------------------------+
   | https://bitbucket.org/simoncblyth/opticks        | code repository                         |                   
   +--------------------------------------------------+-----------------------------------------+
   | https://simoncblyth.bitbucket.io                 | presentations and videos                |
   +--------------------------------------------------+-----------------------------------------+










.. comment

    cxs_debug_moi37684_repeated_step_point.png
    ---------------------------------------------

    cxs_debug_moi37684_yellow_epsilon_looks_appropriate.png
    ---------------------------------------------------------



