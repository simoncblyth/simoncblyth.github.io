
.. meta::

   :title: JUNO-Opticks : Jan 2022 Status 
   :name: opticks_20220118_juno_collaboration_meeting
   :description: (Jan 2022) 
   :notes: progress update 

.. include:: my_s5defs.txt

.. include:: s5_background_image.txt

.. comment

    TODO

    Cerenkov layout, even though probably not time to present

    * write the s5_talk for all slides

    Planning Slide

    * putting together OptiX 7 with sim  
    * geom coincidence fixes
    * new PMT optical model 




    http://localhost/env/presentation/opticks_20211117.html
        Opticks : JUNO PMT Modelling Issue
        ZSolid 

    http://localhost/env/presentation/opticks_autumn_20211019.html
        Opticks Autumn Progress
        * planar gensteps

    http://localhost/env/presentation/juno_opticks_cerenkov_20210902.html
        "JUNO Opticks : Summer Progress" 
        s2 Cerenkov improvements, resorting to double precision gets match

    http://localhost/env/presentation/lz_opticks_optix7_20210727.html
        "LZ-Opticks-NVIDIA OptiX 6->7 Notes : Qudarap pure CUDA photon generation"
        overview notes on Cerenkov double/float : maybe include


.. comment

    opticks_202201XX_juno_collaboration_meeting

    Dear JUNO collaborators,
     
    The 19th JUNO Collaboration Meeting will be held in a month (Jan. 17 - Jan. 28,
    2022) . We will use the same format as last one in July.
     
    The plenary sessions will be on Jan. 26-28. Tentatively, the meeting time will
    be 15:00-18:00 Beijing (8:00-11:00 CERN , 10:00-13:00 Moscow, and 23:00-2:00
    LA), unless we have more favorable time slots. Before that we will have
    parallel sessions and reviews, organized by L2s and review chairs.
     
    L2s and Review Chairs: Please determine the parallel meeting and review time,
    and fill in the table https://jupyter.ihep.ac.cn/-fqkyyEURlm3wicBi8niFg?both



    Dear all,

    We will NOT have JUNO physics/simulation meeting on tomorrow (Dec 24) and next
    week (Dec 31). Happy holidays!

    As usual, we will have parallel sessions during the Jan. collaboration meeting,
    please contact with me and Weidong if you would like to present a talk.

    Regards, Liangjian Wen


    Dear Ziyan, Weidong, Liangjian, 

    Happy New Year to you all, 
    I hope it will prove be a much better one than the last for everyone.  
    Thank you for the reminder Ziyan.

    I would like to give a report: 

        JUNO+Opticks Photons : Validation and Deployment Plan

    A time slot of 20 min will be sufficient. 
    Is the day of the simulation session scheduled yet ?

    I have agreed to give a remote talk on Opticks at an Innovation in HEP workshop 
    in Hong Kong which I believe is on the 15th January although I have not 
    received confirmation of the date and time yet. 

    If possible it would be best to avoid having to give the two talks on the same day. 

    Simon


:i:`JUNO+Opticks Photons : Validation and Deployment Plan` 
========================================================================================

.. raw:: html

    <p style="margin-bottom:4cm;" />
    <div class="mytitle">
    <header>
    <h1 style="background-color:lightgrey"> 
        JUNO+Opticks Photons : Validation and Deployment Plan   
        <h2 style="background-color:lightgrey;text-align:center"> Open source, https://bitbucket.org/simoncblyth/opticks </h2>
    </h1>
    </header>
    </div>

..

  *Opticks* replaces *Geant4* optical photon simulation with an **equivalent implementation** 
  that benefits from state-of-the-art GPU ray tracing from NVIDIA OptiX. 
  All optically relevant aspects of *Geant4* context must be translated+copied to GPU:

  * :b:`geometry : solids, structure, material+surface properties`
  * generation : Cerenkov + Scintillation (using **Gensteps** from *Geant4*) 
  * propagation : Rayleigh scattering, absorption, reemission, boundary

  Achieving+maintaining **equivalence** is time consuming, BUT:

  * :r:`transformative performance benefits >1000x Geant4`   


.. raw:: html

    <div class="mycredit">
    <h2 style="background-color:lightgrey"> Simon C Blyth, IHEP, CAS &mdash; 18 Jan 2022, JUNO Collaboration Meeting </h2>
    </div>


.. s5_talk:: 

    Most recent work has been focussed on fixing geometry issues
    


:i:`Geant4OpticksWorkflow`
------------------------------

.. s5_talk::

    A brief reminder of Opticks


:i:`Geant4OpticksWorkflow 2`
------------------------------

.. raw:: html 

    <p style="margin-bottom:1cm;" />


.. sidebar:: :small:`Integrate NVIDIA OptiX with Geant4`
 
  .. class:: small

     :g:`Geometry Translation` + :b:`"Gensteps"`
       :r:`=> entirely offload photon simulation to GPU` 

     * upload translated geometry at initialization
     * only hits need to consume CPU memory 


.. s5_talk::

    Getting the geometry translated is the difficult part



Geometry/Translation Issues Summary
--------------------------------------

.. sidebar:: :small:`Other Geometry/Translation Issues`


    .. class:: small

       **Fastener base_steel : multiple-Rmin Polycone** 

       * FIXED : :b:`improved Opticks translation`

       **Hamamatsu neck : cylinder minus torus**

       * spurious Geant4 intersects observed
       * AVOIDED : :b:`polycone neck now default` 

       **PMT mask : CSG coincidence issue**

       * FIXED : :b:`straightforwardly at Geant4 level`  

       **XJanchorConstruction : spurious G4 intersects**

       * TODO : :b:`not fixed by expanding cylinder` 

       **SJReceiverConstruction**

       * note disjoint union : Geant4 docs advise against


.. class:: small 

    **Fastener : interfering subtraction-of-subtraction issue**

    ``--additionacrylic-simplify-csg`` 
         * TODO: further checks before making it default  
         * could add "cavity" volume to avoid geo change

    * :b:`PMTs do not CSG subtract cavity in Pyrex for Vacuum...`
    * :r:`favor volume heirarchy over complicated CSG`  

    **Cutdown PMT breaks Opticks translation**

    * profligate G4IntersectionSolid cutdowns => overlarge CSG tree
    * FIXED with **ZSolid** : actually cuts the CSG tree 
    * :r:`expect significant Opticks + Geant4 speedups`

    **solidXJfixture : ~10/64 overlaps with fasteners**

    * :r:`fastener/fixture positions need to work together`

    **solidXJfixture : extreme coincidence, many spurious intersects**

    * extreme coincident face issue, difficult to fix at Geant4 level  
    * TODO: :r:`re-implement simpler, fewer constituents`


.. s5_talk::

    Some of the issues are with the source geometry and some are with the translation to the GPU.
    Getting JUNO onto the GPU in order to benefit from state-of-the-art GPU ray tracing
    also improves the speed and correctness of the CPU simulation.



Other Progress Summary 
------------------------

.. class:: small 

    **GPU Cerenkov float/double investigations**

    * better precision numerical integration using S2 "sin^2cone_angle" 
    * developed inverse transform lookup based Cerenkov wavelength generation 

      * faster than rejection sampling
      * copes better with float precision than rejection sampling  

.. s5_talk::

    I do not expect to have time to go into details of some progress on Cerenkov 



Outline
----------

.. class:: small

   * 2D Opticks Geometry Slicing
   * PMT Mask Modelling Fix 
   * Fastener : interfering subtraction-of-subtraction issue
   * 2D Geant4 Geometry Slicing
   * Cutdown PMT breaks Opticks translation  
   * Render Speed Check
   * History Matching Check
   * Investigate XJfixtureConstruction Solid
   * Investigate XJfixtureConstruction Positions
   * Investigate XJanchorConstruction Solid
   * Investigate SJReceiverConstruction Solid


.. s5_talk::

   For clarity mt slides are grouped into these topics


:i:`2D Opticks Geometry Slicing`
---------------------------------

.. raw:: html

    <p style="margin-bottom:5cm;" />

    <h1>2D Opticks Geometry Slicing </h1>
   

.. s5_talk::

    First topic is a new way of make 2D slices through 
    geometry that has proved very useful for debugging  


:small:`Planar 2D ray tracing to give slice renders for translated geometry debug`
----------------------------------------------------------------------------------------------------- 

.. image:: /env/presentation/QEventTest/planar_gensteps.png
   :width: 500px
   :align: right

.. class:: small

   New transform enabled **TORCH** genstep **(num_gs,6,4,4)**

   * 1*int4 : config enums etc.., number of photons to generate
   * 1*float4 : local frame position
   * 4*float4 : :r:`4x4 local to global transform`  

   **opticks/sysrap/SEvent::MakeCenterExtentGensteps** 

   * termed "center-extent gensteps" (CEGS) 
   * :r:`precise local targetting : used for rendering "slices"` 

   Transform local frame photon source positions (eg XZ plane, XYZ grid)  
   into global frame using transforms of any piece of geometry. 
 
   * used GPU side with : **quadarap/qsim.h/qsim::generate_photon_torch**

.. raw:: html

    <pre class="mypretiny">
    671 template &lt;typename T&gt; inline QSIM_METHOD void qsim&lt;T&gt;::generate_photon_torch(quad4& p, curandStateXORWOW& rng, const quad6& gs)
    672 {
    673     p.q0.f = gs.q1.f ;  // start with local frame position, eg (0,0,0)   
    674 
    675     float u = curand_uniform(&rng);
    676     float sinPhi, cosPhi;
    677     sincosf(2.f*M_PIf*u,&sinPhi,&cosPhi);
    678 
    679     //  local frame XZ plane directions
    680     p.q1.f.x = cosPhi ;  p.q1.f.y = 0.f    ;  p.q1.f.z = sinPhi ;  p.q1.f.w = 0.f ;
    681 
    682     qat4 qt(gs) ; // copy 4x4 transform from last 4 quads of genstep 
    683     qt.right_multiply_inplace( p.q0.f, 1.f );   // position            <span class="redbold">transform local->global</span>
    684     qt.right_multiply_inplace( p.q1.f, 0.f );   // direction 
    685 }
    </pre>


.. s5_talk::

    Simple idea to create 2D slices

    * generate rays in a plane using a grid of genstep sources
      collect intersects and plot them with identity information
      to see the slices

    * whats new is putting the 4x4 transform into the gensteps, that allows 
      convenient local frame targetting of any part of the geometry 




:i:`PMT Mask Modelling Fix`
---------------------------------

.. raw:: html

    <p style="margin-bottom:5cm;" />

    <h1>PMT Mask Modelling Fix </h1>
   

.. s5_talk::

    Example of how the 2D view helps


:i:`Hama_1_figs_positions_mpplt_pid.png`
-----------------------------------------

``mask tail "bowl" cutting across PMT bulb ?``


.. s5_talk::

    This is a cross section of the PMT composed of actual intersects onto the geometry 



:i:`Hama_1_figs_positions_mpplt_pid.png 2`
--------------------------------------------

.. sidebar:: :small:`2D slice render composed of actual intersects`

    .. class:: small

       * via transform enabled gensteps (CEGS)
       * intersect positions/identities saved in .npy arrays
       * scatter plotted (matplotlib) with identity key  
       * grid of dots are genstep source positions 

       **actual intersects** => :r:`ideal for debugging` 

       **Contrast with indirect Geant4 OpenGL Viz:**

       * rasterization of a polygonized approximation 


.. s5_talk::

   The directness of this visualization technique and closeness
   to the actual simulation makes it idel for debugging.  



.. comment

    cxr_geochain_hmsk_solidMaskTail_with_coincidence_issue
    -------------------------------------------------------

    cxr_geochain_hmsk_solidMaskTail
    ------------------------------------

    hmsk_solidMaskTail_X4Mesh
    ---------------------------
       


PMT Mask CSG Modelling Fix
------------------------------------

.. class:: small

    coincident face CSG subtraction issue 

    * easily fixed by CSG modelling change
    * enlarge subtracted shape

      * avoid coincident face
      * does not change shape, just modelling

    * :r:`Some such issues are not so easy to fix`

    * Right : OpenGL(pyvista) render of Geant4 polygonized mesh 
    * Below : before/after Opticks GPU ray trace renders


.. s5_talk::

   This issue of the mask cutting across the PMT turned out to be easy to fix, 
   by changing the CSG modelling.



:i:`Fastener`
---------------

.. raw:: html

    <p style="margin-bottom:5cm;" />

    <h1> Fastener : interfering subtraction-of-subtraction issue </h1>


.. s5_talk::

    Now onto the Fastener geometry


:i:`quicktime 2 lAddition_uni_acrylic3`
------------------------------------------

.. sidebar::  :small:`Fasteners : performance+validity` 

    .. class:: small

        * Dark columns are subtracted voids, not the rods that go inside
        * => Complex CSG "Greek Temple" x2
        * => Opticks excess "SI BT BT BT BT AB" cf G4 

        :redbold:`2D render reveals cause : spurious intersects`


.. s5_talk::

    Complicated CSG leads to problems


:i:`StickMPL_all`
-------------------

.. class:: small

   * ``two horizontal green lines just below (0,0) are spurious``  

      * ``=> wrong Water/Acrylic properties used`` 
      * ``Opticks "SI BT BT BT BT AB" excess``  
      * ``CAUSE : poor G4 geometry modelling``
      * ``=> interfering subtraction of subtraction``
     


.. s5_talk::

    Subtracting pipe shape causes the issue, 
    because the pipe is implemented as a subtraction 
    you get an interferening subtraction of a subtraction. 



.. comment


    ``StickMPL_skip_steel``
    --------------------------

    .. raw:: html

        <pre>





        </pre>


    .. class:: small

       * ``cylinder with inner removed + cylinder rods are subtracted from cone``
       * ``two horizontal green lines just below (0,0) should not be there``  

    .. raw:: html

        <pre>





        </pre>

    .. class:: small

       * ``Possible explanation of Opticks "SI BT BT BT BT AB" excess``
       * ``Spurious boundaries may causes wrong Water/Acrylic properties used`` 





``Daughter Cavity``
-------------------------

.. class:: small

   * ``=> pointless`` 
   * ``=> not "the Geant4 way"``
   * ``=> causes sub-sub issue`` 

.. s5_talk::

    Zooming in you can see the cavity and the rods inside. 
    So what is happening is this geometry is doing CSG subtraction to make a 
    cavity for the daughter volumes. 


:small:`Fastener : interfering subtraction-of-subtraction issue`
-----------------------------------------------------------------

.. sidebar:: :small:`Geometry Modelling Experience`

    .. class:: small

        Geant4: Each volume is created by describing its shape and its physical
        characteristics, and then placing it inside a containing volume.

        * :b:`daughter material replaces that of parent`
        * :r:`favor volume hierarchy over complex CSG` 
        * CSG inherently limited, can be expensive/buggy
        * simple CSG avoids problems: 

        **CSG Subtracting Daughter Cavities**

        1. not necessary, complicates CSG
        2. easily doubles expense for no benefit
        3. causes this issue 

        :r:`Vacuum cavity not subtracted from PMT Pyrex ...`
            :r:`So why do that here ?`


.. class:: small 


    **If gap between acrylic cone and steel rods is not important**
    
    Model with hierarchy of 2 volumes:

    * Outer Volume : Acrylic polycone (**without** cavity for rods)
    * Inner Volume : Steel Rods 

    This is the approach taken with option:

    ``--additionacrylic-simplify-csg``

    * :r:`problem is avoided, but some geometry change`
    * currently not the default 


    **If gap between acrylic cone and steel rods is important**

    Model with hierarchy of 3 volumes:

    * Outer Volume : Acrylic polycone 
    * Middle Volume : Water Cylinders 
    * Inner Volume : Steel Rods 



.. raw:: html

    <p style="margin-bottom:4cm;" />

.. class:: tiny

    * https://geant4-userdoc.web.cern.ch/UsersGuides/ForApplicationDeveloper/html/GettingStarted/geometryDef.html

    

.. s5_talk::

    The complexity and the problem can easily be avoided by not doing the pointless subtraction. 
    This option does that.



:small:`How to handle Opticks CSG colocated sub-sub limitation A-(B-C)`
---------------------------------------------------------------------------- 

.. sidebar:: :small:`Executive Summary`

    .. class:: small

        * Simpler modelling avoids issue  
        * Real fix : 

          * time consuming to develop
          * not warranted in this case



.. class:: small

    **Multiple non-interfering CSG subtractions work fine**  

    * problem arises from >1 subtractions "on top of each other", 
 
      * colocation breaks un-coinciding by subtractee expansion 
 
    **CSG Sub. "pipe" cylinder => spurious inner intersects**

    * "pipe" implemented as CSG subtraction 
    * implementing pipe directly as primitive may fix issue

      * significant work, but doable, :redbold:`not a general fix`  

    :b:`Problem Arises from inherent CSG fragility regarding coincident faces`

    **Possibility : Volume-centric CSG Implementation more like Geant4 ?**
      
    * more robust (presumably)
    * slower, keep asking "is this point inside this constituent subtree ?"
    * uncertain development work to implement on GPU, eg:   

      * CUDA code generation of SDF (signed distance functions) for all CSG subtrees of all solids

    **Opticks CSG is surface-centric**

    * more fragile but inherently faster that Geant4 implementation 
    * identical results to Geant4 so long as coincident faces are avoided 



.. s5_talk::

    Avoiding the issue is the fastest way. 
    Other possibilities would be time consuming to develop.




.. comment

    :i:`uni_acrylic3_0_figs_positions_mpplt_pid.png`
    --------------------------------------------------

    ``cxs.sh OptiX 7, 2D intersect scatter plots``

    ``spurious intersects evident``

    ``* interfering subtraction-of-subtraction issue``


    :i:`uni_acrylic1_0_figs_positions_mpplt_pid.png`
    --------------------------------------------------

    ``--additionacrylic-simplify-csg``
         ``do not subtract cavities for daughter volumes``


    uni_acrylic3_vs_1 
    ---------------------

    TOO SMALL 




:i:`2D Geant4 Geometry Slicing`
---------------------------------

.. raw:: html

    <p style="margin-bottom:5cm;" />

    <h1>2D Geant4 Geometry Slicing </h1>
   

.. s5_talk::

    Because the 2D cross sections at Opticks level has proved so useful, 
    I implemented something similar at Geant4 level. 


:small:`X4IntersectSolidTest : Geant4 2D cross-sections of single G4VSolid`
---------------------------------------------------------------------------------------------- 

.. class:: small

    * https://bitbucket.org/simoncblyth/opticks/src/master/extg4/xxs.sh
    * https://bitbucket.org/simoncblyth/opticks/src/master/extg4/tests/X4IntersectSolidTest.cc
    * https://bitbucket.org/simoncblyth/opticks/src/master/extg4/tests/X4IntersectSolidTest.py

    1. get G4VSolid from j/PMTSim with :b:`PMTSim::GetSolid`
    2. SEvent::GenerateCenterExtentGenstepsPhotons creates grid of 2D planar "rays"  
    3. X4Intersect::scan uses X4Intersect::Distance and collects intersect positions into NP array
    4. X4IntersectSolidTest.py presents the intersect positions with scatter plots      

::

    G4double X4Intersect::Distance(const G4VSolid* solid, 
              const G4ThreeVector& pos, const G4ThreeVector& dir)
    {
        EInside in =  solid->Inside(pos) ; G4double t = kInfinity ;
        switch( in ) {
            case kInside:  t = solid->DistanceToOut( pos, dir ) ; break ;
            case kSurface: t = solid->DistanceToOut( pos, dir ) ; break ;
            case kOutside: t = solid->DistanceToIn(  pos, dir ) ; break ; }
        return t ;
    }


.. s5_talk::

     The gensteps are same, just this time it uses Geant4 distance functions
     to find the intersect positions.



:r:`body_solid_nurs` 
----------------------

* ``2D scatter plot of Geant4 intersects from planar genstep grid``
* ``spurious Geant4 cylinder-torus neck intersects visible``

.. s5_talk::

    So again what you get is a 2D view composed of intersects.

    Geant4 CSG can cope with worse geometry than Opticks CSG can, 
    but it is not immune to bad intersects : here you see some 
    from the old cylinder minus torus neck.  
        

:r:`body_solid_nurs_pcnk` 
--------------------------

* ``G4Polycone neck avoids the spurious intersects``


.. s5_talk::
  
    The polycone neck avoids the spurious intersects


:r:`body_solid` 
-----------------

* ``after real surface "cutdown" still have spurious G4 intersects``

.. s5_talk::

    Cut down doesnt cut away the bad intersects


:r:`body_solid_pcnk` 
----------------------

* ``polycone neck (now default) avoids issue``

.. s5_talk::

    With polycone neck there are no bad intersects.



:small:`X4IntersectVolumeTest : Geant4 2D cross-sections of G4VPhysicalVolume`
---------------------------------------------------------------------------------------------- 

.. class:: small

    * https://bitbucket.org/simoncblyth/opticks/src/master/extg4/xxv.sh
    * https://bitbucket.org/simoncblyth/opticks/src/master/extg4/tests/X4IntersectVolumeTest.cc
    * https://bitbucket.org/simoncblyth/opticks/src/master/extg4/tests/X4IntersectVolumeTest.py

    *G4VPhysicalVolume* has no convenient "Distance" methods ... so scan solids 
    individually and present together after applying structure transforms. 

    1. get *G4VPhysicalVolume* from *j/PMTSim* with :b:`PMTSim::GetPV`
    2. collect and save structure transforms *PMTSim::SaveTransforms* for each solid
    3. *X4Intersect::Scan* each solid and persist in NP arrays
    4. present together using *X4IntersectVolumeTest.py* 
  
    * :r:`Gives rapid 2D cross-sections of G4PhysicalVolume` (very little Opticks code used)

    Usage of *xxv.sh* script which runs executable and ipython::

     cd ~/opticks/extg4
     ./xxv.sh 
     GEOM=body_phys ./xxv.sh 


.. s5_talk::

    In addition to single solids, it useful to also see volumes with multiple solids.
    This test does that by putting together intersects from the individual solids 
    using the structure transforms. 


.. comment

    :r:`body_phys_nurs`
    ---------------------

    * ``spurious Geant4 intersects from G4Tubs-G4Torus neck`` 

    :r:`body_phys`
    -----------------

    * ``spurious Geant4 intersects from G4Tubs-G4Torus neck`` 

    :r:`body_phys_nurs_pcnk`
    --------------------------

    * ``G4Polycone neck : simpler, faster, no-spurious intersects`` 




:r:`body_phys_nurs_pdyn`
-------------------------

* ``with dynode geometry and G4Tubs-G4Torus neck``


.. s5_talk::

    Volume plotting intersects with each solid separately and then combines
    then using the structure transforms  


:r:`body_phys_nurs_pcnk_pdyn`
------------------------------

* ``with dynode geometry included and G4Polycone neck``
    
.. s5_talk::

    Dynode geometry is only used in new PMT optical model, 
    but its good to check it anyhow.
  


.. comment

    :r:`body_phys_pdyn`
    ---------------------

    * ``with dynode geometry and G4Tubs-G4Torus neck``


:r:`body_phys_pdyn_pcnk`
-------------------------


.. s5_talk::

    TODO: replace this plot, its older one without staggering 
   





:i:`Cutdown PMT`
-------------------

.. raw:: html

    <p style="margin-bottom:5cm;" />

    <h1> Cutdown PMT breaks Opticks translation </h1>
   

.. s5_talk::

    Cutting down the PMT actually broke the Opticks translation for Hamamatsu 
    and made NNVT very slow. 



:small:`Hamamatsu PMT Solid breaking Opticks : CSG tree height 8 : TOO DEEP`
-----------------------------------------------------------------------------------------------
    
.. raw:: html

    <pre class="mypre11">
    ZSolid::Draw [-1] nameprefix _body_solid_  NODE:19 PRIM:10 UNDEFINED:19 EXCLUDE:0 INCLUDE:0 MIXED:0 Order:IN                            Int
                                                                                                                                            U                       
                                                                                                                                            17                      
                                                                                                                                                                    
                                                                                                                            Uni                     Pol             
                                                                                                                            U                       U               
                                                                                                                            15                      18              
                                                                                                                                                                    
                                                                                                            Uni                     Pol                             
                                                                                                            U                       U                               
                                                                                                            13                      16                              
                                                                                                                                                                    
                                                                                            Uni                     Pol                                             
                                                                                            U                       U                                               
                                                                                            11                      14                                              
                                                                                                                                                                    
                                                                            Uni                     Ell                                                             
                                                                            U                       U                                                               
                                                                            9                       12                                                              
                                                                                                                                                                    
                                            Uni                                     Pol                                                                             
                                            U                                       U                                                                               
                                            5                                       10                                                                              
                                                                                                                                                                    
                            Uni                             Sub                                                                                                     
                            U                               U                                                                                                       
                            3                               7                                                                                                       
                                                                                                                                                                    
            Uni                     Ell             Pol             Tor                                                                                             
            U                       U               U               U                                                                                               
            1                       4               6               8                                                                                               
                                                                                                                                                                    
    Ell             Pol                                                                                                                                             
    U               U                                                                                                                                               
    0               2                                                                                                                                               
                                                                                                                                                                    
    0.0             -2.5            -5.0            -179.2          -210.0          -242.5          -275.0          -385.0          -420.0          3.4     zdelta  
                                                                                                                                                                    
    190.0           0.0             -5.0            -148.4          -130.0          -210.0          -275.0          -350.0          -420.0          190.0   az1     
    0.0             -5.0            -195.0          -210.0          -290.0          -275.0          -365.0          -420.0          -450.0          -183.2  az0     

    I       1_2     II      1_3     III     1_4     IV_tub  IV      IV_tor  1_5     V       1_6     VI      1_8     VIII    1_9     IX      cut     intubs          
    </pre>

.. class:: small

    * ZSolid::Draw Uni:Union Ell:Ellipsoid Pol:Polycone Tor:Torus Int:Intersection Sub:Subtraction
    * 19 Nodes, 10 prims, depth 8 :r:`Use of G4IntersectionSolid to make z-cut prevents tree balancing` 


.. s5_talk::

    This is the CSG tree of the cutdown Hamamatsu PMT with torus neck

    * it breaks the Opticks translation because the automated tree balancing is unable to handle the intersection  





:small:`Hamamatsu PMT Solid : PROFLIGATE G4ItersectionSolid Z-Cut`
-----------------------------------------------------------------------------------------------
    
.. class:: small

   **Bad Practice : Using G4IntersectionSolid to apply Z-cut to PMT** 

   * flexible and convenient cut solid definition
   * BUT :r:`EXCEEDINGLY EXPENSIVE (PROFLIGATE)` : and it breaks Opticks translation
   * every single intersect must traverse CSG tree checking intersects with multiple cutaway constituent primitives
   * :b:`-> pay the price of convenient solid definition easily millions of times per event`

.. raw:: html

     <pre class="mypretiny">

     485     // Reduce the size when real surface is enabled.
     487     if (m_useRealSurface ) {
     ...
     546         const double body_height = m_pmt_h;
     547         const double body_half_height = body_height / 2;
     548         const G4ThreeVector cut_body_displacement(0., 0., m_z_equator-pmt_half_height);
     549         G4VSolid* cut_body_solid = new G4Tubs( GetName() + "_body_solid_intubs",
     550                                               0.,
     551                                               helper_sep_tube_r+1E-9*mm,
     552                                               body_half_height,
     553                                               0., 360.*degree);
     554         body_solid = new G4IntersectionSolid( GetName() + "_body_solid_cut",
     555                                                 body_solid,
     556                                                 cut_body_solid,
     557                                                 NULL,
     558                                                 cut_body_displacement);
     </pre>

.. class:: small

    **SOLUTION** :r:`ACTUALLY CUT THE CSG TREE` using https://github.com/simoncblyth/j/blob/main/PMTSim/ZSolid.hh

::

    G4VSolid* ZSolid::ApplyZCutTree( const G4VSolid* original, double zcut)


.. s5_talk::

   Using ZSolid cutting : avoids the expense and at the same time retains the flexibility 




:small:`j/PMTSim : ZSolid::ApplyZCutTree`
---------------------------------------------

::
 
    G4VSolid* ZSolid::ApplyZCutTree(const G4VSolid* orig, double zcut) 


.. sidebar:: :small:`ZSolid::SetRight`

   .. class:: small 

     *G4BooleanSolid* has no *SetRight* *SetLeft* 
        so *placement new* replace at same address

     * :r:`trick to re-use ctor with different args`

   .. raw:: html

      <pre class="mypretiny">
      G4BooleanSolid* src = dynamic_cast&lt;G4BooleanSolid*&gt;(node) ; 
      G4String name = src->GetName() ; 
      G4VSolid* left = src->GetConstituentSolid(0) ; 

      G4SolidStore::GetInstance()->DeRegister(src);

      src1 = new (src) G4UnionSolid(name, left, new_right)
      assert( src1 == src );  
      </pre>


   .. class:: small 

      Similar trick used to cut G4Polycone *ZSolid::ApplyZCut_G4Polycone*



.. class:: small

  https://github.com/simoncblyth/j/blob/main/PMTSim/ZSolid.hh 

  **Applying Z-cut to G4VSolid CSG Tree** 

  1. classify tree nodes INCLUDE/EXCLUDE against Z-cut
  2. identify "crux" nodes dividing INCLUDE/EXCLUDE subtrees
  3. prune at crux nodes by tree surgery reconnections
  4. repeat until all tree nodes are INCLUDE 
 
  **Pruning and Reconnection** 

  * pruning at non-root "crux" node  

    * identify surviving child
    * change crux parent Left/Right to the survivor

  * pruning at root "crux" node

    * identify surviving child
    * change root to the survivor


  :b:`Geant4 Booleans not intended to be modified` 
      :b:`-> required "placement new" trickery` 


.. s5_talk::

   Geant4 Booleans not intended to be modified : required "placement new" trickery



:small:`ZSolid::ApplyZCutTree classify tree nodes against Z-cut`
---------------------------------------------------------------------------------------------

.. raw:: html

    <pre class="mypre12">
    ZSolid::apply_cut before prune [ 0] nameprefix maker_body_solid_zcut-183.2246_  NODE:15 PRIM:8 UNDEFINED:0 EXCLUDE:4 INCLUDE:7 MIXED:4 Order:IN
                                                                                                            Uni                     
                 I : include                                                                                IE                      
                                                                                                            13                      
                 E : exclude                                                                                                        
                                                                                            Uni                     Pol             
                 IE: mixed include/exclude                                                  IE                      E               
                                                                                            11                      14              
                 X : "crux" node                                                                                                  
                                                                            Uni                     Pol                             
                 S : survivor node                                          IE                      E                               
                                                                            9                       12                              
                                                                                                                                    
                                                            Uni                     Ell                                             
                                                            IE                      E                                               
                                                            7                       10                                              
                                                            X                                                                       
                                            Uni                     Pol                                                             
                                            I                       E                                                               
                                            5                       8                                                               
                                            S                                                                                       
                            Uni                     Pol                                                                             
                            I                       I                                                                               
                            3                       6                                                                               
                                                                                                                                    
            Uni                     Ell                                                                                             
            I                       I                                                                                               
            1                       4                                                                                               
                                                                                                                                    
    Ell             Pol                                                                                                             
    I               I                                                                                                               
    0               2                                                                                                               
                                                                                                                                    
    0.0             -2.5            -5.0            -179.2          -242.5          -275.0          -385.0          -420.0  zdelta  
                                                                                                                                    
    190.0           0.0             -5.0            -162.0          -210.0          -275.0          -350.0          -420.0  az1     
    0.0             -5.0            -183.2          -183.2          -275.0          -365.0          -420.0          -450.0  az0    
 
    I       1_2     II      1_3     III     1_4     IV      1_5     V       1_6     VI      1_8     VIII    1_9     IX              
    </pre>

.. class:: small

    :b:`CSG constituents are classified INCLUDE/EXCLUDE/MIXED against the Z-cut` 


.. s5_talk::

    The technique classifies against the Z-cut



:small:`ZSolid::ApplyZCutTree : (2) prune + reconnect tree`
----------------------------------------------------------------------------------

.. sidebar:: :small:`Tree Stats`

    .. class:: small

       +-------------------------------+-----------------------------------------------------+
       |  CSG node tree                |  Stage                                              |
       +------+---------+--------------+                                                     |
       | node |  leaf   |  height      |                                                     |
       +======+=========+==============+=====================================================+
       |  15  |   8     |  7           |   Original Solid                                    |
       +------+---------+--------------+-----------------------------------------------------+
       |  17  |   9     |  8           |   After "cutting" with **G4IntersectionSolid**      |
       +------+---------+--------------+-----------------------------------------------------+ 
       |  7   |   4     |  3           |   After actual tree cutting *ZSolid::ApplyZCutTree* |
       +------+---------+--------------+-----------------------------------------------------+

       * :r:`same shape using 7 CSG nodes (not 17)`
       * still flexible 
       * :b:`avoids breaking Opticks translation`
       * => :r:`expect substantial Geant4 speedup`



.. raw:: html

    <pre class="mypre12">
    tree::apply_cut after prune and re-classify [ 3] nameprefix maker_body_solid_zcut-183.2246_  
    NODE:7 PRIM:4 UNDEFINED:0 EXCLUDE:0 INCLUDE:7 MIXED:0 Order:IN

                                            Uni                     
                                            I                       
                                            5                       
                                            S                       
                                                                    
                            Uni                     Pol             
                            I                       I               
                            3                       6               
                                                                    
                                                                    
            Uni                     Ell                             
            I                       I                               
            1                       4                               
                                                                    
                                                                    
    Ell             Pol                                             
    I               I                                               
    0               2                                               
                                                                    
                                                                    
    0.0             -2.5            -5.0            -179.2  zdelta  
                                                                    
    190.0           0.0             -5.0            -162.0  az1     
    0.0             -5.0            -183.2          -183.2  az0     
    I       1_2     II      1_3     III     1_4     IV              
    </pre>


.. raw:: html

   <p style="margin-bottom:3cm;" />


.. class:: small

    :r:`Getting JUNO to work on GPU, improves it on CPU too`


.. s5_talk::

    Getting JUNO to work on GPU, improves it on CPU too 


:red:`maker_body_solid_zcut-500.0` 
----------------------------------

.. s5_talk::

    This is what I mean by retaining flexibility, the z-cut is an input to the tree cutting leading to 



:red:`maker_body_solid_zcut-400.0`
----------------------------------

.. s5_talk::

   -400



:red:`maker_body_solid_zcut-350.0`
----------------------------------

.. s5_talk::

   -350




:red:`maker_body_solid_zcut-300.0`
----------------------------------

.. s5_talk::

   -300




:red:`maker_body_solid_zcut-200.0`
----------------------------------

.. s5_talk::

   -200





:red:`maker_body_solid_zcut-183.25`
------------------------------------

.. s5_talk::

   Actual




:red:`maker_body_solid_zcut-100.0`
------------------------------------

.. s5_talk::

   -100




:red:`maker_body_solid_zcut-0.0`
----------------------------------


.. s5_talk::

   0




:red:`maker_body_solid_zcutp100.0`
------------------------------------

.. s5_talk::

   100





:i:`Render Speed Check`
---------------------------

.. raw:: html

    <p style="margin-bottom:5cm;" />

    <h1> Render Speed Check </h1>
   

.. s5_talk::

   After fixing geometry issues, it good to check render speed, because that 
   is limited by the same thing that simulation is and gives you pictures that 
   are good for debugging. 


:i:`cxr_overview_emm_t0_moi_-1_ALL.jpg`
-----------------------------------------

.. raw:: html

    <pre>



    </pre>


.. sidebar:: :small:`JUNO Opticks OptiX 7 Ray-trace`

    .. class:: small

        "CSGFoundry" CPU/GPU Geometry 

        * :redbold:`purely analytic CSG, no triangles` 

        Fast Render => Fast Simulation 



.. s5_talk::

   JUNO render using OptiX 7 with the CSGFoundry model.

   Note that there are no triangles here, this is a purely analytic ray trace with 
   the geometry that the simulation will use.


    
:i:`cxr_overview_emm_t0,_moi_-1.jpg`
-----------------------------------------------------------------

``-e t0, : NOT 0 : 3084:sWorld : exclude global remainder volumes`` 

.. s5_talk::

   Exclude global remainder volumes, ie render only instanced 


:i:`cxr_overview_emm_image_grid_overview`
-------------------------------------------

``Comparison of ray traced render times of different geometry`` 
  ``simple way to find issues, eg over complex CSG, overlarge BBox`` 

.. s5_talk::

   Ray trace rendering performance provides natural way to look for issues


:i:`sWaterTube_image_grid_cxr_view`
-------------------------------------------

``Same viewpoint inside JUNO Central Detector, vary included volumes``
   ``ray trace performance very sensitive to geometry and its modelling => BVH structure``

.. s5_talk::

   Ray trace rendering performance provides natural way to look for issues






:small:`[Dec 2021] JUNO : OptiX 7 Ray Trace Times ~2M-pix : TITAN RTX`
------------------------------------------------------------------------

.. sidebar:: :small:`Same viewpoint, vary GPU geometry`

   .. class:: small

        * **-e** : controls components : "t" means ~ (NOT) 
        * **time(s)** : GPU ray trace CUDA launch time
        * **relative** : compares to "ONLY PMT" baseline

        **Recent Geometry Fixes**

        * :b:`fix profligate PMT modelling` 
        * :b:`simpler Acrylic fastener` 
        * :b:`avoid overlarge Fastener BBox`  
        * :b:`fix Polycone inner overlap`
 
   .. class:: small

        :r:`Small-ish time range 1:15 (previously 1:600)`
          :r:`suggests no bad bottlenecks remaining`

        **Substantial speedup after fixing geometry issues**

        :b:`ALL PMTs` :  0.0097 -> 0.0061  (x1.6 faster) 

        :b:`ALL` :  0.6240 -> 0.0054 (x155 faster) 


.. comment

   * **3084:sWorld** (too many non-instanced Prim)

.. class:: tiny

    +---+----------+------------------+------------------+------------------------------------------------------------------------------+
    |idx|        -e|       time(s)    |      relative    |    enabled geometry description 3dbec4dc                                     |
    +===+==========+==================+==================+==============================================================================+
    |  0|        5,|        0.0004    |        0.0643    |    ONLY: 1:sStrutBallhead                                                    |
    +---+----------+------------------+------------------+------------------------------------------------------------------------------+
    |  1|        9,|        0.0004    |        0.0658    |    ONLY: 130:sPanel                                                          |
    +---+----------+------------------+------------------+------------------------------------------------------------------------------+
    |  2|        7,|        0.0005    |        0.0782    |    ONLY: 1:base_steel                                                        |
    +---+----------+------------------+------------------+------------------------------------------------------------------------------+
    |  3|        8,|        0.0006    |        0.0966    |    ONLY: 1:uni_acrylic1                                                      |
    +---+----------+------------------+------------------+------------------------------------------------------------------------------+
    |  4|        6,|        0.0006    |        0.1009    |    ONLY: 1:uni1                                                              |
    +---+----------+------------------+------------------+------------------------------------------------------------------------------+
    |  5|        1,|    :b:`0.0009`   |    :b:`0.1476`   |:b:`ONLY: 5:PMT_3inch_pmt_solid`               :b:`FAST cf 20in`              |
    +---+----------+------------------+------------------+------------------------------------------------------------------------------+
    |  6|        4,|        0.0015    |        0.2386    |    ONLY: 4:mask_PMT_20inch_vetosMask                                         |
    +---+----------+------------------+------------------+------------------------------------------------------------------------------+
    |  7|        3,|    :r:`0.0033`   |    :r:`0.5373`   |:r:`ONLY: 5:HamamatsuR12860sMask`              :r:`SLOW cf 3in`               |
    +---+----------+------------------+------------------+------------------------------------------------------------------------------+
    |  8|        0,|        0.0040    |        0.6556    |    ONLY: 3084:sWorld                                                         |
    +---+----------+------------------+------------------+------------------------------------------------------------------------------+
    |  9|        2,|    :r:`0.0040`   |    :r:`0.6627`   |:r:`ONLY: 5:NNVTMCPPMTsMask`                   :r:`SLOW cf 3in`               |
    +---+----------+------------------+------------------+------------------------------------------------------------------------------+
    | 10|       t4,|        0.0050    |        0.8307    |    EXCL: 4:mask_PMT_20inch_vetosMask                                         |
    +---+----------+------------------+------------------+------------------------------------------------------------------------------+
    | 11|       t2,|        0.0051    |        0.8391    |    EXCL: 5:NNVTMCPPMTsMask                                                   |
    +---+----------+------------------+------------------+------------------------------------------------------------------------------+
    | 12|       t3,|        0.0052    |        0.8514    |    EXCL: 5:HamamatsuR12860sMask                                              |
    +---+----------+------------------+------------------+------------------------------------------------------------------------------+
    | 13|       t6,|        0.0053    |        0.8799    |    EXCL: 1:uni1                                                              |
    +---+----------+------------------+------------------+------------------------------------------------------------------------------+
    | 14|       t7,|        0.0054    |        0.8809    |    EXCL: 1:base_steel                                                        |
    +---+----------+------------------+------------------+------------------------------------------------------------------------------+
    | 15|        t0|        0.0054    |        0.8843    |    ALL                                                                       |
    +---+----------+------------------+------------------+------------------------------------------------------------------------------+
    | 16|       t5,|        0.0054    |        0.8843    |    EXCL: 1:sStrutBallhead                                                    |
    +---+----------+------------------+------------------+------------------------------------------------------------------------------+
    | 17|       t9,|        0.0054    |        0.8855    |    EXCL: 130:sPanel                                                          |
    +---+----------+------------------+------------------+------------------------------------------------------------------------------+
    | 18|       t1,|        0.0054    |        0.8860    |    EXCL: 5:PMT_3inch_pmt_solid                                               |
    +---+----------+------------------+------------------+------------------------------------------------------------------------------+
    | 19|       t8,|        0.0055    |        0.9013    |    EXCL: 1:uni_acrylic1                                                      |
    +---+----------+------------------+------------------+------------------------------------------------------------------------------+
    | 20|       t0,|        0.0059    |        0.9753    |    EXCL: 3084:sWorld                                                         |
    +---+----------+------------------+------------------+------------------------------------------------------------------------------+
    | 21|   1,2,3,4|        0.0061    |        1.0000    |    ONLY PMT                                                                  |
    +---+----------+------------------+------------------+------------------------------------------------------------------------------+
    | 22|      t8,0|        0.0062    |        1.0217    |    EXCL: 1:uni_acrylic1 3084:sWorld                                          |
    +---+----------+------------------+------------------+------------------------------------------------------------------------------+


.. class:: small

    Perhaps solid angle correction would even out render speeds


.. s5_talk::

    Smallish Relative time Range suggests no major bottlenecks from geometry issues remain 









:i:`History Matching Check`
---------------------------

.. raw:: html

    <p style="margin-bottom:5cm;" />

    <h1> History Matching Check </h1>
   

.. s5_talk::

   Also following geometry changes its good to check photon history matching 



tds3gun.sh history check
-----------------------------

.. raw:: html 

    <pre class="mypretiny">
    epsilon:ana blyth$ tds3gun.sh 1    ## <b>seqhis: 64bit uint : 16x4bit step flags for each photon</b>
    ab.ahis
    .    all_seqhis_ana  cfo:sum  1:g4live:tds3gun   -1:g4live:tds3gun 
    .           TOTALS:    11300    11300                    94.69     94.69/62 =  1.53   pvalue:P[C2>]:1.000  1-pvalue:P[C2<]:0.000 
       n        iseq        a        b      a-b   (a-b)^2/(a+b)    a/b                  b/a          [ns]   label
    0000    7cccccc2     1832     1795       37      0.38        1.021 +- 0.024       0.980 +- 0.023 [8 ]   SI BT BT BT BT BT BT SD
    0001          42     1727     1683       44      0.57        1.026 +- 0.025       0.975 +- 0.024 [2 ]   SI AB
    0002   7cccccc62      766      713       53      1.90        1.074 +- 0.039       0.931 +- 0.035 [9 ]   SI SC BT BT BT BT BT BT SD
    0003   7cccccc52      522      518        4      0.02        1.008 +- 0.044       0.992 +- 0.044 [9 ]   SI RE BT BT BT BT BT BT SD
    0004         452      515      505       10      0.10        1.020 +- 0.045       0.981 +- 0.044 [3 ]   SI RE AB
    0005         462      379      377        2      0.01        1.005 +- 0.052       0.995 +- 0.051 [3 ]   SI SC AB
    0006          41      256      262       -6      0.07        0.977 +- 0.061       1.023 +- 0.063 [2 ]   CK AB
    0007  7cccccc662      246      249       -3      0.02        0.988 +- 0.063       1.012 +- 0.064 [10]   SI SC SC BT BT BT BT BT BT SD
    0008  7cccccc652      212      230      -18      0.73        0.922 +- 0.063       1.085 +- 0.072 [10]   SI RE SC BT BT BT BT BT BT SD
    0009  7cccccc552      167      168       -1      0.00        0.994 +- 0.077       1.006 +- 0.078 [10]   SI RE RE BT BT BT BT BT BT SD
    0010        4552      173      162       11      0.36        1.068 +- 0.081       0.936 +- 0.074 [4 ]   SI RE RE AB
    <b>0011        8cc2      118      173      -55     10.40        0.682 +- 0.063       1.466 +- 0.111 [4 ]   SI BT BT SA</b>
    0012        4652      119      120       -1      0.00        0.992 +- 0.091       1.008 +- 0.092 [4 ]   SI RE SC AB
    0013  cccccc6662      124      104       20      1.75        1.192 +- 0.107       0.839 +- 0.082 [10]   SI SC SC SC BT BT BT BT BT BT
    0014  cccccc6652      111      114       -3      0.04        0.974 +- 0.092       1.027 +- 0.096 [10]   SI RE SC SC BT BT BT BT BT BT
    0015        4662      100      110      -10      0.48        0.909 +- 0.091       1.100 +- 0.105 [4 ]   SI SC SC AB
    .        TOTALS:    11300    11300              94.69     94.69/62 =  1.53   pvalue:P[C2>]:1.000  1-pvalue:P[C2<]:0.000 

    </pre>

.. class:: small

   :b:`prior check excluded sticks geometry due to Fastener, giving chi2/ndf ~ 1 : (now with full geometry : ~1.5 )`

   Largest discrepancy is an Opticks lack of "SI BT BT SA" compared to Geant4

   * :r:`fraction of discrepant photons 55/11300  ~0.5%`  

.. s5_talk::

    This is now checking photon histories with full geometry 



History Check : largest Chi2 contribs
------------------------------------------

.. class:: small


   Selecting the largest chi2 contribs:

.. raw:: html 

    <pre class="mypretiny">
    In [4]: np.set_printoptions(linewidth=100)

    In [5]: ab.his.ss[ab.his.c2 > 2]
    Out[5]: 
    array(['0011             8cc2      <b>118     173       -55           10.40     SI BT BT SA</b>',
           '0018        7ccccccc2       70      100      -30            5.29     SI BT BT BT BT BT BT BT SD',
           '0019       cccccccc62       77       59       18            2.38     SI SC BT BT BT BT BT BT BT BT',
           '0031       ccccc66652       35       54      -19            4.06     SI RE SC SC SC BT BT BT BT BT',
           '0042            4ccc2       <b>54        8       46           34.13     SI BT BT BT AB</b>',
           '0045       ccccc65552       21       36      -15            3.95     SI RE RE RE SC BT BT BT BT BT',
           '0059       cccbcccc52       24       13       11            3.27     SI RE BT BT BT BT BR BT BT BT'],
          dtype='|S98')

    In [6]: 
    </pre>

.. class:: small

    "Counterpart" Opticks excess is "SI BT BT BT AB" which happens very little for Geant4. 

    :r:`Fixing that one pair of discrepancies would get chi2/ndf below 1.` 

    :b:`Looks like only one issue big enough to chase at this sample size.` 
    

.. s5_talk::

    Looks like only one issue big enough to chase at this sample size. 


:small:`Delving in => PE_PA solid is discrepant => XJfixtureConstruction` 
------------------------------------------------------------------------------------------

.. raw:: html

    <pre class="mypretiny">
    In [8]: a.sel = "SI BT BT BT AB"   ## select Opticks photons with this history  

    In [9]: a.bn.shape
    Out[9]: (54, 1, 4)

    In [13]: a.bn.view(np.int8).shape
    Out[13]: (54, 1, 16)

    In [14]: a.bn.view(np.int8)   ## step-by-step boundary indices within selection, suspicious -24, 24 pairs
    Out[14]: 
    A([[[ 18, -17,  17,  24,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0]],
       [[ 18, -17, -24,  24,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0]],
       [[ 18, -17, -24,  24,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0]],
       [[ 18, -17, -24,  24,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0]],
       ...

    In [26]: a.blib.bname(17-1)
    Out[26]: 'Water///Acrylic'

    In [27]: a.blib.bname(24-1)
    Out[27]: 'Water///PE_PA'

    epsilon:issues blyth$ jgr PE_PA
    ...
    ./Simulation/DetSimV2/CentralDetector/include/XJfixtureConstruction.hh:    G4Material* PE_PA ;
    ./Simulation/DetSimV2/CentralDetector/src/XJfixtureConstruction.cc:    PE_PA = G4Material::GetMaterial("PE_PA");
    ./Simulation/DetSimV2/CentralDetector/src/XJfixtureConstruction.cc:     PE_PA,
    </pre>


.. class:: small

    Delving in shows the excess Opticks photons absorbed by "PE_PA" and with 
    suspicions sign flip last boundaries. 

    * :r:`Looks like an issue with XJfixtureConstruction`


.. s5_talk::

    This looks like an issue with XJfixtureConstruction 



.. comment

    :i:`cxs_XJfixtureConstructionXZ_10`
    ------------------------------------





:i:`Investigate XJfixtureConstruction Solid`
----------------------------------------------

.. raw:: html

    <p style="margin-bottom:5cm;" />

    <h1> Investigate XJfixtureConstruction Solid</h1>
   

.. s5_talk::

   XJfixtureConstruction is part of the sticks geometry 


X4MeshTest_XJfixtureConstruction_png
--------------------------------------

``cd ~/opticks/extg4 ; GEOM=XJfixtureConstruction ./X4MeshTest.sh``
    ``view of Geant4 polygonized solidXJfixture`` 


``holy geometry : celtic cross (tubs + FOUR box) atop an altar (TWO box)``
    ``union of annular tubs and SIX boxes``  

.. s5_talk::

   Geant4 polygonized render is good to get familiar with a solid

   * first thing to note is number of CSG constituents 



:i:`cxs_custom_XJfixtureConstructionXY`
-----------------------------------------

``COMP=custom_XY ./cxs_solidXJfixture.sh``
    ``cross section view of standalone solidXJfixture``

``All interior red intersects are spurious : not easy to fix.``
     ``probable cause of history discrepancy`` 
    


.. raw:: html

    <p style="margin-bottom:8cm;" />

.. class:: normal

    :r:`So many spurious intersects : Easier to start over with fewer constituent solids`


.. s5_talk::

   Looking at 2D Opticks cross section shows exceptionally large number of spurious intersects



XJfixtureConstruction CSG Model
---------------------------------

.. raw:: html

    <pre class="mypretiny">
       Unexpected spurious vertical at 35          In Y box is at 50 +- 15   
       (only appears with 4 box, not 2)                35    50     65        
                                                        :  
                                                        :     :     :                            altar frame      fixture frame 
                                                        :
         -------------+                             +---+---+-+-----+        - - - - - - - - - - 18.5+13  = 31.5          6.5  
         |            |                             |   :   |      13/2=6.5                                       
         +            +                             +   :   + :     :         - - - - - - - - -  18.5+6.5 = 25            0.0           
         |            |                             |   :   |       :
         +------------+----------------+-----25-----+---20--+-+-----+         - - - - - - -       8.5+10 =  18.5         -6.5  
         |                                                          |
         +    up2                      +                            +       - - - - - - - - - -   8.5+5  = 13.5         -11.5
         |                                                          |               
         +---------+^^^^^^^^^^^^^^^^^^^+^^^^^^^^^^^^^^^^^^+---------+       - - - - - - - - - -             8.5         -16.5
                   |                                      |         
                   |                                     17/2=8.5        
                   +  up1                                 +                - - - - - - - - - -              0.0         -25.0
                   |                                      |
                   |                                      |
                   +-------------------+-------40---------+            - - - - - - - - - - - - -           -8.5         -33.5

                                       |            |    :   |
            Z                          0            25   35  45
            |                                       |    :   | 
            |                                       |    :   |
            +-- Y                                   |    :   outer tubs
           /                                        |    :
          X                                         |    spurious vertical from box edge (why? it is within the tubs ring) 
                                                    inner tubs
    </pre>

.. class:: small

    :r:`Due to construction technique and Geant4 limitations : simple anti-coincidence tricks cannot be used`


.. s5_talk::

    Applicaility of anti-coincidence tricks depend on the way the CSG is modelled.
    In this case they cannot be used at Geant4 level without totally starting again with the geometry. 




:i:`Investigate XJfixtureConstruction Positions`
--------------------------------------------------

.. raw:: html

    <p style="margin-bottom:5cm;" />

    <h1> Investigate XJfixtureConstruction Positions</h1>
   

.. s5_talk::

    As well as the solid, I also looked into its positioning.

    As there are only 64 of them they do not pass the 
    Opticks instancing cuts so they get lumped into global geometry remainded.      

    That causes a difficulty for targetting as do not have an instance frame 
    and 4x4 transform to work within.



``RTP (Radial-Theta-Phi) Tangential Frames``  
---------------------------------------------

.. raw:: html

   <p style="margin-bottom:3cm;" />

.. sidebar:: :small:`RTP Derivatives Basis`

   .. class:: small

       :r:`Radial (red)`
       :g:`Theta (green)`
       :b:`Phi (blue)`

       * (0,0,0) origin at any target point on sphere 
       * (1,0,0) :r:`radial outwards direction`
       * (0,1,0) :g:`theta tangent direction (north to south)` 
       * (0,0,1) :b:`phi tangent direction (west to east)` 

       :r:`orient views and rays relative to any geometry`


.. raw:: html

   <p style="margin-bottom:13cm;" />

.. class:: small

   ``RTP Tangential frame : target geometry without using instance frame``
       ``=> can be used for any geometry, eg non-instanced XJfixtureConstruction`` 
       ``=> consistent control of viewpoints or genstep grids for all placements``


.. s5_talk::

    RTP tangential frame is useful for targetting geometry that does not have its own instance frame, 
    that means you can control render viewpoints or genstep grids in consistent way for all placements 



:small:`Render 64 solidXJfixture from same viewpoint in RTP frame of each`
-------------------------------------------------------------------------------------------------

.. class:: small

    ::
  
         cd ~/opticks/CSGOptiX
         for n in $(seq 0 63) ; do
           EYE=2,-1,-1 LOOK=0,0,0 UP=1,0,0 MOI=solidXJfixture:$n:-3 ./cxr_view.sh
         done


.. class:: small

    +----------------------------------------------------------------------------------------------------+
    | MOI identifier picks volume using solid names and repeat indices                                   |
    +------------------------------------------+---------------------------------------------------------+
    |   Instanced Geometry                     |   Global Geometry                                       |
    +==========================================+=========================================================+
    |  ``NNVT:0:1000``                         |  ``solidXJfixture:10``  (default cartesian XYZ)         |
    +------------------------------------------+---------------------------------------------------------+
    |  ``Hama:0:2000``                         |  ``solidXJfixture:10:-3`` (RTP tangential frame)        |   
    +------------------------------------------+---------------------------------------------------------+

    Components of MOI *Mname:mOrdinal:InstanceIndex*:

    *Mname*
      selects first volume with solid name starting with *Mname*

    *mOrdinal* 
      usually 0 with instanced geometry, or selects between global repeats  

    *InstanceIndex*
      selects instanced repeat or with global geometry selects between frame types 


.. s5_talk::

    Those bash commands make rendered images of all 64 fixtures from a consistent viewpoint in the RTP frame of each.



:i:`image_grid_cxr_solidXJfixture:XX:-3`
-----------------------------------------

.. s5_talk::

    Grid of 64 images showing all the solidXJfixture from same RTP frame viewpoint for each

    LOOK=0,0,0
        origin of the RTP frame is the center of the solidXJfixture
        obtained from its axis-aligned bounding box

    EYE=2,-1,-1 
        ^  ----- 
        |      45 degrees in tangential theta-phi directions
        | 
        2 units of extent outwards radially


    Variations in radius and clashes between solidXJfixture and uni_acrylic1 and uni1 are visible)   



Observations of the 64 solidXJfixture renders
------------------------------------------------

.. class:: small

    * First 8 (0-7) very different to the 56 others (8-63)

      * 0-7 are at smaller radius than 8-63    
      * 0,1 positioned mid-chimney and overlap each other 
      * 2-7 located around **sTarget** radius, are obscured by **uni_acrylic1** 


    * 36,40,46 close to **uni_acrylic1** of fastener
    * 37,41,44,47,50,52,55,58,61 overlapped or cut by **uni_acrylic1**
    

.. class:: small


    * :r:`probably inconsistency between the set of pos files ?`


    **LSExpDetectorConstruction::setupCD_Sticks Implemented poorly**

    12 large copy/pasted blocks of code with small changes in each 

    * obfuscates meaning by burying it in boilerplate (had to create table to understand it)   
    * :r:`coding style that invites bugs, now and in future`

    Clarity requires higher level code (simply use static method to handle the repetitive parts)
 
    * -> less code, clearer code, understandable code  


.. s5_talk::

   The renders reveal overlaps 




LSExpDetectorConstruction::setupCD_Sticks 
----------------------------------------------------

.. class:: small

    +-----------------------------+----------------------------------+----------------------------+-----------------------------+----------------------+
    |  member                     |  class                           | pos_file                   | radius                      |  #pos                |             
    +=============================+==================================+============================+=============================+======================+
    | m_strut_name                | StrutAcrylicConstruction         | m_strut_pos_file           | strut_r                     |  370                 |
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+----------------------+
    | m_strut2_name               | StrutBar2AcrylicConstruction     | m_strut2_pos_file          | strut2_r                    |  220                 |
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+----------------------+    
    | m_strutballhead_name        | StrutBallheadAcrylicConstruction | :g:`m_fastener_pos_file`   | strutballhead_r             |  590                 |
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+                      |   
    | m_fastener_name             | FastenerAcrylicConstruction      | :g:`m_fastener_pos_file`   | fastener_r                  |                      |
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+                      |
    | m_upper_name                | UpperAcrylicConstruction         | :g:`m_fastener_pos_file`   | upper_r                     |                      |
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+                      | 
    | m_addition_name             | AdditionAcrylicConstruction      | :g:`m_fastener_pos_file`   | addition_r                  |                      |
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+----------------------+    
    | m_xjanchor_name             | XJanchorConstruction             | :r:`m_xjanchor_pos_file`   | xjanchor_r                  |  56                  |
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+                      |    
    | m_xjfixture_name            | :b:`XJfixtureConstruction`       | :r:`m_xjanchor_pos_file`   | :b:`xjfixture_r`            |                      | 
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+----------------------+    
    | m_sjclsanchor_name          | SJCLSanchorConstruction          | m_sjclsanchor_pos_file     | sjclsanchor_r               |   2                  |
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+----------------------+
    | m_sjfixture_name            | SJFixtureConstruction            | m_sjfixture_pos_file       | sjfixture_r                 |  36                  |
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+----------------------+
    | m_sjreceiver_name           | SJReceiverConstruction           | :m:`m_sjreceiver_pos_file` | sjreceiver_r                |   8                  |
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+                      |
    | m_sjreceiver_fastener_name  | :b:`XJfixtureConstruction`       | :m:`m_sjreceiver_pos_file` | :b:`sjreceiver_fastener_r`  |                      |
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+----------------------+


.. class:: small

    * :b:`XJfixtureConstruction` appears twice with different radius => two position files => 8+56 = 64 solidXJfixture  
    * Position files loaded from $JUNOTOP/offline/Simulation/DetSimV2/DetSimOptions/data/Strut_Acrylic.csv,...


.. s5_talk::

   Table summarizes the sticks geometry implementation  



.. comment

    Check csv PosFile
    ---------------------

    .. class:: small

        j/PosFile/HexagonPosBallTest.py

    .. comment

         jcv DetSim0Svc

         50     declProp("StrutPosFile", m_strut_pos_file);
         51     declProp("Strut2PosFile", m_strut2_pos_file);
         52     declProp("FastenerPosFile", m_fastener_pos_file);
         53     declProp("XJanchorPosFile", m_xjanchor_pos_file);
         54     declProp("SJCLSanchorPosFile", m_sjclsanchor_pos_file);
         55     declProp("SJReceiverPosFile", m_sjreceiver_pos_file);
         56     declProp("SJFixturePosFile", m_sjfixture_pos_file);

    .. class:: small

        +------------------+-----------------+----------------------+----------------------------+
        |             csv  |             npy |       declProp       |   name                     |
        +==================+=================+======================+============================+
        |          (370,)  |     (370, 4, 4) |         StrutPosFile |   Strut_Acrylic.csv        |  
        +------------------+-----------------+----------------------+----------------------------+
        |          (220,)  |     (220, 4, 4) |        Strut2PosFile |   StrutBar2_Acrylic.csv    |
        +------------------+-----------------+----------------------+----------------------------+
        |          (590,)  |     (590, 4, 4) |      FastenerPosFile |   Strut_Anchor_Acrylic.csv |
        +------------------+-----------------+----------------------+----------------------------+
        |           (56,)  |      (56, 4, 4) |      XJanchorPosFile |   XJanchor.csv             |
        +------------------+-----------------+----------------------+----------------------------+
        |            (2,)  |       (2, 4, 4) |   SJCLSanchorPosFile |   SJCLSanchor.csv          |
        +------------------+-----------------+----------------------+----------------------------+
        |            (8,)  |       (8, 4, 4) |    SJReceiverPosFile |   SJReceiverPos.csv        |
        +------------------+-----------------+----------------------+----------------------------+
        |           (36,)  |      (36, 4, 4) |     SJFixturePosFile |   SJFixturePos.csv         |
        +------------------+-----------------+----------------------+----------------------------+


    .. class:: small 

       * numbers of positions in each position file 



solidXJfixture64radii.png
------------------------------

.. s5_talk::

   plot of the radii of the 64 solidXJfixture : note that first 8 are at lower radius 


:i:`cxr_view_solidXJfixture:55:-3_cam_1_eye_8,-4,-4_zoom_1_tmin_0.1`
---------------------------------------------------------------------

.. raw:: html

   <p style="margin-bottom:12cm;" />
 

``EYE=8,-4,-4 LOOK=0,0,0 MOI=solidXJfixture:55:-3 ./cxr_view.sh`` 
    ``view directly at the fixture, but not visible as uni_acrylic1 in front``


.. s5_talk::

    fixture is hidden underneath the foot  


.. comment

    :i:`cxr_view_solidXJfixture:55:-3_cam_1_eye_4,-2,-2_zoom_1_tmin_0.1`
    ---------------------------------------------------------------------

    .. raw:: html

       <p style="margin-bottom:12cm;" />
     

    ``EYE=4,-2,-2 LOOK=0,0,0 MOI=solidXJfixture:55:-3 ./cxr_view.sh`` 
        ``closer, at same angle of view``

        
    :i:`cxr_view_solidXJfixture:55:-3_cam_1_eye_2,-1,-1_zoom_1_tmin_0.1`
    ---------------------------------------------------------------------

    .. raw:: html

       <p style="margin-bottom:12cm;" />
     

    ``EYE=2,-1,-1 LOOK=0,0,0 MOI=solidXJfixture:55:-3 ./cxr_view.sh`` 
        ``even closer, at same angle of view``



:i:`cxr_view_solidXJfixture:55:-3_cam_1_eye_1,-0.5,-0.5_zoom_1_tmin_0.1`
-------------------------------------------------------------------------

``EYE=1,-0.5,-0.5 LOOK=0,0,0 MOI=solidXJfixture:55:-3 ./cxr_view.sh`` 
    ``closer again, at same angle of view : fixture now visible, coincidence speckle between spherically curved uni_acrylic1 base and sAcrylic``

.. s5_talk::

   fixture is underneath the foot


:i:`cxs_XJfixtureConstructionPR_55`
------------------------------------

.. raw:: html

   <p style="margin-bottom:12cm;" />
   
``COMP=PR_55 ./cxs_solidXJfixture.sh``
   ``PR cross section view of solidXJfixture:55:-3 from the +ve T axis : solidXJfixture is bumping into uni1``

.. s5_talk::
 
    2D cross section using the tangential frame shows the fixture bumping into the fastener


.. comment

    :i:`cxs_XJfixtureConstructionTR_55`
    ------------------------------------

    .. raw:: html

       <p style="margin-bottom:12cm;" />
       
    ``COMP=TR_55 ./cxs_solidXJfixture.sh``
       ``TR cross section view of solidXJfixture:55:-3 cuts across the side of uni_acrylic1``


    .. s5_talk::

        In the perpendicular plane see conic section


    :i:`solidXJfixture:0:-3_cam_0_t0_cxr_view___eye_8,-32,0__zoom_1__tmin_32_solidXJfixture:0:-3.jpg`
    --------------------------------------------------------------------------------------------------

    .. raw:: html

       <p style="margin-bottom:12cm;" />
     

    ``EYE=8,-32,0 LOOK=0,0,0 CAM=0 ./cxr_view.sh``
        ``render of solidXJfixture:0:-3 "floating" in mid-chimney, using CAM=0 perspective projection, coincident chimney cylinder speckle`` 


    .. s5_talk::

        First two fixtures are mid-chimney and ontop of each other



:i:`solidXJfixture:0:-3_cam_1_t0_cxr_view___eye_32,-48,0__look_32,0,0__zoom_1__tmin_48_solidXJfixture:0:-3.jpg`
-----------------------------------------------------------------------------------------------------------------

``EYE=32,-48,0 LOOK=32,0,0 CAM=1 ./cxr_view.sh``
    ``wider view using CAM=1 parallel projection : fixture visible at base of chimney`` 


.. s5_talk::

    First two fixtures at base of chimney, and ontop of each other
    


:i:`solidXJfixture:0:-3_cam_1_t0_cxr_view___eye_32,-48,0__look_32,0,0__zoom_0.25__tmin_48_solidXJfixture:0:-3.jpg`
-------------------------------------------------------------------------------------------------------------------


.. raw:: html

   <p style="margin-bottom:13cm;" />
 

``EYE=32,-48,0 LOOK=32,0,0 CAM=1 ZOOM=0.25 ./cxr_view.sh``
    ``even wider view from same position, but with ZOOM=0.25 increasing the field-of-view : TT now visible`` 


.. s5_talk::

    Even wider view using ZOOM to change the field of view


:i:`cxs_XJfixtureConstructionTR_0`
------------------------------------


.. raw:: html

   <p style="margin-bottom:12cm;" />
 
``COMP=TR_0 ./cxs_solidXJfixture.sh``
    ``TR cross section view of solidXJfixture:0:-3 which is mid-chimney showing overlap with solidSJReceiver``


.. s5_talk::

    overlap of fixture and receiver  



.. comment

    :i:`cxs_XJfixtureConstructionTP_0`
    ------------------------------------

    .. raw:: html

       <p style="margin-bottom:12cm;" />
     
    ``COMP=TP_0 ./cxs_solidXJfixture.sh``
        ``TP "tangential" cross section view of solidXJfixture:0:-3 which is mid-chimney showing crossed rectangles from overlap with solidXJfixture:1 which is rotated``



:i:`cxs_XJfixtureConstructionTP_0_Rshift`
------------------------------------------

.. raw:: html

   <p style="margin-bottom:12cm;" />
 
``COMP=TP_0 ./cxs_solidXJfixture.sh``
    ``Same TP "tangential" cross section view of solidXJfixture:0:-3 but lower in radial direction showing crossed "celtic-crosses"``


.. s5_talk::

    Tangential TP plane view of of fixture


.. comment

    :i:`cxs_XJfixtureConstructionPR_0`
    ------------------------------------

    .. raw:: html

       <p style="margin-bottom:12cm;" />
     
    ``COMP=PR_0 ./cxs_solidXJfixture.sh``
        ``PR cross section view of solidXJfixture:0:-3 showing overlap with solidSJReceiver``





XJfixtureConstructionTR_2
------------------------------

.. raw:: html

   <p style="margin-bottom:12cm;" />
 
``COMP=TR_2 ./cxs_solidXJfixture.sh``
    ``TR cross section view of solidXJfixture:2:-3 showing positioning at sTarget radius (first 0-7 are at this lower radius)``

.. s5_talk::

    Changing to fixture 2, the first 8 are at sTarget radius 



XJfixtureConstructionTR_52
------------------------------

.. raw:: html

   <p style="margin-bottom:12cm;" />
 
``COMP=TR_52 ./cxs_solidXJfixture.sh``
    ``TR cross section view of solidXJfixture:52:-3 showing positioning at higher radius inside uni_acrylic1``

.. s5_talk::

    Last 56 at higher sAcrylic radius 


solidXJfixture:41:-3_cam_1_t0_cxr_view___eye_2,-1,-1__zoom_1__tmin_0.1_solidXJfixture:41:-3.jpg
-------------------------------------------------------------------------------------------------

.. raw:: html

   <p style="margin-bottom:12cm;" />
 
``EYE=2,-1,-1 MOI=solidXJfixture:41:-3 ./cxr_view.sh``
    ``cxr render of solidXJfixture:41:-3 shows it poking out of uni_acrylic1``

.. s5_talk::

   Somethings gotta move here



XJfixtureConstructionPR_41
-----------------------------

.. raw:: html

   <p style="margin-bottom:12cm;" />

 
``COMP=PR_41 ./cxs_solidXJfixture.sh``
    ``PR cross section view of solidXJfixture:41:-3 showing uni_acrylic1 cutting across the fixture``


.. s5_talk::

    Cross section showing the overlap


.. comment

    XJfixtureConstructionClosePR_41
    ---------------------------------

    .. raw:: html

       <p style="margin-bottom:12cm;" />
     

    ``COMP=PR_41 ./cxs_solidXJfixture.sh``
        ``close PR cross section view of solidXJfixture:41:-3 showing uni_acrylic1 cutting across the fixture``



XJfixtureConstructionCloserPR_41
---------------------------------

.. raw:: html

   <p style="margin-bottom:12cm;" />

 
``COMP=PR_41 ./cxs_solidXJfixture.sh``
    ``closer PR cross section view of solidXJfixture:41:-3 showing uni_acrylic1 cutting across the fixture``


.. s5_talk::

    Closeup of the overlap



.. comment

    :i:`cxr_view_solidXJfixture:2:-3_cam_0_eye_16,-8,-8__zoom_1__tmin_0.1`
    -------------------------------------------------------------------------

    ``EYE=16,-8,-8 MOI=solidXJfixture:2:-3 ./cxr_view.sh``
        ``views at fixture, but obscured by uni_acrylic1`` 
         

    :i:`cxr_view_solidXJfixture:2:-3_cam_1_eye_8,-4,-4__zoom_1__tmin_0.0`
    -------------------------------------------------------------------------

    ``EYE=8,-4,-4 MOI=solidXJfixture:2:-3 TMIN=0.0 ./cxr_view.sh``
        ``views at fixture, but obscured by uni_acrylic1`` 





:i:`Investigate XJanchorConstruction Solid`
----------------------------------------------

.. raw:: html

    <p style="margin-bottom:5cm;" />

    <h1> Investigate XJanchorConstruction  Solid</h1>
   

.. s5_talk::

   Looking at other parts of sticks geometry 


X4IntersectSolidTest_XJanchorConstruction_YZ
----------------------------------------------

``Spurious Geant4 Intersects Visible on line between cone and cylinder``
   ``not fixed by expanding cylinder upwards, goes away when dont subtract acrylic sphere``


.. s5_talk::

   Subtracting acrylic sphere implicated  


:i:`Investigate SJReceiverConstruction Solid`
----------------------------------------------

.. raw:: html

    <p style="margin-bottom:5cm;" />

    <h1> Investigate SJReceiverConstruction Solid</h1>
   

.. s5_talk::

    SJReceiverConstruction




X4MeshTest_SJReceiverConstruction_png
----------------------------------------

``GEOM=SJReceiverConstruction EYE=1,1,0.2 ZOOM=2.5 ./X4MeshTest.sh``
    ``union of two unconnected parts : inner cone face is spherically curved``


.. raw:: html

    <p style="margin-bottom:8cm;" />


.. table::
    :align: center

    +------------------------------------------------------------+
    | :r:`Geant4 docs : component solids must not be disjoint`   |
    +------------------------------------------------------------+


.. s5_talk::

    Breaks Geant4 rules, skating on thin ice 


X4IntersectSolidTest_SJReceiverConstruction_XZ_png
---------------------------------------------------

``cd ~/opticks/extg4 ; GEOM=SJReceiverConstruction_XZ ./xxs.sh``

.. s5_talk::

    No apparent spurious intersects



:i:`Geant4_docs_Boolean_Solids_png`
------------------------------------

.. class:: small

    https://geant4.web.cern.ch/sites/default/files/geant4/collaboration/working_groups/geometry/training/D2-Basics.pdf


.. s5_talk::

   PDF Docs


Geant4_docs_Boolean_Solids_html
---------------------------------

.. class:: small

    https://geant4-userdoc.web.cern.ch/UsersGuides/ForApplicationDeveloper/html/Detector/Geometry/geomSolids.html?highlight=boolean#constructed-solid-geometry-csg-solids

.. image:: /env/presentation/Geant4/docs/Boolean_Solids_html_half.png
   :width: 800px
   :align: center



.. s5_talk::

   HTML Docs



Stick Geometry Issue Overview
-------------------------------

.. class:: small

     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+  
     |  class                            |  solid             | lv            |  mat          |   G4VSolid constituents                        |
     +===================================+====================+===============+===============+================================================+
     | StrutAcrylicConstruction          |  sStrut            |  lSteel       |  StrutSteel   |   Tubs                                         |
     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+  
     | StrutBar2AcrylicConstruction      |  sStrut            |  lSteel2      |  StrutSteel   |   Tubs                                         |
     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+  
     | StrutBallheadAcrylicConstruction  |  sStrutBallhead    |  lSteel       |  Steel        |   Orb                                          |
     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+ 
     | FastenerAcrylicConstruction       |  uni1              |  lFasteners   |  Steel        |   Tubs, Union                                  |
     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+  
     | UpperAcrylicConstruction (1)      |  base_steel        |  lUpper       |  Steel        |   Polycone                                     |
     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+  
     | AdditionAcrylicConstruction (2)   |  uni_acrylic3/1    |  lAddition    |  Acrylic      |   Polycone, Sphere, Sub.                       |
     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+  
     | XJanchorConstruction (3)          |  solidXJanchor     |  lXJanchor    |  Acrylic      |   Tubs, Cons, Sphere, Sub., Union              |
     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+
     | XJfixtureConstruction (4)(5)      |  solidXJfixture    |  lXJfixture   |  PE_PA        |   Tubs, Box, Union                             |
     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+  
     | SJCLSanchorConstruction           |  solidSJCLSanchor  |  lSJCLSanchor |  Acrylic      |   Box, Cons, Sphere, Sub., Union               |
     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+  
     | SJFixtureConstruction             |  solidSJFixture    |  lSJFixture   |  Acrylic      |   Box, Cons, Sphere, Sub., Union               |
     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+  
     | SJReceiverConstruction (6)        |  solidSJReceiver   |  lSJReceiver  |  Acrylic      |   Tubs, Cons, Box, Sphere, Sub., Union         |
     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+  

.. class:: small

    1. DONE : fixed Opticks Polycone with multiple Rmin translation 
    2. needs ``--additionacrylic-simplify-csg`` to fix daughter volume cavity subtraction (TODO: make default)
    3. :r:`spurious Geant4 intersects observed (subtracting big sphere implicated, TODO: try without)`
    4. :r:`overlaps uni_acylic1, uni1, self` (WIP: Yuxiang assigned to update positions) 
    5. spurious coincidences (TODO: try simpler CSG modelling) 
    6. :r:`disjoint union + overlap with solidXJfixture`  

.. s5_talk::

    Stick Geometry
   




:small:`Overview`
----------------------------------------------------------------

.. table::
   :align: center

   +------------------------------------------------------------------+
   |   **JUNO Simulation -> Opticks -> GPU**                          |
   +---------------+--------------------------------------------------+
   | Benefits:     |  1. drastically faster GPU sim. in production    |
   |               |  2. improved CPU sim. speed + correctness        |
   +---------------+--------------------------------------------------+
   | Status:       |  * :b:`running out of geometry to have issues`   |
   |               |  * :r:`issues getting smaller, are converging`   |  
   +---------------+--------------------------------------------------+

.. sidebar:: :small:`Next Steps`

   .. class:: small

      * few more geometry issues to resolve
      * high stats history matching check
      * sim performance measurements
      * integrate OptiX 7 API work 
      * production optimization
      * CUDA/Opticks port new PMT optical model  

.. class:: normal

   * extremely sensitive to source geometry issues               

     * DONE: many fixes to PMTs, Fastener 
     * => :r:`improves CPU sim, enables GPU sim`

   **Many Thanks to : Yuxiang Hu, Wang Zike**

   * More pioneer users very welcome


.. table::
   :align: center

   +--------------------------------------------------+-----------------------------------------+
   | https://bitbucket.org/simoncblyth/opticks        | code repository                         |                   
   +--------------------------------------------------+-----------------------------------------+
   | https://simoncblyth.bitbucket.io                 | presentations and videos                |
   +--------------------------------------------------+-----------------------------------------+


.. comment

    .. raw:: html

        <p style="margin-bottom:1cm;" />


.. s5_talk::

    Close





:i:`Extra Slides : G4Cerenkov Improvement, Cerenkov on GPU`
---------------------------------------------------------------

.. raw:: html

    <p style="margin-bottom:5cm;" />

    <h1>Extra Slides : G4Cerenkov Improvement, CK on GPU</h1>
   
.. class:: small

    * Frank-Tamm Formula : Cerenkov Photon Yield /mm  at BetaInverse  

      * :r:`G4Cerenkov makes poor approximation => -ve photon yield`

    * Numerical Integration Imprecision close to RINDEX peak
    * Numerical Integration Error (number of CK photons)  
    * Improved Precision "S2" Integration 
    * Monte Carlo Sampling : "Rejection" vs "Inverse Transform"
    * Cerenkov ICDF for various BetaInverse
    * Chi2 Comparisons of the two sampling methods

      * :b:`New Cerenkov ICDF sampling : faster, avoids double->float sensitivity`


.. s5_talk::

    Cerenkov 



:small:`Frank-Tamm Formula : Cerenkov Photon Yield /mm  at BetaInverse`
-------------------------------------------------------------------------

.. raw:: html

    <pre class="mypretiny">
                                                    BetaInverse^2    
              N_photon/369.81  =    Integral ( 1 - -----------------  )  dE         where   BetaInverse < ri[E] 
                                                       ri(E)^2      

                                =   Integral [ 1 ] dE -  BetaInverse^2 * Integral[ 1./(ri[E]*ri[E]) ] dE

    </pre>


.. class:: small

    **G4Cerenkov::BuildThePhysicsTable -> CerenkovAngleIntegrals (misnomer)** 

    * ``Integral[ 1/ri^2 ] dE``  cumulative trapezoidal approx. integral over RINDEX[E] of material

    :redbold:`Problems with G4Cerenkov::GetAverageNumberOfPhotons integration`

    * assumes monotonic RINDEX : only one permitted energy range 
    * putting together the split integral leads to -ve NumPhotons when close to RINDEX peak           
    * ``G4PhysicsVector::GetValue`` applies **linear interpolation** to cumulative integral of 1/ri^2  :redbold:`<-- POOR APPROX`  

.. raw:: html

    <pre class="mypretiny">
    636   G4double CAImax = CerenkovAngleIntegrals->GetMaxValue();
    637 
    638   G4double dp, ge;
    642   if (nMax < BetaInverse)        // ... no photons
    649   else if (nMin > BetaInverse) {
    650      dp = Pmax - Pmin;
    651      ge = CAImax;
    660   } else {
    661      Pmin = Rindex->GetEnergy(BetaInverse);
    662      dp = Pmax - Pmin;
    667      G4double CAImin = CerenkovAngleIntegrals->GetValue(Pmin, isOutRange);
    668      ge = CAImax - CAImin;
    674   }
    677   G4double NumPhotons = Rfact * charge/eplus * charge/eplus * (dp - ge * BetaInverse*BetaInverse);
    </pre>




:i:`scan_GetAverageNumberOfPhotons_plot_1.7000_1.8000`
-------------------------------------------------------


:i:`scan_GetAverageNumberOfPhotons_difference_plot`
-----------------------------------------------------


    
   

:small:`Alternative "s2" integral approach : more precise, simpler, faster`
--------------------------------------------------------------------------------------


.. sidebar:: :small:`Trapezoidal s2 Integration`

    .. class:: small

        **s2(E) : from RINDEX(E) values and BetaInverse** 


    .. image:: /env/presentation/ana/ckn/trapezoidal_half.png 

    .. class:: small

        * B,C,D : trapezoids
        * A,E   : edge triangles  
        * x,y: "crossings" : RINDEX(E) == BetaInverse
          
          * (better than s2 zeros, as s2 non-linear)

.. raw:: html

    <pre class="mypretiny">

                     BetaInverse*BetaInverse
    Integral [ 1. -  ----------------------- ] (for BetaInverse < RINDEX)
                     RINDEX * RINDEX 

    Integral [ 1. - cos^2 theta ]   
    
    Integral [ sin^2 theta ]    

    Integral [ s2 ]             ( s2 > 0 )

    </pre> 

                 
.. class:: small

   Do not split the integral, do "s2" integral in one pass.  Advantages:

   * avoids one level of linear approximation, ca 
   * cannot give -ve values
   * simple one pass code, no separate find_crossings
   * also s2 is faster other than when numPhotons is zero 

     * AVOID by not calling when **BetaInverse > RINDEX_max**


.. comment

    * ``Integral a:b [ f(x) ] dx ~ (b - a)*(f(a) + f(b))/ 2``  trapezoidal approx


        In [1]: 2*np.pi*1e7/(137*1240)     # fine-structure-constant 1/137 and hc = 1240 eV nm 
        Out[1]: 369.860213514221



    <pre class="mypretiny">
    Integral a->b [ f(x) ] dx   ~     ( b - a )*( f(a) + f(b) ) / 2         trapezoidal numerical integration  
    </pre>             



    I noticed a small issue with G4Cerenkov/G4Cerenkov_modified.
    When BetaInverse is approaching the maximum LS RINDEX the 
    result of G4Cerenkov_modified::GetAverageNumberOfPhotons goes
    slightly negative. 

    Looking into this I found the cause is the splitting of the 
    numerical integral into pieces. The Frank-Tamm formula requires::

        Integral [ 1. - (BetaInverse*BetaInverse)/(rindex*rindex) ] 

    The G4Cerenkov approach is to split that up, storing the below integral 
    into CerenkovAngleIntegral::

    However when putting it back together with the below::

        1066      G4double dp1 = 0; G4double ge1 = 0;
        1067      for (int i=0; i<cross_num; i++) {
        1068         dp1 += the_energies_threshold[2*i+1] - the_energies_threshold[2*i];
        1069         G4bool isOutRange;
        1070         ge1 += CerenkovAngleIntegrals->GetValue(the_energies_threshold[2*i+1], isOutRange)
        1071                - CerenkovAngleIntegrals->GetValue(the_energies_threshold[2*i], isOutRange);
        1072      }
        1073 
        1077   G4double NumPhotons = Rfact * charge/eplus * charge/eplus *
        1078          (dp1 - ge1 * BetaInverse*BetaInverse);
        1079 

    The CerenkovAngleIntegrals->GetValue is doing linear interpolation
    which is a rather poor approximation for the parabolic cumulative integral.

    I find that this problem is avoided by doing the 
    numerical integral directly on sin^2 theta 
    which is valid as all the below are equivalent:: 
     
        Integral [ 1. - (BetaInverse*BetaInverse)/(rindex*rindex) ]   ( for: BetaInverse < rindex )

        Integral [ 1. - cos^2 theta ]   
        
        Integral [ sin^2 theta ] 

    Doing this avoids making the poor linear approximation for the parabolic
    cumulative integral, and avoids going -ve as there is no subtraction to 
    cause problems.

    Also, there is another advantage with this, in that you do not need
    to separately find rindex-BetaInverse crossings because sin^2 theta = ( 1 - cos(th) ) ( 1 + cos(th) )
    goes negative at the crossings so you can just numerically 
    integrate the "s2" over the energy range that it is positive 
    and use the "s2" zero crossings to add triangles for bins with crossings 
    to the full bin trapezoids.  




:small:`Monte Carlo "Rejection Sampling" VS "Inverse Transform Sampling"`
---------------------------------------------------------------------------------

.. sidebar:: :small:`Cerenkov Photons Energy Distrib`

   .. class:: small

        * Particle velocity, **Beta=v/c** **BetaInv=1/Beta** 
        * **n(E)** : refractive index **n = c/v**

          * Air~1.0003, Water:1.33-1.34, Glass:1.5-1.9 

        * **BetaInv > n(E)_max** : CK disallowed, too slow
        * **n(E)_min < BetaInv < n(E)_max** 

          * allowed energy depends on **n(E)** shape  

        * :redbold:`ICDF(BetaInv)` => 2d lookup **(u, BetaInv)** 

        New approach : Cerenkov ICDF sampling ?

        * :bluebold:`can it be done ?`
        * :redbold:`PRO: "free" (GPU texture lookup) sampling`
       

.. class:: small

    **Sampling** : generate **(x0,x1,x2,... )** that follow distribution **f(x)**

    :bluebold:`Rejection Sampling (used by current G4Cerenkov)`

    * throw 2 random numbers **(x,y)** in (domain, value) range
    * reject **x**  when **y > f(x)**  

    * Pros : simple, no integration or lookup tables 
    * Cons :

      * poor efficiency for some **f(x)** : many candidates rejected
      * :redbold:`observed float/double sensitivity` : **problem on GPU**

    :bluebold:`Inverse Transform (ICDF) Sampling`

    * compute CDF Cumulative Distribution Function, **CDF(x)** : integrals of **f(x)** across domain 
    * normalize : **CDF(xmin) = 0, CDF(xmax) = 1**
    * domain **x** and **CDF(x)** monotonic -> invert (swap **y<->x**) 
    * equate random **u(0->1)** to **y** enables to lookup sample **x** 

    * Cons : requires computation of large ICDF lookup tables 
    * Pros :

      * simple sampling : **one random lookup** (eg GPU texture lookup) 
      * ICDF lookups tables can be created once for a geometry 
        (often depending only on constant properties of materials)


.. class:: tiny 

    Cerenkov radiation is electromagnetic equivalent of sonic boom in air or bow waves in water



:i:`test_makeICDF_SplitBin_QCKTest_s2cn_plot.png`
---------------------------------------------------



:small:`Chi2 comparison of Rejection and ICDF Lookup Cerenkov energy samples`
-------------------------------------------------------------------------------------

.. class:: normal

    Created with::

        cd ~/opticks/qudarap
        QCerenkovIntegralTest   # create ICDF lookups for many BetaInverse
        QCKTest                 # load ICDF, create lookup+rejection samples
        ipython -i tests/QCKTest.py   # chi2 comparisons on energy distribs
         

.. class:: normal

    Plots show:

    * histogram of energy distrib from ICDF lookup sample
    * histogram of energy distrib from rejection sample
    * "s2(E)" sin^2(cerenkov_cone_angle)[E]  : :redbold:`distribution the samples seek to follow`
    * ICDF : cumulative integral curve
    * relative chi2 contribution for each energy bin 

    :bluebold:`Note: ICDF becomes flat in disallowed energy regions` 


:i:`QCKTest_1.5000_en_plot.png`
----------------------------------


:i:`QCKTest_1.6000_en_plot.png`
----------------------------------



:i:`image_grid_QCKTest`
-----------------------

.. s5_talk::

   Cerenkov








