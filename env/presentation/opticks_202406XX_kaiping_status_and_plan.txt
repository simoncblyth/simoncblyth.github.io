.. meta::

   :title: JUNOSW + Opticks : Status and Plan
   :name: opticks_20240224_offline_software_review.txt
   :description: (2 July 2024)
   :notes: 22nd collaboration meeting : Kaiping : 22-26 Feb 2024 : 15 min talk
   :url: https://juno.ihep.ac.cn/cgi-bin/Dev_DocDB/DisplayMeeting?sessionid=2642
   :url: https://juno.ihep.ac.cn/cgi-bin/Dev_DocDB/ShowDocument?docid=11290


.. include:: my_s5defs.txt

.. include:: s5_background_image.txt



.. comment

   to cover : interactive geometry view


.. comment

   summary sentence

   DetSim+Opticks: Re-implemented WaterPoolConstruction with simple hierarchy approach avoiding complex CSG 
   with >60 hole subtractions, 590 FastenerAcrylicConstruction working using new "listnode" feature,  
   adding integrated triangulated geometry feature to handle the remaining less numerous solids.
   

   Opticks:  re-implement the water pool pillars geometry by avoiding the complicated hole subtraction, other missing geometry features studied.


.. comment

    <p style="margin-bottom:50mm;" />


:i:`JUNOSW + Opticks : Status and Plan` 
========================================================

.. raw:: html

    <div class="mytitle">
        <header>
            <h1 style="background-color:lightgrey"> 
                JUNOSW + Opticks : Status and Plan 
            </h1>
        </header>
    </div>
    <p style="margin-bottom:25mm;" />
    <p style="margin-bottom:35mm;" />

.. class:: small



   * Opticks Reminder 

     * Geant4 + Opticks + NVIDIA OptiX : Hybrid Workflow
     * Geometry Model Translation : Geant4 => CSGFoundry => NVIDIA OptiX 7+

   * JUNOSW+Opticks (2024/06) 

     * Geometry Issues Summary 
     * Opticks: n-ary CSG Compound "List-Nodes" => Much Smaller CSG trees

   * WaterPoolConstruction

     * WaterPoolConstruction "sibling soup" vs HIERARCHY 
     * WaterPoolConstruction__CONFIG : testing alternative geometry

   * FastenerAcrylicConstruction
   * XJ triangulated
   * SJ triangulated
   * NEXT STEPS/PLAN 
   * Opticks Links, JUNOSW+Opticks DocDB 


.. comment

   * [3] Profile reports and plots 
   * [2] G4CXTest_GEOM.sh : Event Time vs Photons with both A:CSGOptiX and B:U4Recorder
   * [2] U4Recorder leaking badly 
   * [3] pure Opticks : no sign of leak 
   * [2] B:U4Recorder / A:CSGOptiX Ratio only 190 !



.. raw:: html

    <div class="mycredit">
       <h2 style="background-color:lightgrey"> Simon C Blyth, IHEP, CAS  &mdash; Simulation Meeting &mdash; 2 July 2024 </h2>
    </div>



.. s5_talk::

    This talk will outline progress with the integration of JUNOSW and Opticks 




Geant4 + Opticks + NVIDIA OptiX : Hybrid Workflow
-------------------------------------------------------------

.. class:: small

    .. table::
        :align: center

        +--------------------------------------------------+
        | :b:`https://bitbucket.org/simoncblyth/opticks`   |
        +--------------------------------------------------+


.. raw:: html

    <p style="margin-bottom:13cm;" />

.. class:: small

    Opticks API : split according to dependency -- Optical photons are GPU "resident", only hits need to be copied to CPU memory 


.. s5_talk::

    How to use GPU ray tracing in simulation ? That is what Opticks does. 

    Opticks acts as a bridge between Geant4 on the CPU and NVIDIA OptiX GPU ray tracing 

    * at initialization Opticks translates the Geant4 model of 
      detector geometry into a suitable form and uploads that to the GPU

    * the Geant4 Cerenkov and Scintillation processes are modified 
      to prevent the normal CPU optical photon generation loop
      Instead the generation parameters or gensteps are collected  
      and then uploaded to the GPU for propagation at the end of each event

    * this means the optical photon simulation is entirely offloaded to the GPU, 
      with only the hits that are not culled by collection efficiency 
      requiring allocation of memory on the CPU
 


:small:`Geometry Model Translation : Geant4 => CSGFoundry => NVIDIA OptiX 7+`
-------------------------------------------------------------------------------

.. sidebar:: :small:`CSGFoundry Model`

    .. class:: small

        * :b:`array-based -> simple serialization + upload`
        * entire geometry in 4 GPU allocations 
        * factorized using subtree digests 

.. class:: small

    **Geant4 Geometry Model (JUNO: 400k PV, deep hierarchy)**

    +----+---------------------------+---------------------------------------------+ 
    | PV | *G4VPhysicalVolume*       | placed, refs LV                             |
    +----+---------------------------+---------------------------------------------+ 
    | LV | *G4LogicalVolume*         | unplaced, refs SO                           |
    +----+---------------------------+---------------------------------------------+ 
    | SO | *G4VSolid,G4BooleanSolid* | binary tree of SO "nodes"                   |
    +----+---------------------------+---------------------------------------------+ 

    **Opticks CSGFoundry Geometry Model** (index references)

    +---------------+----------------------------------------------------------------------------+----------------------------+
    | struct        | Notes                                                                      |  Geant4 Equivalent         |
    +===============+============================================================================+============================+
    | *CSGFoundry*  | vectors of the below, easily serialized + uploaded + :r:`used on GPU`      | None                       |
    +---------------+----------------------------------------------------------------------------+----------------------------+
    | *qat4*        | 4x4 transform refs *CSGSolid* using "spare" 4th column (:b:`becomes IAS`)  | Transforms ref from PV     |
    +---------------+----------------------------------------------------------------------------+----------------------------+
    | *CSGSolid*    | refs sequence of *CSGPrim*                                                 | Grouped Vols + Remainder   | 
    +---------------+----------------------------------------------------------------------------+----------------------------+
    | *CSGPrim*     | bbox, refs sequence of *CSGNode*, root of CSG Tree of nodes                | root *G4VSolid*            |
    +---------------+----------------------------------------------------------------------------+----------------------------+
    | *CSGNode*     | CSG node parameters (JUNO: ~23k *CSGNode*)                                 | node *G4VSolid*            |
    +---------------+----------------------------------------------------------------------------+----------------------------+

    **NVIDIA OptiX 7+ Geometry Acceleration Structures (JUNO: 1 IAS + 10 GAS, 2-level hierarchy)**

    +-----+----------------------------------+-------------------------------------------------------------------------+ 
    | IAS | Instance Acceleration Structures | JUNO: 1 IAS created from vector of ~50k *qat4* (JUNO)                   |
    +-----+----------------------------------+-------------------------------------------------------------------------+ 
    | GAS | Geometry Acceleration Structures | JUNO: 10 GAS created from 10 *CSGSolid* (which refs *CSGPrim,CSGNode* ) |
    +-----+----------------------------------+-------------------------------------------------------------------------+ 

.. class:: small

    :r:`JUNO : Geant4 ~400k volumes "factorized" into 1 OptiX IAS referencing ~10 GAS`


.. s5_talk::

   The translation of the Geant4 detector geometry into a GPU optimized form
   is the most important step for high performance ray geometry intersection. 

   The tables illustrates the three geometry models.
   
   * the Geant4 model of JUNO is a deep hierarchy of almost 400k volumes
   * for fast intersection on GPU a much flatter 2-level structure is used
    
   CSGFoundry model in the middle is designed to:

   1. enable the translation
   2. be usable on both CPU and GPU
   3. be simple and easy to serialize 
     
   The CSG prefix refers to : Constructive Solid Geometry which is the basis for finding intersects 





:small:`JUNOSW+Opticks (2024/06) : Geometry Issues Summary` 
----------------------------------------------------------------

.. class:: small


    **WaterPoolConstruction + HBeamConstruction** : Addition of DeadWater + Tyvek 

    * "sibling soup" model forces complex CSG gymnastics (>60 holes subtracted)
 
      * :b:`very deep CSG tree breaks Opticks translation`

    * lower HBeam cross pieces and all lower pillar sections impinge into pool bottom  

      * :b:`may cause Geant4 "stuck" tracks` 

    :r:`FIX (MR 458) under test : simplify geometry using hierarchy approach` (**WaterPoolConstruction__CONFIG** envvar) 


    **FastenerAcrylicConstruction**

    * Deep CSG tree causes Opticks translation issue
  
    :r:`FIX (MR 468) under test : using G4MultiUnion/list-node` (**FastenerAcrylicConstruction__CONFIG** envvar)



.. s5_talk::

    Geometry Issues Summary 


.. comment

   * `csg_intersect_tree.h <https://bitbucket.org/simoncblyth/opticks/src/master/CSG/csg_intersect_tree.h>`_ 
   * `csg_intersect_node.h <https://bitbucket.org/simoncblyth/opticks/src/master/CSG/csg_intersect_node.h>`_
   * `csg_intersect_leaf.h <https://bitbucket.org/simoncblyth/opticks/src/master/CSG/csg_intersect_leaf.h>`_



:small:`n-ary CSG Compound "List-Nodes" => Much Smaller CSG trees`
-------------------------------------------------------------------

.. sidebar:: :small:`Complex CSG => Tree Overheads`

    .. image:: GeoChain_Darwin/XJfixtureConstruction/CSGOptiXRenderTest/cvd0/50001/ALL/top_i0_/cxr_geochain_XJfixtureConstruction_ALL_upper.jpg 
          :align: right
          :width: 500px



.. class:: small

    :b:`Generalizes binary to n-ary CSG trees`

    * using three-level Opticks CSG : tree < node < leaf 

    .. raw:: html

       <pre class="mypretiny">
         +---------------+----------------------+ 
         | 2-ary tree    |   n-ary "list-node"  |
         +===============+======================+
         |        U      |      U[A,B,C]        |
         |       /       |                      |
         |      U        |                      |
         |     / \       |                      |   
         |    U   A      |                      | 
         |   / \         |                      |
         |  C   B        |                      |
         +---------------+----------------------+ 
       </pre>



    * list-node can be within binary trees 
    * list-node references sub-nodes by **subNum** **subOffset**
    * Opticks translates **G4MultiUnion** into list-node 

    Hints in G4VSolid name : :r:`Specify shape more precisely` 
       :r:`=> better suited intersect alg => less resources => faster` 

    eg: CSG_DISCONTIGUOUS Union
       user guarantees no overlaps, eg "union of holes" to be CSG subtracted : :r:`=> simple, low resource intersect` 


.. s5_talk::

   You need to be familiar with Opticks "list-nodes" to follow
   the fixes for these issues. So here I introduce them.  

   Complex solids like this one with deep CSG trees can cause 
   large slowdowns.  In an attempt to reduce the performance degradation 
   I have generalize Opticks CSG to support list nodes in order to 
   reduce tree size and avoid large tree overheads. 


:i:`cxr_min__eye_1,0,0__zoom_1__tmin_0.5__World_solid.jpg`
--------------------------------------------------------------

.. raw:: html

    <p style="margin-bottom:100mm;" />


``3x3x3 grid of MultiUnion/list-node each with 7x7x7=343 Orb``
    ``would not be possible without list-node`` 

.. s5_talk::

   List-node



:small:`WaterPoolConstruction "Sibling Soup" vs HIERARCHY`
--------------------------------------------------------------

.. sidebar:: :small:`HIERARCHY : Radically Simple`

   .. raw:: html

       <pre class="mypretiny">
  
              +---Air-----------------------+    
              |                             |    
              | +--DeadWater--------------+ |    
              | | +---Tyvek-------------+ | |    
              | | | +----vetoWater----+ | | |    
              | | | |                 | | | |    
              | | | | +-+         +-+ | | | |    
              | | | | |Steel      | | | | | |    
              | | | | +-+         +-+ | | | |    
              | | | +-----------------+ | | |    
              | | +---------------------+ | | 
              | +-------------------------+ |
              +-----------------------------+   

        </pre>

   .. class:: small

        **Geant4 "Russian doll" hierarchy**

        * daughter material overrides mother
        * => simple cylinders G4Polycone (rmin 0.) 

        :r:`BUT: pillars need to be within vetoWater`


    
.. class:: small

   :r:`"Sibling Soup" : (DeadWater, Tyvek, Air, Steel) in vetoWater`

.. raw:: html

   <pre class="mypretiny">
   sDeadWater,sTyvekFilm : 6 plane G4Polycone with 31 holes
   
     +---------------------+   +----------------+---+    1 plane 
     |                     |   |                    |
     +   +-----------------+   +----------------+   +    2 planes
     |   |                                      |   |
     |   |                                      |   |
     |   |                                      |   |
     |   |                                      |   |
     |   |                                      |   |
     |   |                                      |   |
     |   |                                      |   |
     +   +                   +                  +   +
     |   |                                      |   |
     |   |                                      |   |
     |   |                                      |   |
     |   |                                      |   |
     |   |                                      |   |
     |   |                                      |   |
     |   |                                      |   |
     +   +--+  +---+  +------+------------------+   +    2 planes
     |      |  |   |  |                             |
     +------+  +---+  +------+----------------------+    1 plane 
   </pre>


.. class:: small

    * :b:`complex CSG : to avoid sibling overlaps`

    **ISSUES : with current "Sibling soup" geometry**

    * many (~120) pool bottom impingments
    * complex CSG breaks Opticks translation 



.. s5_talk::

     Using hierarcy enables much simpler CSG


:small:`WaterPoolConstruction__CONFIG : testing alternative geometry`
------------------------------------------------------------------------

.. class:: small

    blyth-WaterPoolConstruction__CONFIG-to-fix-pillar-impingement-and-opticks-translation

    +--------------------+------------------------------------------------------------+
    | CONFIG             | Notes on WaterPoolConstruction HBeamConstruction           |
    +====================+============================================================+
    | 0:ASIS             | sibling soup => very complicated CSG                       |
    +--------------------+------------------------------------------------------------+
    | 1:ZERO_HOLES       | skip 60 one-by-one hole subtractions from DeadWater Tyvek  |
    +--------------------+------------------------------------------------------------+
    | 2:MULTIUNION_HOLES | collect holes into G4MultiUnion(listnode), subtract once   | 
    +--------------------+------------------------------------------------------------+
    | 3:HIERARCHY        | radical simplification, minor geometry change :            |
    |                    |                                                            |
    |                    | * skip bottom angled cross piece                           |
    |                    | * raise base of pillars within vetoWater                   |  
    +--------------------+------------------------------------------------------------+

    https://code.ihep.ac.cn/JUNO/offline/junosw/-/merge_requests/458 :b:`MERGED: 2024-06-17`

    Set CONFIG envvar to change geometry, default is no change "sibling soup":

::

    unset WaterPoolConstruction__CONFIG    
    export WaterPoolConstruction__CONFIG=0 # ASIS : same as unset 

    export WaterPoolConstruction__CONFIG=3 # HIERARCHY  



.. s5_talk::

    testing alternative geometry



:i:`cxr_min__eye_0,1,0__zoom_1__tmin_0.1__GZ1.B06_07_FlangeI_Web_FlangeII:0:-1.jpg`
------------------------------------------------------------------------------------------

.. raw:: html

    <p style="margin-bottom:130mm;" />


``Using G4MultiUnion/listnode for 62 subtracted holes works, BUT...`` 

.. s5_talk::

    Using G4MultiUnion/listnode enables Opticks translation to handle 62 subtracted holes


:i:`cxr_min__eye_0,1,0__zoom_1__tmin_0.1__GZ1.B06_07_FlangeI_Web_FlangeII:0:-100000.jpg`
------------------------------------------------------------------------------------------

.. raw:: html

    <p style="margin-bottom:130mm;" />

``Impingment at bottom of WaterPool apparent, from angled cross-piece``

.. s5_talk::

    Looking up from below the bottom of the pool 


:i:`cxr_min__eye_0,1,0__zoom_1__tmin_0.1__sDeadWater:0:-1.jpg`
--------------------------------------------------------------

.. raw:: html

    <p style="margin-bottom:130mm;" />


``Also impingement from vertical and tilted pillars``


.. s5_talk::

    Not just the cross-pieces, also the bottom sections of vertical and tilted pillars

:i:`cxr_min__eye_-1,0,0__zoom_1__tmin_0.1__GZ1.A06_07_FlangeI_Web_FlangeII:0:-100001.jpg`
------------------------------------------------------------------------------------------


.. raw:: html

    <p style="margin-bottom:130mm;" />


``WaterPoolConstruction__CONFIG=HIERARCHY  (much simpler)``

``* skip bottom angled cross piece``

``* raise pillar base 126mm (keep within vetoWater)``


.. s5_talk::

    Raising the base of the pillar such that it is entirely within vetoWater 
    and skipping the bottom cross piece avoids the overlaps and enables
    use of much simpler hierarchical geometry




FastenerAcrylicConstruction
----------------------------

.. sidebar:: :small:`With list-node : shrink CSG tree`

    .. raw:: html

        <pre class="mypre15" >+------------------------------+
        |        U                     |
        |       / \                    |
        |      /   \                   |
        |     D     U[A,B,C,D,E,F,G,H] |
        |    / \                       | 
        |   I   J                      |
        +------------------------------+</pre>

.. class:: small

    Problematic deep CSG tree without list-node

.. raw:: html

    <pre class="mypre15" >
    +------------------------------------------+
    |                                          |
    |                                          | 
    |                           U              |
    |                          / \             |
    |                         /   \            |
    |                        /     D           |
    |                       U     / \          |
    |                      / \   I   J         |
    |                     U   H                | 
    |                    / \                   |
    |                   U   G                  |
    |                  / \                     |
    |                 U   F                    |
    |                / \                       | 
    |               U   E                      |
    |              / \                         | 
    |             U   D                        |
    |            / \                           |
    |           U   C                          |
    |          / \                             |
    |         A   B                            |
    |                                          |
    +------------------------------------------+

    U : Union
    A-J : Tubs (cylinder) primitive 
    </pre>



.. s5_talk::

    using list-node shrinks the tree



:i:`cxr_min__eye_0,3,-1.5__zoom_1__tmin_0.5__uni1:0:0.jpg`
-----------------------------------------------------------


.. raw:: html

    <p style="margin-bottom:150mm;" />


``FastenerAcrylicConstruction : hidden within support base``


.. s5_talk::

     FastenerAcrylicConstruction



:i:`cxr_min__eye_0,3,-1.5__zoom_1__tmin_0.5__uni1:0:000000.jpg`
-----------------------------------------------------------------


.. raw:: html

    <p style="margin-bottom:150mm;" />


``FastenerAcrylicConstruction : 8 cylinders``
    ``modelled with G4MultiUnion/list-node``


.. s5_talk::

     FastenerAcrylicConstruction




XJ triangulated
----------------

.. raw:: html

    <p style="margin-bottom:-10mm;" />
    <p style="position:fixed;top:-10px;left:680px;font-size:25px;background-color:white;border:1px solid black;padding:5px;">(0):xjfc:XJfixture</p>
    <p style="position:fixed;top:350px;left:680px;font-size:25px;background-color:white;border:1px solid black;padding:5px;">(1):xjac:XJanchor</p>
 
.. class:: small

    +-----------------+----+
    |  Construction   | #  |
    +=================+====+
    | XJfixture       | 56 |
    +-----------------+----+
    | XJanchor        | 56 |
    +-----------------+----+

    **XJfixture**

    * messy union of tubs, box

      * many coincident faces => spurious intersects 
        
    **XJanchor**

    * union of tubs, cons
    * big sphere subtraction

      * poor precision intersect => spurious


    :b:`TODO: compare validation + performance:` 

    * ASIS
    * with list-node
    * triangulated 



.. s5_talk::

    Hold GT



:i:`cxr_min__eye_1,0,0__zoom_1__tmin_0.5__solidXJfixture:0:-1.jpg`
------------------------------------------------------------------------

``XJfixture + XJanchor : "hold" GuideTube``
    ``(trying triangulated)``

.. s5_talk::

    Triangulation is shortcut : maybe can avoid re-implementing to avoid coincident surfaces + spurious 



.. comment

    :i:`cxr_min__eye_-1,-1,3__zoom_1__tmin_0.5__solidXJfixture:55:-1.jpg`
    ------------------------------------------------------------------------

    ``renders : but causing slowdown``




.. comment     

    U4Mesh_test2_xjfcSolid_review.png
    ----------------------------------

    U4Mesh_test2_xjacSolid_review.png
    ----------------------------------



SJ triangulated 
----------------

.. sidebar:: :small:`Counts in Geometry`

    .. class:: small

        +--------------------+----+
        |  Construction      | #  |
        +====================+====+
        | SJCLSanchor        |  2 |
        +--------------------+----+
        | SJfixture          | 36 |
        +--------------------+----+
        | SJReceiver         |  8 |
        +--------------------+----+
        | SJReceiverFastern  |  8 |
        +--------------------+----+


.. class:: small

   **SJCLSanchor**

   **SJfixture** 


.. s5_talk::

    Triangulation is shortcut : maybe can avoid re-implementing to avoid coincident surfaces + spurious 





SJ triangulated render
------------------------

.. raw:: html

    <p style="margin-bottom:-10mm;" />
    <p style="position:fixed;top:-10px;left:10px;font-size:25px;background-color:white;border:1px solid black;padding:5px;">(0):sjcl:SJCLSanchor</p>
    <p style="position:fixed;top:-10px;left:680px;font-size:25px;background-color:white;border:1px solid black;padding:5px;">(1):sjfx:SJfixture</p>
    <p style="position:fixed;top:350px;left:10px;font-size:25px;background-color:white;border:1px solid black;padding:5px;">(2):sjrc:SJReceiver</p>
    <p style="position:fixed;top:350px;left:680px;font-size:25px;background-color:white;border:1px solid black;padding:5px;">(3):sjrf:SJReceiverFastern</p>
    

.. s5_talk::

    SJ


.. comment


    ``sjcl:SJCLSanchor``   ``sjfx:SJfixture``


    ``sjrc:SJReceiver``  ``sjrf:SJReceiverFastern`` 






.. comment     


    U4Mesh_test2_sjclSolid_review.png
    ----------------------------------

    U4Mesh_test2_sjfxSolid_review.png
    ----------------------------------

    U4Mesh_test2_sjrcSolid_review.png 
    ----------------------------------

    U4Mesh_test2_sjrfSolid_review.png
    ----------------------------------





:i:`cxr_min__eye_1,0,0__zoom_1__tmin_0.5__sSurftube_0V1_0:0:-1.jpg`
--------------------------------------------------------------------

.. raw:: html

    <p style="margin-bottom:150mm;" />
    
``Testing triangulated GuideTube + XJ + SJ solids``
    ``(no choice for GuideTube torii, maybe some XJ + SJ can use "list-node")``

.. comment

     https://juno.ihep.ac.cn/Dev_DocDB/0082/008247/001/GT%20Geometry%20Modification.pdf


.. s5_talk::

    GT + XJ + SJ



:small:`Remaining CPU/GPU Geometry Differences`
-------------------------------------------------

.. class:: small

   Virtual surface shifts used to avoid degeneracy, together with defaults (shifts avoid chi2 discrepancies from degenerate surfaces)::

       export Tub3inchPMTV3Manager__VIRTUAL_DELTA_MM=0.10           ## 1.e-3 
       export HamamatsuMaskManager__MAGIC_virtual_thickness_MM=0.10 ## 0.05 
       export NNVTMaskManager__MAGIC_virtual_thickness_MM=0.10      ## 0.05

   * :b:`TODO: check virtual shifts have no performance effects or overlap issues` 

     * :r:`convince offline group to enlarge defaults : avoiding these Opticks only shifts`                                                 

   * :b:`TODO: add optional triangulated geometry handling : use for guide tube`

     * :r:`torus quartic analytic solution painful : expect triangulation approximation more robust+precise`

   * :b:`TODO: test "listnode" solution for handling deep CSG trees (complex solid shape)`


.. class:: center

   **Completing these three : will match GPU and CPU geometry**


.. s5_talk::

    The geometry differerences can be grouped into three. 

    First there are some small shifts in PMT virtual wrapper volumes to avoid degeneracy. 
    Once I demonstrate that these shifts have no performance effects or overlap issues in
    standard (non-Opticks) running I hope the defaults can be enlarged to keep geometries the same.

    Secondly the guide tube is skipped. To remedy this requires adding triangulated geometry handling.
    Old opticks had this functionality : I need to revive this into the new Opticks. 

    The third difference is skipping of some complex CSG solids.  I have a solution for this 
    that needs to be tested.  
   




Opticks Links, JUNOSW+Opticks DocDB 
-------------------------------------

.. table::
    :align: center

    +----------------------------------------------+---------------------------------------------+
    | https://bitbucket.org/simoncblyth/opticks    | code repository (day-to-day)                |     
    +----------------------------------------------+---------------------------------------------+
    | https://github.com/simoncblyth/opticks       | code repository (~month-to-month), releases |     
    +----------------------------------------------+---------------------------------------------+
    | https://simoncblyth.bitbucket.io             | publications, presentations, videos         |   
    | https://simoncblyth.github.io                |                                             | 
    | https://juno.ihep.ac.cn/~blyth/              |                                             |
    +----------------------------------------------+---------------------------------------------+
    | https://groups.io/g/opticks                  | forum/mailing list archive                  |    
    +----------------------------------------------+---------------------------------------------+
    | email:opticks+subscribe@groups.io            | subscribe to mailing list                   |    
    +----------------------------------------------+---------------------------------------------+ 



**JUNOSW+Opticks**


.. class:: normal

    .. table::
        :align: center

        +-------------+-----------+------------------------------------------------------------+
        | DocDB-10968 |2023/12/19 | Using first JUNOSW+Opticks Pre-Release at IHEP GPU cluster |
        +-------------+-----------+------------------------------------------------------------+
        | DocDB-10929 |2023/12/11 | JUNOSW + Opticks : Profiling and Status                    |
        +-------------+-----------+------------------------------------------------------------+


.. s5_talk::

    Links and recent DocDB numbers




:small:`2024/06 JUNO+Opticks Geom Fix`
---------------------------------------

.. comment

    for targetting seems need to use full page dimension half the actual dimension


.. raw:: html

    <p style="margin-bottom:-10mm;" />
    <p style="position:fixed;top:625px;left:10px;font-size:25px;background-color:white;border:1px solid black;padding:5px;">
    WaterPool Overlaps+Opticks FIXED with simpler approach
    </p>
    <p style="position:fixed;top:275px;left:650px;font-size:25px;background-color:white;border:1px solid black;padding:5px;">
    FastenerAcrylic works with G4MultiUnion/"list-node"
    </p>
    <p style="position:fixed;top:625px;left:650px;font-size:25px;background-color:white;border:1px solid black;padding:5px;">
    Testing triangulated GuideTube + XJ + SJ solids
    </p>
    <p style="margin-bottom:20mm;" />
 
.. comment

   Geom. fixes merged into main, enabled by envvar  

.. raw:: html

    <p style="margin-bottom:-15mm;" />

.. class:: small

   * Re-implemented WaterPool with hierarchy approach 

     * avoid : ~120 overlaps, complex CSG
     * enables translation to Opticks/GPU
  
   * FastenerAcrylic (590) working using "list-node" 

     * discontiguous => simple + fast 

   * GuideTube (39*2*2 = 156 G4Torus) 

     * torus intersect v.expensive on GPU => :r:`triangulate` 
     * adjust precision with NumberOfRotationSteps  

   * XJ + SJ solids (less numerous) 

     * many concident surfaces, try :r:`triangulate` 



.. s5_talk::

    Klop


:small:`2024/06 JUNOSW+Opticks : Status + Plan`
-------------------------------------------------

.. class:: small

   +------------------------------+----------------------------------------------------------------------------------------+--------+
   |  Option                      | :r:`Approach to equalize CPU/GPU geometry`                                             | Status | 
   +==============================+========================================================================================+========+
   | :strike:`--no-guide_tube`    | triangulated with NumberOfRotationSteps precision control                              | GOOD   |
   +------------------------------+---------------------------------------------+------------------------------------------+--------+
   | :strike:`--debug-disable-fa` |  FastenerAcrylic using G4MultiUnion/"list-node" works                                  | GOOD   |
   +------------------------------+-----------------------------------------------------+----------------------------------+--------+
   | :strike:`--debug-disable-xj` |  XJfixture XJanchor                                 |  Trying triangulated             | ??     |
   +------------------------------+-----------------------------------------------------+  (if too much validation         |        |
   | :strike:`--debug-disable-sj` |  SJCLSanchor SJFixture SJReceiver SJReceiverFastern |  deviation use "listnode")       |        |
   +------------------------------+-----------------------------------------------------+----------------------------------+--------+

   **Immediate Steps : Geometry + Performance + Validation**

   * generalize Opticks geometry for fine-grained triangulation control
   * geometry performance scan + validation check
   * :b:`Make full geometry JUNO+Opticks release`
   * automate performance + validation monitoring 
   * :r:`convince offline group to change defaults, adopting geometry fixes+simplifications`                                                 
 
   **Optimization : measure performance as:**

   * slim Release kernel  
   * change instancing criteria, reduce remainder volumes by instancing more 
   * get support stick volumes instanced together

   **Production Prep** : auto event splitting, depending on VRAM 


.. s5_talk::

    Klop



