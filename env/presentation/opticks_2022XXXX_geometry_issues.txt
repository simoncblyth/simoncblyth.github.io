
.. meta::

   :title: 
   :name: opticks_20220118_juno_collaboration_meeting
   :description: (Jan 2022) 
   :notes: progress update 

.. include:: my_s5defs.txt

.. include:: s5_background_image.txt


:i:`JUNO+Opticks : Geometry Issues` 
========================================================================================

.. raw:: html

    <p style="margin-bottom:4cm;" />
    <div class="mytitle">
    <header>
    <h1 style="background-color:lightgrey"> 
        JUNO+Opticks : Geometry Issues   
        <h2 style="background-color:lightgrey;text-align:center"> Open source, https://bitbucket.org/simoncblyth/opticks </h2>
    </h1>
    </header>
    </div>

..

  *Opticks* replaces *Geant4* optical photon simulation with an **equivalent implementation** 
  that benefits from state-of-the-art GPU ray tracing from NVIDIA OptiX. 
  All optically relevant aspects of *Geant4* context must be translated+copied to GPU:

  * :b:`geometry : solids, structure, material+surface properties`
  * generation : Cerenkov + Scintillation (using **Gensteps** from *Geant4*) 
  * propagation : Rayleigh scattering, absorption, reemission, boundary

  Achieving+maintaining **equivalence** is time consuming, BUT:

  * :r:`transformative performance benefits >1000x Geant4`   


.. raw:: html

    <div class="mycredit">
    <h2 style="background-color:lightgrey"> Simon C Blyth  &mdash; ?? 2022 </h2>
    </div>


.. s5_talk:: 

    Most recent work has been focussed on fixing geometry issues
    


cxr_geochain_XJfixtureConstruction_ALL_jpg
---------------------------------------------

.. raw:: html

    <p style="margin-bottom:13cm;" />


``EYE=3,0.5,-1 UP=0,0,1 ZOOM=4 TMIN=0 PUB=1 ./cxr_geochain.sh``


cxr_geochain_XJfixtureConstruction_ALL_otherside_jpg
-------------------------------------------------------

.. raw:: html

    <p style="margin-bottom:13cm;" />
   

``EYE=-3,0.5,-1 UP=0,0,1 ZOOM=4 TMIN=0 PUB=otherside  ./cxr_geochain.sh``


cxr_geochain_XJfixtureConstruction_ALL_upper_jpg
-------------------------------------------------------

.. raw:: html

    <p style="margin-bottom:13cm;" />

``EYE=-3,0.5,1 UP=0,0,1 ZOOM=4 TMIN=0 PUB=upper ./cxr_geochain.sh`` 


cxr_geochain_XJfixtureConstruction_ALL_speckle_jpg
-------------------------------------------------------

.. raw:: html

    <p style="margin-bottom:13cm;" />

``EYE=-3,0.5,0.8 UP=0,0,1 ZOOM=4 TMIN=2.7 CAM=0 PUB=speckle ./cxr_geochain.sh``



Geometry/Translation Issues Summary
--------------------------------------

.. sidebar:: :small:`Other Geometry/Translation Issues`


    .. class:: small

       **Fastener base_steel : multiple-Rmin Polycone** 

       * FIXED : :g:`improved Opticks translation`

       **Hamamatsu neck : cylinder minus torus**

       * spurious Geant4 intersects observed
       * AVOIDED : :b:`polycone neck now default` 

       **PMT mask : CSG coincidence issue**

       * FIXED : :g:`straightforwardly at Geant4 level`  

       **XJanchorConstruction : spurious G4 intersects**

       * WIP : :r:`find not fixed by expanding cylinder` 

       **SJReceiverConstruction**

       * note disjoint union : Geant4 docs advise against


.. class:: small 

    **Fastener : interfering subtraction-of-subtraction issue**

    ``--additionacrylic-simplify-csg`` 
         * TODO: :r:`further checks before making it default`  
         * could add "cavity" volume to avoid geo change

    * :b:`PMTs do not CSG subtract cavity in Pyrex for Vacuum...`
    * :r:`favor volume heirarchy over complicated CSG`  

    **Cutdown PMT breaks Opticks translation**

    * profligate G4IntersectionSolid cutdowns => overlarge CSG tree
    * FIXED with **ZSolid** : actually cuts the CSG tree 
    * :r:`expect significant Opticks + Geant4 speedups`

    **solidXJfixture : ~10/64 overlaps with fasteners**

    * WIP : :r:`fastener/fixture positions need to work together`

    **solidXJfixture : extreme coincidence, many spurious intersects**

    * extreme coincident face issue, difficult to fix at Geant4 level  
    * TODO: :r:`re-implement simpler, fewer constituents`


.. s5_talk::

    Some of the issues are with the source geometry and some are with the translation to the GPU.
    Getting JUNO onto the GPU in order to benefit from state-of-the-art GPU ray tracing
    also improves the speed and correctness of the CPU simulation.



:i:`Fastener`
---------------

.. raw:: html

    <p style="margin-bottom:5cm;" />

    <h1> Fastener : interfering subtraction-of-subtraction issue </h1>


.. s5_talk::

    Now onto the Fastener geometry


:i:`quicktime 2 lAddition_uni_acrylic3`
------------------------------------------

.. sidebar::  :small:`Fasteners : performance+validity` 

    .. class:: small

        * Dark columns are subtracted voids, not the rods that go inside
        * => Complex CSG "Greek Temple" x2
        * => Opticks excess "SI BT BT BT BT AB" cf G4 

        :redbold:`2D render reveals cause : spurious intersects`


.. s5_talk::

    Complicated CSG leads to problems


:i:`StickMPL_all`
-------------------

.. class:: small

   * ``two horizontal green lines just below (0,0) are spurious``  

      * ``=> wrong Water/Acrylic properties used`` 
      * ``Opticks "SI BT BT BT BT AB" excess``  
      * ``CAUSE : poor G4 geometry modelling``
      * ``=> interfering subtraction of subtraction``
     


.. s5_talk::

    Subtracting pipe shape causes the issue, 
    because the pipe is implemented as a subtraction 
    you get an interferening subtraction of a subtraction. 



.. comment


    ``StickMPL_skip_steel``
    --------------------------

    .. raw:: html

        <pre>





        </pre>


    .. class:: small

       * ``cylinder with inner removed + cylinder rods are subtracted from cone``
       * ``two horizontal green lines just below (0,0) should not be there``  

    .. raw:: html

        <pre>





        </pre>

    .. class:: small

       * ``Possible explanation of Opticks "SI BT BT BT BT AB" excess``
       * ``Spurious boundaries may causes wrong Water/Acrylic properties used`` 





``Daughter Cavity``
-------------------------

.. class:: small

   * ``=> pointless`` 
   * ``=> not "the Geant4 way"``
   * ``=> causes sub-sub issue`` 

.. s5_talk::

    Zooming in you can see the cavity and the rods inside. 
    So what is happening is this geometry is doing CSG subtraction to make a 
    cavity for the daughter volumes. 


:small:`Fastener : interfering subtraction-of-subtraction issue`
-----------------------------------------------------------------

.. sidebar:: :small:`Geometry Modelling Experience`

    .. class:: small

        Geant4: Each volume is created by describing its shape and its physical
        characteristics, and then placing it inside a containing volume.

        * :b:`daughter material replaces that of parent`
        * :r:`favor volume hierarchy over complex CSG` 
        * CSG inherently limited, can be expensive/buggy
        * simple CSG avoids problems: 

        **CSG Subtracting Daughter Cavities**

        1. not necessary, complicates CSG
        2. easily doubles expense for no benefit
        3. causes this issue 

        :r:`Vacuum cavity not subtracted from PMT Pyrex ...`
            :r:`So why do that here ?`


.. class:: small 


    **If gap between acrylic cone and steel rods is not important**
    
    Model with hierarchy of 2 volumes:

    * Outer Volume : Acrylic polycone (**without** cavity for rods)
    * Inner Volume : Steel Rods 

    This is the approach taken with option:

    ``--additionacrylic-simplify-csg``

    * :r:`problem is avoided, but some geometry change`
    * currently not the default 


    **If gap between acrylic cone and steel rods is important**

    Model with hierarchy of 3 volumes:

    * Outer Volume : Acrylic polycone 
    * Middle Volume : Water Cylinders 
    * Inner Volume : Steel Rods 



.. raw:: html

    <p style="margin-bottom:4cm;" />

.. class:: tiny

    * https://geant4-userdoc.web.cern.ch/UsersGuides/ForApplicationDeveloper/html/GettingStarted/geometryDef.html

    

.. s5_talk::

    The complexity and the problem can easily be avoided by not doing the pointless subtraction. 
    This option does that.



:i:`Investigate XJfixtureConstruction Solid`
----------------------------------------------

.. raw:: html

    <p style="margin-bottom:5cm;" />

    <h1> Investigate XJfixtureConstruction Solid</h1>
   

.. s5_talk::

   XJfixtureConstruction is part of the sticks geometry 


X4MeshTest_XJfixtureConstruction_png
--------------------------------------

``cd ~/opticks/extg4 ; GEOM=XJfixtureConstruction ./X4MeshTest.sh``
    ``view of Geant4 polygonized solidXJfixture`` 


``holy geometry : celtic cross (tubs + FOUR box) atop an altar (TWO box)``
    ``union of annular tubs and SIX boxes``  

.. s5_talk::

   Geant4 polygonized render is good to get familiar with a solid

   * first thing to note is number of CSG constituents 



:i:`cxs_custom_XJfixtureConstructionXY`
-----------------------------------------

``COMP=custom_XY ./cxs_solidXJfixture.sh``
    ``cross section view of standalone solidXJfixture``

``All interior red intersects are spurious : not easy to fix.``
     ``probable cause of history discrepancy`` 
    


.. raw:: html

    <p style="margin-bottom:8cm;" />

.. class:: normal

    :r:`So many spurious intersects : Easier to start over with fewer constituent solids`


.. s5_talk::

   Looking at 2D Opticks cross section shows exceptionally large number of spurious intersects



XJfixtureConstruction CSG Model
---------------------------------

.. raw:: html

    <pre class="mypretiny">
       Unexpected spurious vertical at 35          In Y box is at 50 +- 15   
       (only appears with 4 box, not 2)                35    50     65        
                                                        :  
                                                        :     :     :                            altar frame      fixture frame 
                                                        :
         -------------+                             +---+---+-+-----+        - - - - - - - - - - 18.5+13  = 31.5          6.5  
         |            |                             |   :   |      13/2=6.5                                       
         +            +                             +   :   + :     :         - - - - - - - - -  18.5+6.5 = 25            0.0           
         |            |                             |   :   |       :
         +------------+----------------+-----25-----+---20--+-+-----+         - - - - - - -       8.5+10 =  18.5         -6.5  
         |                                                          |
         +    up2                      +                            +       - - - - - - - - - -   8.5+5  = 13.5         -11.5
         |                                                          |               
         +---------+^^^^^^^^^^^^^^^^^^^+^^^^^^^^^^^^^^^^^^+---------+       - - - - - - - - - -             8.5         -16.5
                   |                                      |         
                   |                                     17/2=8.5        
                   +  up1                                 +                - - - - - - - - - -              0.0         -25.0
                   |                                      |
                   |                                      |
                   +-------------------+-------40---------+            - - - - - - - - - - - - -           -8.5         -33.5

                                       |            |    :   |
            Z                          0            25   35  45
            |                                       |    :   | 
            |                                       |    :   |
            +-- Y                                   |    :   outer tubs
           /                                        |    :
          X                                         |    spurious vertical from box edge (why? it is within the tubs ring) 
                                                    inner tubs
    </pre>

.. class:: small

    :r:`Due to construction technique and Geant4 limitations : simple anti-coincidence tricks cannot be used`


.. s5_talk::

    Applicaility of anti-coincidence tricks depend on the way the CSG is modelled.
    In this case they cannot be used at Geant4 level without totally starting again with the geometry. 




:i:`Investigate XJfixtureConstruction Positions`
--------------------------------------------------

.. raw:: html

    <p style="margin-bottom:5cm;" />

    <h1> Investigate XJfixtureConstruction Positions</h1>
   

.. s5_talk::

    As well as the solid, I also looked into its positioning.

    As there are only 64 of them they do not pass the 
    Opticks instancing cuts so they get lumped into global geometry remainded.      

    That causes a difficulty for targetting as do not have an instance frame 
    and 4x4 transform to work within.



``RTP (Radial-Theta-Phi) Tangential Frames``  
---------------------------------------------

.. raw:: html

   <p style="margin-bottom:3cm;" />

.. sidebar:: :small:`RTP Derivatives Basis`

   .. class:: small

       :r:`Radial (red)`
       :g:`Theta (green)`
       :b:`Phi (blue)`

       * (0,0,0) origin at any target point on sphere 
       * (1,0,0) :r:`radial outwards direction`
       * (0,1,0) :g:`theta tangent direction (north to south)` 
       * (0,0,1) :b:`phi tangent direction (west to east)` 

       :r:`orient views and rays relative to any geometry`


.. raw:: html

   <p style="margin-bottom:13cm;" />

.. class:: small

   ``RTP Tangential frame : target geometry without using instance frame``
       ``=> can be used for any geometry, eg non-instanced XJfixtureConstruction`` 
       ``=> consistent control of viewpoints or genstep grids for all placements``


.. s5_talk::

    RTP tangential frame is useful for targetting geometry that does not have its own instance frame, 
    that means you can control render viewpoints or genstep grids in consistent way for all placements 



:small:`Render 64 solidXJfixture from same viewpoint in RTP frame of each`
-------------------------------------------------------------------------------------------------

.. class:: small

    ::
  
         cd ~/opticks/CSGOptiX
         for n in $(seq 0 63) ; do
           EYE=2,-1,-1 LOOK=0,0,0 UP=1,0,0 MOI=solidXJfixture:$n:-3 ./cxr_view.sh
         done


.. class:: small

    +----------------------------------------------------------------------------------------------------+
    | MOI identifier picks volume using solid names and repeat indices                                   |
    +------------------------------------------+---------------------------------------------------------+
    |   Instanced Geometry                     |   Global Geometry                                       |
    +==========================================+=========================================================+
    |  ``NNVT:0:1000``                         |  ``solidXJfixture:10``  (default cartesian XYZ)         |
    +------------------------------------------+---------------------------------------------------------+
    |  ``Hama:0:2000``                         |  ``solidXJfixture:10:-3`` (RTP tangential frame)        |   
    +------------------------------------------+---------------------------------------------------------+

    Components of MOI *Mname:mOrdinal:InstanceIndex*:

    *Mname*
      selects first volume with solid name starting with *Mname*

    *mOrdinal* 
      usually 0 with instanced geometry, or selects between global repeats  

    *InstanceIndex*
      selects instanced repeat or with global geometry selects between frame types 


.. s5_talk::

    Those bash commands make rendered images of all 64 fixtures from a consistent viewpoint in the RTP frame of each.



:i:`image_grid_cxr_solidXJfixture:XX:-3`
-----------------------------------------

.. s5_talk::

    Grid of 64 images showing all the solidXJfixture from same RTP frame viewpoint for each

    LOOK=0,0,0
        origin of the RTP frame is the center of the solidXJfixture
        obtained from its axis-aligned bounding box

    EYE=2,-1,-1 
        ^  ----- 
        |      45 degrees in tangential theta-phi directions
        | 
        2 units of extent outwards radially


    Variations in radius and clashes between solidXJfixture and uni_acrylic1 and uni1 are visible)   



Observations of the 64 solidXJfixture renders
------------------------------------------------

.. class:: small

    * First 8 (0-7) very different to the 56 others (8-63)

      * 0-7 are at smaller radius than 8-63    
      * 0,1 positioned mid-chimney and overlap each other 
      * 2-7 located around **sTarget** radius, are obscured by **uni_acrylic1** 


    * 36,40,46 close to **uni_acrylic1** of fastener
    * 37,41,44,47,50,52,55,58,61 overlapped or cut by **uni_acrylic1**
    

.. class:: small


    * :r:`probably inconsistency between the set of pos files ?`


    **LSExpDetectorConstruction::setupCD_Sticks Implemented poorly**

    12 large copy/pasted blocks of code with small changes in each 

    * obfuscates meaning by burying it in boilerplate (had to create table to understand it)   
    * :r:`coding style that invites bugs, now and in future`

    Clarity requires higher level code (simply use static method to handle the repetitive parts)
 
    * -> less code, clearer code, understandable code  


.. s5_talk::

   The renders reveal overlaps 




LSExpDetectorConstruction::setupCD_Sticks 
----------------------------------------------------

.. class:: small

    +-----------------------------+----------------------------------+----------------------------+-----------------------------+----------------------+
    |  member                     |  class                           | pos_file                   | radius                      |  #pos                |             
    +=============================+==================================+============================+=============================+======================+
    | m_strut_name                | StrutAcrylicConstruction         | m_strut_pos_file           | strut_r                     |  370                 |
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+----------------------+
    | m_strut2_name               | StrutBar2AcrylicConstruction     | m_strut2_pos_file          | strut2_r                    |  220                 |
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+----------------------+    
    | m_strutballhead_name        | StrutBallheadAcrylicConstruction | :g:`m_fastener_pos_file`   | strutballhead_r             |  590                 |
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+                      |   
    | m_fastener_name             | FastenerAcrylicConstruction      | :g:`m_fastener_pos_file`   | fastener_r                  |                      |
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+                      |
    | m_upper_name                | UpperAcrylicConstruction         | :g:`m_fastener_pos_file`   | upper_r                     |                      |
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+                      | 
    | m_addition_name             | AdditionAcrylicConstruction      | :g:`m_fastener_pos_file`   | addition_r                  |                      |
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+----------------------+    
    | m_xjanchor_name             | XJanchorConstruction             | :r:`m_xjanchor_pos_file`   | xjanchor_r                  |  56                  |
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+                      |    
    | m_xjfixture_name            | :b:`XJfixtureConstruction`       | :r:`m_xjanchor_pos_file`   | :b:`xjfixture_r`            |                      | 
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+----------------------+    
    | m_sjclsanchor_name          | SJCLSanchorConstruction          | m_sjclsanchor_pos_file     | sjclsanchor_r               |   2                  |
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+----------------------+
    | m_sjfixture_name            | SJFixtureConstruction            | m_sjfixture_pos_file       | sjfixture_r                 |  36                  |
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+----------------------+
    | m_sjreceiver_name           | SJReceiverConstruction           | :m:`m_sjreceiver_pos_file` | sjreceiver_r                |   8                  |
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+                      |
    | m_sjreceiver_fastener_name  | :b:`XJfixtureConstruction`       | :m:`m_sjreceiver_pos_file` | :b:`sjreceiver_fastener_r`  |                      |
    +-----------------------------+----------------------------------+----------------------------+-----------------------------+----------------------+


.. class:: small

    * :b:`XJfixtureConstruction` appears twice with different radius => two position files => 8+56 = 64 solidXJfixture  
    * Position files loaded from $JUNOTOP/offline/Simulation/DetSimV2/DetSimOptions/data/Strut_Acrylic.csv,...


.. s5_talk::

   Table summarizes the sticks geometry implementation  



.. comment

    Check csv PosFile
    ---------------------

    .. class:: small

        j/PosFile/HexagonPosBallTest.py

    .. comment

         jcv DetSim0Svc

         50     declProp("StrutPosFile", m_strut_pos_file);
         51     declProp("Strut2PosFile", m_strut2_pos_file);
         52     declProp("FastenerPosFile", m_fastener_pos_file);
         53     declProp("XJanchorPosFile", m_xjanchor_pos_file);
         54     declProp("SJCLSanchorPosFile", m_sjclsanchor_pos_file);
         55     declProp("SJReceiverPosFile", m_sjreceiver_pos_file);
         56     declProp("SJFixturePosFile", m_sjfixture_pos_file);

    .. class:: small

        +------------------+-----------------+----------------------+----------------------------+
        |             csv  |             npy |       declProp       |   name                     |
        +==================+=================+======================+============================+
        |          (370,)  |     (370, 4, 4) |         StrutPosFile |   Strut_Acrylic.csv        |  
        +------------------+-----------------+----------------------+----------------------------+
        |          (220,)  |     (220, 4, 4) |        Strut2PosFile |   StrutBar2_Acrylic.csv    |
        +------------------+-----------------+----------------------+----------------------------+
        |          (590,)  |     (590, 4, 4) |      FastenerPosFile |   Strut_Anchor_Acrylic.csv |
        +------------------+-----------------+----------------------+----------------------------+
        |           (56,)  |      (56, 4, 4) |      XJanchorPosFile |   XJanchor.csv             |
        +------------------+-----------------+----------------------+----------------------------+
        |            (2,)  |       (2, 4, 4) |   SJCLSanchorPosFile |   SJCLSanchor.csv          |
        +------------------+-----------------+----------------------+----------------------------+
        |            (8,)  |       (8, 4, 4) |    SJReceiverPosFile |   SJReceiverPos.csv        |
        +------------------+-----------------+----------------------+----------------------------+
        |           (36,)  |      (36, 4, 4) |     SJFixturePosFile |   SJFixturePos.csv         |
        +------------------+-----------------+----------------------+----------------------------+


    .. class:: small 

       * numbers of positions in each position file 



solidXJfixture64radii.png
------------------------------

.. s5_talk::

   plot of the radii of the 64 solidXJfixture : note that first 8 are at lower radius 


:i:`cxr_view_solidXJfixture:55:-3_cam_1_eye_8,-4,-4_zoom_1_tmin_0.1`
---------------------------------------------------------------------

.. raw:: html

   <p style="margin-bottom:12cm;" />
 

``EYE=8,-4,-4 LOOK=0,0,0 MOI=solidXJfixture:55:-3 ./cxr_view.sh`` 
    ``view directly at the fixture, but not visible as uni_acrylic1 in front``


.. s5_talk::

    fixture is hidden underneath the foot  


.. comment

    :i:`cxr_view_solidXJfixture:55:-3_cam_1_eye_4,-2,-2_zoom_1_tmin_0.1`
    ---------------------------------------------------------------------

    .. raw:: html

       <p style="margin-bottom:12cm;" />
     

    ``EYE=4,-2,-2 LOOK=0,0,0 MOI=solidXJfixture:55:-3 ./cxr_view.sh`` 
        ``closer, at same angle of view``

        
    :i:`cxr_view_solidXJfixture:55:-3_cam_1_eye_2,-1,-1_zoom_1_tmin_0.1`
    ---------------------------------------------------------------------

    .. raw:: html

       <p style="margin-bottom:12cm;" />
     

    ``EYE=2,-1,-1 LOOK=0,0,0 MOI=solidXJfixture:55:-3 ./cxr_view.sh`` 
        ``even closer, at same angle of view``



:i:`cxr_view_solidXJfixture:55:-3_cam_1_eye_1,-0.5,-0.5_zoom_1_tmin_0.1`
-------------------------------------------------------------------------

``EYE=1,-0.5,-0.5 LOOK=0,0,0 MOI=solidXJfixture:55:-3 ./cxr_view.sh`` 
    ``closer again, at same angle of view : fixture now visible, coincidence speckle between spherically curved uni_acrylic1 base and sAcrylic``

.. s5_talk::

   fixture is underneath the foot


:i:`cxs_XJfixtureConstructionPR_55`
------------------------------------

.. raw:: html

   <p style="margin-bottom:12cm;" />
   
``COMP=PR_55 ./cxs_solidXJfixture.sh``
   ``PR cross section view of solidXJfixture:55:-3 from the +ve T axis : solidXJfixture is bumping into uni1``

.. s5_talk::
 
    2D cross section using the tangential frame shows the fixture bumping into the fastener


.. comment

    :i:`cxs_XJfixtureConstructionTR_55`
    ------------------------------------

    .. raw:: html

       <p style="margin-bottom:12cm;" />
       
    ``COMP=TR_55 ./cxs_solidXJfixture.sh``
       ``TR cross section view of solidXJfixture:55:-3 cuts across the side of uni_acrylic1``


    .. s5_talk::

        In the perpendicular plane see conic section


    :i:`solidXJfixture:0:-3_cam_0_t0_cxr_view___eye_8,-32,0__zoom_1__tmin_32_solidXJfixture:0:-3.jpg`
    --------------------------------------------------------------------------------------------------

    .. raw:: html

       <p style="margin-bottom:12cm;" />
     

    ``EYE=8,-32,0 LOOK=0,0,0 CAM=0 ./cxr_view.sh``
        ``render of solidXJfixture:0:-3 "floating" in mid-chimney, using CAM=0 perspective projection, coincident chimney cylinder speckle`` 


    .. s5_talk::

        First two fixtures are mid-chimney and ontop of each other



:i:`solidXJfixture:0:-3_cam_1_t0_cxr_view___eye_32,-48,0__look_32,0,0__zoom_1__tmin_48_solidXJfixture:0:-3.jpg`
-----------------------------------------------------------------------------------------------------------------

``EYE=32,-48,0 LOOK=32,0,0 CAM=1 ./cxr_view.sh``
    ``wider view using CAM=1 parallel projection : fixture visible at base of chimney`` 


.. s5_talk::

    First two fixtures at base of chimney, and ontop of each other
    


:i:`solidXJfixture:0:-3_cam_1_t0_cxr_view___eye_32,-48,0__look_32,0,0__zoom_0.25__tmin_48_solidXJfixture:0:-3.jpg`
-------------------------------------------------------------------------------------------------------------------


.. raw:: html

   <p style="margin-bottom:13cm;" />
 

``EYE=32,-48,0 LOOK=32,0,0 CAM=1 ZOOM=0.25 ./cxr_view.sh``
    ``even wider view from same position, but with ZOOM=0.25 increasing the field-of-view : TT now visible`` 


.. s5_talk::

    Even wider view using ZOOM to change the field of view


:i:`cxs_XJfixtureConstructionTR_0`
------------------------------------


.. raw:: html

   <p style="margin-bottom:12cm;" />
 
``COMP=TR_0 ./cxs_solidXJfixture.sh``
    ``TR cross section view of solidXJfixture:0:-3 which is mid-chimney showing overlap with solidSJReceiver``


.. s5_talk::

    overlap of fixture and receiver  



.. comment

    :i:`cxs_XJfixtureConstructionTP_0`
    ------------------------------------

    .. raw:: html

       <p style="margin-bottom:12cm;" />
     
    ``COMP=TP_0 ./cxs_solidXJfixture.sh``
        ``TP "tangential" cross section view of solidXJfixture:0:-3 which is mid-chimney showing crossed rectangles from overlap with solidXJfixture:1 which is rotated``



:i:`cxs_XJfixtureConstructionTP_0_Rshift`
------------------------------------------

.. raw:: html

   <p style="margin-bottom:12cm;" />
 
``COMP=TP_0 ./cxs_solidXJfixture.sh``
    ``Same TP "tangential" cross section view of solidXJfixture:0:-3 but lower in radial direction showing crossed "celtic-crosses"``


.. s5_talk::

    Tangential TP plane view of of fixture


.. comment

    :i:`cxs_XJfixtureConstructionPR_0`
    ------------------------------------

    .. raw:: html

       <p style="margin-bottom:12cm;" />
     
    ``COMP=PR_0 ./cxs_solidXJfixture.sh``
        ``PR cross section view of solidXJfixture:0:-3 showing overlap with solidSJReceiver``





XJfixtureConstructionTR_2
------------------------------

.. raw:: html

   <p style="margin-bottom:12cm;" />
 
``COMP=TR_2 ./cxs_solidXJfixture.sh``
    ``TR cross section view of solidXJfixture:2:-3 showing positioning at sTarget radius (first 0-7 are at this lower radius)``

.. s5_talk::

    Changing to fixture 2, the first 8 are at sTarget radius 



XJfixtureConstructionTR_52
------------------------------

.. raw:: html

   <p style="margin-bottom:12cm;" />
 
``COMP=TR_52 ./cxs_solidXJfixture.sh``
    ``TR cross section view of solidXJfixture:52:-3 showing positioning at higher radius inside uni_acrylic1``

.. s5_talk::

    Last 56 at higher sAcrylic radius 


solidXJfixture:41:-3_cam_1_t0_cxr_view___eye_2,-1,-1__zoom_1__tmin_0.1_solidXJfixture:41:-3.jpg
-------------------------------------------------------------------------------------------------

.. raw:: html

   <p style="margin-bottom:12cm;" />
 
``EYE=2,-1,-1 MOI=solidXJfixture:41:-3 ./cxr_view.sh``
    ``cxr render of solidXJfixture:41:-3 shows it poking out of uni_acrylic1``

.. s5_talk::

   Somethings gotta move here



XJfixtureConstructionPR_41
-----------------------------

.. raw:: html

   <p style="margin-bottom:12cm;" />

 
``COMP=PR_41 ./cxs_solidXJfixture.sh``
    ``PR cross section view of solidXJfixture:41:-3 showing uni_acrylic1 cutting across the fixture``


.. s5_talk::

    Cross section showing the overlap


.. comment

    XJfixtureConstructionClosePR_41
    ---------------------------------

    .. raw:: html

       <p style="margin-bottom:12cm;" />
     

    ``COMP=PR_41 ./cxs_solidXJfixture.sh``
        ``close PR cross section view of solidXJfixture:41:-3 showing uni_acrylic1 cutting across the fixture``



XJfixtureConstructionCloserPR_41
---------------------------------

.. raw:: html

   <p style="margin-bottom:12cm;" />

 
``COMP=PR_41 ./cxs_solidXJfixture.sh``
    ``closer PR cross section view of solidXJfixture:41:-3 showing uni_acrylic1 cutting across the fixture``


.. s5_talk::

    Closeup of the overlap



.. comment

    :i:`cxr_view_solidXJfixture:2:-3_cam_0_eye_16,-8,-8__zoom_1__tmin_0.1`
    -------------------------------------------------------------------------

    ``EYE=16,-8,-8 MOI=solidXJfixture:2:-3 ./cxr_view.sh``
        ``views at fixture, but obscured by uni_acrylic1`` 
         

    :i:`cxr_view_solidXJfixture:2:-3_cam_1_eye_8,-4,-4__zoom_1__tmin_0.0`
    -------------------------------------------------------------------------

    ``EYE=8,-4,-4 MOI=solidXJfixture:2:-3 TMIN=0.0 ./cxr_view.sh``
        ``views at fixture, but obscured by uni_acrylic1`` 





:i:`Investigate XJanchorConstruction Solid`
----------------------------------------------

.. raw:: html

    <p style="margin-bottom:5cm;" />

    <h1> Investigate XJanchorConstruction  Solid</h1>
   

.. s5_talk::

   Looking at other parts of sticks geometry 


X4IntersectSolidTest_XJanchorConstruction_YZ
----------------------------------------------

``Spurious Geant4 Intersects Visible on line between cone and cylinder``
   ``not fixed by expanding cylinder upwards, goes away when dont subtract acrylic sphere``


.. s5_talk::

   Subtracting acrylic sphere implicated  


:i:`Investigate SJReceiverConstruction Solid`
----------------------------------------------

.. raw:: html

    <p style="margin-bottom:5cm;" />

    <h1> Investigate SJReceiverConstruction Solid</h1>
   

.. s5_talk::

    SJReceiverConstruction




X4MeshTest_SJReceiverConstruction_png
----------------------------------------

``GEOM=SJReceiverConstruction EYE=1,1,0.2 ZOOM=2.5 ./X4MeshTest.sh``
    ``union of two unconnected parts : inner cone face is spherically curved``


.. raw:: html

    <p style="margin-bottom:8cm;" />


.. table::
    :align: center

    +------------------------------------------------------------+
    | :r:`Geant4 docs : component solids must not be disjoint`   |
    +------------------------------------------------------------+


.. s5_talk::

    Breaks Geant4 rules, skating on thin ice 


X4IntersectSolidTest_SJReceiverConstruction_XZ_png
---------------------------------------------------

``cd ~/opticks/extg4 ; GEOM=SJReceiverConstruction_XZ ./xxs.sh``

.. s5_talk::

    No apparent spurious intersects



:i:`Geant4_docs_Boolean_Solids_png`
------------------------------------

.. class:: small

    https://geant4.web.cern.ch/sites/default/files/geant4/collaboration/working_groups/geometry/training/D2-Basics.pdf


.. s5_talk::

   PDF Docs


Geant4_docs_Boolean_Solids_html
---------------------------------

.. class:: small

    https://geant4-userdoc.web.cern.ch/UsersGuides/ForApplicationDeveloper/html/Detector/Geometry/geomSolids.html?highlight=boolean#constructed-solid-geometry-csg-solids

.. image:: /env/presentation/Geant4/docs/Boolean_Solids_html_half.png
   :width: 800px
   :align: center



.. s5_talk::

   HTML Docs



Stick Geometry Issue Overview
-------------------------------

.. class:: small

     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+  
     |  class                            |  solid             | lv            |  mat          |   G4VSolid constituents                        |
     +===================================+====================+===============+===============+================================================+
     | StrutAcrylicConstruction          |  sStrut            |  lSteel       |  StrutSteel   |   Tubs                                         |
     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+  
     | StrutBar2AcrylicConstruction      |  sStrut            |  lSteel2      |  StrutSteel   |   Tubs                                         |
     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+  
     | StrutBallheadAcrylicConstruction  |  sStrutBallhead    |  lSteel       |  Steel        |   Orb                                          |
     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+ 
     | FastenerAcrylicConstruction       |  uni1              |  lFasteners   |  Steel        |   Tubs, Union                                  |
     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+  
     | UpperAcrylicConstruction (1)      |  base_steel        |  lUpper       |  Steel        |   Polycone                                     |
     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+  
     | AdditionAcrylicConstruction (2)   |  uni_acrylic3/1    |  lAddition    |  Acrylic      |   Polycone, Sphere, Sub.                       |
     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+  
     | XJanchorConstruction (3)          |  solidXJanchor     |  lXJanchor    |  Acrylic      |   Tubs, Cons, Sphere, Sub., Union              |
     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+
     | XJfixtureConstruction (4)(5)      |  solidXJfixture    |  lXJfixture   |  PE_PA        |   Tubs, Box, Union                             |
     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+  
     | SJCLSanchorConstruction           |  solidSJCLSanchor  |  lSJCLSanchor |  Acrylic      |   Box, Cons, Sphere, Sub., Union               |
     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+  
     | SJFixtureConstruction             |  solidSJFixture    |  lSJFixture   |  Acrylic      |   Box, Cons, Sphere, Sub., Union               |
     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+  
     | SJReceiverConstruction (6)        |  solidSJReceiver   |  lSJReceiver  |  Acrylic      |   Tubs, Cons, Box, Sphere, Sub., Union         |
     +-----------------------------------+--------------------+---------------+---------------+------------------------------------------------+  

.. class:: small

    1. DONE : fixed Opticks Polycone with multiple Rmin translation 
    2. needs ``--additionacrylic-simplify-csg`` to fix daughter volume cavity subtraction (TODO: make default)
    3. :r:`spurious Geant4 intersects observed (subtracting big sphere implicated, TODO: try without)`
    4. :r:`overlaps uni_acylic1, uni1, self` (WIP: Yuxiang assigned to update positions) 
    5. spurious coincidences (TODO: try simpler CSG modelling) 
    6. :r:`disjoint union + overlap with solidXJfixture`  

.. s5_talk::

    Stick Geometry
   




:small:`Overview`
----------------------------------------------------------------

.. table::
   :align: center

   +------------------------------------------------------------------+
   |   **JUNO Simulation -> Opticks -> GPU**                          |
   +---------------+--------------------------------------------------+
   | Benefits:     |  1. drastically faster GPU sim. in production    |
   |               |  2. improved CPU sim. speed + correctness        |
   +---------------+--------------------------------------------------+
   | Status:       |  * :b:`running out of geometry to have issues`   |
   |               |  * :r:`issues getting smaller, are converging`   |  
   +---------------+--------------------------------------------------+

.. sidebar:: :small:`Next Steps`

   .. class:: small

      * few more geometry issues to resolve
      * high stats history matching check
      * sim performance measurements
      * integrate OptiX 7 API work 
      * production optimization
      * CUDA/Opticks port new PMT optical model  

.. class:: normal

   * extremely sensitive to source geometry issues               

     * DONE: many fixes to PMTs, Fastener 
     * => :r:`improves CPU sim, enables GPU sim`

   **Many Thanks to : Yuxiang Hu, Wang Zike**

   * More pioneer users very welcome


.. table::
   :align: center

   +--------------------------------------------------+-----------------------------------------+
   | https://bitbucket.org/simoncblyth/opticks        | code repository                         |                   
   +--------------------------------------------------+-----------------------------------------+
   | https://simoncblyth.bitbucket.io                 | presentations and videos                |
   +--------------------------------------------------+-----------------------------------------+


.. comment

    .. raw:: html

        <p style="margin-bottom:1cm;" />


.. s5_talk::

    Close





:i:`Extra Slides : G4Cerenkov Improvement, Cerenkov on GPU`
---------------------------------------------------------------

.. raw:: html

    <p style="margin-bottom:5cm;" />

    <h1>Extra Slides : G4Cerenkov Improvement, CK on GPU</h1>
   
.. class:: small

    * Frank-Tamm Formula : Cerenkov Photon Yield /mm  at BetaInverse  

      * :r:`G4Cerenkov/G4Cerenkov_modified makes poor approximation => -ve photon yield close to RINDEX peak`

    * Numerical Integration Imprecision close to RINDEX peak
    * Numerical Integration Error (number of CK photons)  
    * Improved Precision "S2" Integration 
    * Monte Carlo Sampling : "Rejection" vs "Inverse Transform"
    * Cerenkov ICDF for various BetaInverse
    * Chi2 Comparisons of the two sampling methods

      * :b:`New Cerenkov ICDF sampling : faster, avoids double->float sensitivity`


.. s5_talk::

    Extras on Cerenkov 



:small:`Frank-Tamm Formula : Cerenkov Photon Yield /mm  at BetaInverse`
-------------------------------------------------------------------------

.. raw:: html

    <pre class="mypretiny">
                                                    BetaInverse^2    
              N_photon/369.81  =    Integral ( 1 - -----------------  )  dE         where   BetaInverse < ri[E] 
                                                       ri(E)^2      

                                =   Integral [ 1 ] dE -  BetaInverse^2 * Integral[ 1./(ri[E]*ri[E]) ] dE

    </pre>


.. class:: small

    **G4Cerenkov::BuildThePhysicsTable -> CerenkovAngleIntegrals (misnomer)** 

    * ``Integral[ 1/ri^2 ] dE``  cumulative trapezoidal approx. integral over RINDEX[E] of material

    :redbold:`Problems with G4Cerenkov::GetAverageNumberOfPhotons integration`

    * assumes monotonic RINDEX : only one permitted energy range 
    * putting together the split integral leads to -ve NumPhotons when close to RINDEX peak           
    * ``G4PhysicsVector::GetValue`` applies **linear interpolation** to cumulative integral of 1/ri^2  :redbold:`<-- POOR APPROX`  

.. raw:: html

    <pre class="mypretiny">
    636   G4double CAImax = CerenkovAngleIntegrals->GetMaxValue();
    637 
    638   G4double dp, ge;
    642   if (nMax < BetaInverse)        // ... no photons
    649   else if (nMin > BetaInverse) {
    650      dp = Pmax - Pmin;
    651      ge = CAImax;
    660   } else {
    661      Pmin = Rindex->GetEnergy(BetaInverse);
    662      dp = Pmax - Pmin;
    667      G4double CAImin = CerenkovAngleIntegrals->GetValue(Pmin, isOutRange);
    668      ge = CAImax - CAImin;
    674   }
    677   G4double NumPhotons = Rfact * charge/eplus * charge/eplus * (dp - ge * BetaInverse*BetaInverse);
    </pre>

.. s5_talk::

   Not splitting the numerical integration into two terms avoids making poor linear interpolation approximation



:i:`scan_GetAverageNumberOfPhotons_plot_1.7000_1.8000`
-------------------------------------------------------

.. s5_talk::

   The two curves differ in the region close to the refractive index peak.
   


:i:`scan_GetAverageNumberOfPhotons_difference_plot`
-----------------------------------------------------

.. s5_talk::

    Residual shape explained by using linear approximation for parabolic integral

   

:small:`Alternative "s2" integral approach : more precise, simpler, faster`
--------------------------------------------------------------------------------------


.. sidebar:: :small:`Trapezoidal s2 Integration`

    .. class:: small

        **s2(E) : from RINDEX(E) values and BetaInverse** 


    .. image:: /env/presentation/ana/ckn/trapezoidal_half.png 

    .. class:: small

        * B,C,D : trapezoids
        * A,E   : edge triangles  
        * x,y: "crossings" : RINDEX(E) == BetaInverse
          

.. raw:: html

    <pre class="mypretiny">

                     BetaInverse*BetaInverse
    Integral [ 1. -  ----------------------- ] (for BetaInverse < RINDEX)
                     RINDEX * RINDEX 

    Integral [ 1. - cos^2 theta ]   
    
    Integral [ sin^2 theta ]    

    Integral [ s2 ]             ( s2 > 0 )

    </pre> 

                 
.. class:: small

   Do not split the integral, do "s2" integral in one pass.  Advantages:

   * avoids one level of linear approximation, ca 
   * cannot give -ve values
   * simple one pass code, no separate find_crossings
   * also s2 is faster other than when numPhotons is zero 

     * AVOID by not calling when **BetaInverse > RINDEX_max**


.. comment

    * ``Integral a:b [ f(x) ] dx ~ (b - a)*(f(a) + f(b))/ 2``  trapezoidal approx


        In [1]: 2*np.pi*1e7/(137*1240)     # fine-structure-constant 1/137 and hc = 1240 eV nm 
        Out[1]: 369.860213514221



    <pre class="mypretiny">
    Integral a->b [ f(x) ] dx   ~     ( b - a )*( f(a) + f(b) ) / 2         trapezoidal numerical integration  
    </pre>             



    I noticed a small issue with G4Cerenkov/G4Cerenkov_modified.
    When BetaInverse is approaching the maximum LS RINDEX the 
    result of G4Cerenkov_modified::GetAverageNumberOfPhotons goes
    slightly negative. 

    Looking into this I found the cause is the splitting of the 
    numerical integral into pieces. The Frank-Tamm formula requires::

        Integral [ 1. - (BetaInverse*BetaInverse)/(rindex*rindex) ] 

    The G4Cerenkov approach is to split that up, storing the below integral 
    into CerenkovAngleIntegral::

    However when putting it back together with the below::

        1066      G4double dp1 = 0; G4double ge1 = 0;
        1067      for (int i=0; i<cross_num; i++) {
        1068         dp1 += the_energies_threshold[2*i+1] - the_energies_threshold[2*i];
        1069         G4bool isOutRange;
        1070         ge1 += CerenkovAngleIntegrals->GetValue(the_energies_threshold[2*i+1], isOutRange)
        1071                - CerenkovAngleIntegrals->GetValue(the_energies_threshold[2*i], isOutRange);
        1072      }
        1073 
        1077   G4double NumPhotons = Rfact * charge/eplus * charge/eplus *
        1078          (dp1 - ge1 * BetaInverse*BetaInverse);
        1079 

    The CerenkovAngleIntegrals->GetValue is doing linear interpolation
    which is a rather poor approximation for the parabolic cumulative integral.

    I find that this problem is avoided by doing the 
    numerical integral directly on sin^2 theta 
    which is valid as all the below are equivalent:: 
     
        Integral [ 1. - (BetaInverse*BetaInverse)/(rindex*rindex) ]   ( for: BetaInverse < rindex )

        Integral [ 1. - cos^2 theta ]   
        
        Integral [ sin^2 theta ] 

    Doing this avoids making the poor linear approximation for the parabolic
    cumulative integral, and avoids going -ve as there is no subtraction to 
    cause problems.

    Also, there is another advantage with this, in that you do not need
    to separately find rindex-BetaInverse crossings because sin^2 theta = ( 1 - cos(th) ) ( 1 + cos(th) )
    goes negative at the crossings so you can just numerically 
    integrate the "s2" over the energy range that it is positive 
    and use the "s2" zero crossings to add triangles for bins with crossings 
    to the full bin trapezoids.  


.. s5_talk::

   Direct integration of sin^2theta cone angle avoids the approximation


:small:`Monte Carlo "Rejection Sampling" VS "Inverse Transform Sampling"`
---------------------------------------------------------------------------------

.. sidebar:: :small:`Cerenkov Photons Energy Distrib`

   .. class:: small

        * Particle velocity, **Beta=v/c** **BetaInv=1/Beta** 
        * **n(E)** : refractive index **n = c/v**

          * Air~1.0003, Water:1.33-1.34, Glass:1.5-1.9 

        * **BetaInv > n(E)_max** : CK disallowed, too slow
        * **n(E)_min < BetaInv < n(E)_max** 

          * allowed energy depends on **n(E)** shape  

        * :redbold:`ICDF(BetaInv)` => 2d lookup **(u, BetaInv)** 

        New approach : Cerenkov ICDF sampling ?

        * :bluebold:`can it be done ?`  :r:`YES`
        * :redbold:`PRO: "free" (GPU texture lookup) sampling`
       

.. class:: small

    **Sampling** : generate **(x0,x1,x2,... )** that follow distribution **f(x)**

    :bluebold:`Rejection Sampling (used by current G4Cerenkov)`

    * throw 2 random numbers **(x,y)** in (domain, value) range
    * reject **x**  when **y > f(x)**  

    * Pros : simple, no integration or lookup tables 
    * Cons :

      * poor efficiency for some **f(x)** : many candidates rejected
      * :redbold:`observed float/double sensitivity` : **problem on GPU**

    :bluebold:`Inverse Transform (ICDF) Sampling`

    * compute CDF Cumulative Distribution Function, **CDF(x)** : integrals of **f(x)** across domain 
    * normalize : **CDF(xmin) = 0, CDF(xmax) = 1**
    * domain **x** and **CDF(x)** monotonic -> invert (swap **y<->x**) 
    * equate random **u(0->1)** to **y** enables to lookup sample **x** 

    * Cons : requires computation of large ICDF lookup tables 
    * Pros :

      * simple sampling : **one random lookup** (eg GPU texture lookup) 
      * ICDF lookups tables can be created once for a geometry 
        (often depending only on constant properties of materials)


.. class:: tiny 

    Cerenkov radiation is electromagnetic equivalent of sonic boom in air or bow waves in water


.. s5_talk::

    Standard way to generate Cerenkov wavelengths is with rejection sampling, but thats problematic on GPU.
    So I developed inverse transform sampling to yield Cerenkov wavelengths




:i:`test_makeICDF_SplitBin_QCKTest_s2cn_plot.png`
---------------------------------------------------

.. s5_talk::

    The curves are the ICDF for a variety of BetaInverse values



:small:`Chi2 comparison of Rejection and ICDF Lookup Cerenkov energy samples`
-------------------------------------------------------------------------------------

.. class:: normal

    Created with::

        cd ~/opticks/qudarap
        QCerenkovIntegralTest   # create ICDF lookups for many BetaInverse
        QCKTest                 # load ICDF, create lookup+rejection samples
        ipython -i tests/QCKTest.py   # chi2 comparisons on energy distribs
         

.. class:: normal

    Plots show:

    * histogram of energy distrib from ICDF lookup sample
    * histogram of energy distrib from rejection sample
    * "s2(E)" sin^2(cerenkov_cone_angle)[E]  : :redbold:`distribution the samples seek to follow`
    * ICDF : cumulative integral curve
    * relative chi2 contribution for each energy bin 

    :bluebold:`Note: ICDF becomes flat in disallowed energy regions` 


.. s5_talk::

   Both sampling techniques give equivalent samples, the new sampling approach does not 
   suffer from using float precision like rejection sampling does : so its better on GPU.
   

:i:`QCKTest_1.5000_en_plot.png`
----------------------------------

.. s5_talk::

   This compare the two samples with the target shape and gives the chi2


:i:`QCKTest_1.6000_en_plot.png`
----------------------------------


.. s5_talk::

   Get good agreement across entire BetaInverse range 


:i:`image_grid_QCKTest`
-----------------------

.. s5_talk::

   These are the comparisons for many BetaInverse values 





