

.. comment 

.. raw:: html

    <style type="text/css">
        span.alarm { color: red; } 
        span.warn { color: orange; } 
        span.ok { color: green; } 
        span.i { display: none; } 
        pre.sliteral { class:"literal-block small"; }   
        pre.mypre {
             display: block;
             font-family: monospace;
             font-size: 20px;
             white-space: pre;
             margin: 1em 0;
        }

    </style>

.. role:: i 
.. role:: alarm
.. role:: warn
.. role:: ok
.. role:: sliteral
.. role:: mypre 


.. include:: <s5defs.txt>

.. s5_background_image::

    #
    # slide titles and background image urls, 
    # including server relative urls like /env/geant4/geometry/collada/daeview/20140419-170713.png
    # and protocol relative urls like //localhost/env/test/LANS_AD3_CoverGas_Humidity.png
    #
    # NB1 slide titles here must match those in body precisely, 
    # NB2 also ensure all slide titles are unique
    #
    # first slide id is exceptionally: slide0, not the mangled title
    slide0
    /env/geant4/geometry/collada/g4daeview/20140419-170713-1024x768.png auto_auto 0px_0px

    g4daeview.py : Fast OpenGL 3D viewer for G4DAE files
    /env/geant4/geometry/collada/g4daeview/20140419-170713.png

    Cerenkov Photons Simulation - Top View
    /env/geant4/geometry/collada/g4daeview/20141224-115923.png

    Cerenkov Photons Simulation - Side View
    /env/geant4/geometry/collada/g4daeview/20141224-115935.png

    Scintillation Photons Simulation - Top View
    /env/geant4/geometry/collada/g4daeview/20141224-121444.png

    Scintillation Photons Simulation - Side View
    /env/geant4/geometry/collada/g4daeview/20141224-121435.png

    Standard Geant4 Workflow
    /env/keynotefigs/G4DAEChroma/G4DAEChroma.001.png

    External Photon Simulation Workflow
    /env/keynotefigs/G4DAEChroma/G4DAEChroma.002.png

    GGeoView
    /env/graphics/ggeoview/ggeoview-cerenkov-001.png 1047px_795px

    GGeoView M1 Points
    /env/graphics/ggeoview/ggeoview-scintillation-points-mat1.png 1435px_848px

    GGeoView Flag Selection 
    /env/graphics/ggeoview/ggeoview-scintillation-flag-seq-select.png 1436px_842px

    GGeoView Cerenkov Geom M1
    /env/graphics/ggeoview/ggeoview-cerenkov-m1-geom.png 1416px_845px
   
    JPMT Inside Wide 
    /env/graphics/ggeoview/jpmt-inside-wide_half.png 1432px_844px

    JPMT Wide
    /env/graphics/ggeoview/jpmt-wide_half.png 1409px_836px
  
    JPMT Headview
    /env/graphics/ggeoview/jpmt-headview_half.png 1308px_783px
 
    JPMT Backview
    /env/graphics/ggeoview/jpmt-backview_half.png 1149px_794px 
 
    JPMT Approach 
    /env/graphics/ggeoview/jpmt-approach_half.png 1431px_839px

    JPMT Arrival 
    /env/graphics/ggeoview/jpmt-arrival_half.png 1427px_841px 
 
    JPMT Before Contact 1
    /env/graphics/ggeoview/jpmt-before-contact_half.png 1430px_844px 
 
    JPMT Before Contact 2
    /env/graphics/ggeoview/jpmt-before-contact_half.png 1430px_844px 

    JPMT Before Contact 3
    /env/graphics/ggeoview/jpmt-before-contact_half.png 1430px_844px 
 
    JPMT After Contact 
    /env/graphics/ggeoview/jpmt-after-contact_half.png 1425px_840px 
  
    JPMT Inside Outside 
    /env/graphics/ggeoview/jpmt-inside-outside_half.png 1401px_842px

    NVIDIA OptiX In Action
    /env/presentation/optix-in-action_half.png 966px_646px 100px_50px

    Detecting Neutrinos via Optical Photons 1
    /env/presentation/dayabay-principal_half.png 1417px_830px 

    Detecting Neutrinos via Optical Photons 2
    /env/presentation/dayabay-principal_half.png 1417px_830px 


    1024x768
    /env/geant4/geometry/collada/g4daeview/20140419-170713-1024x768.png auto_auto 0px_0px

 
.. comment 

    GGeoView image is 2094x1590 1047x795

    GGeoView M1 Points is 2870x1696  1435x848

    GGeoView Flag Selection 2872x1684 1436x842

    GGeoView Cerenkov Geom M1 2832x1690 1416x845


    Generated Scintillation Photons GPU cf Geant4
    /env/g4dae/generated_scintillation_time_wavelength.png

    G4/DetSim Generated Cerenkov Wavelength
    /env/g4dae/g4_cerenkov_wavelength.png

.. comment

    Placeholder

    jpmt-after-contact.png 2850px_1680px
    jpmt-approach.png 2862px_1678px
    jpmt-arrival.png 2854px_1682px
    jpmt-backview.png 2298px_1588px
    jpmt-before-contact.png 2860px_1688px
    jpmt-headview.png 2616px_1566px
    jpmt-inside-outside.png 2802px_1684px
    jpmt-wide.png 2818px_1672px





======================================================================
Opticks : GPU Optical Photon Simulation
======================================================================

.. class:: tiny

    http://simoncblyth.bitbucket.org/env/presentation/opticks_gpu_optical_photon_simulation_psroc.html (Jan 2016)
    http://simoncblyth.bitbucket.org/env/presentation/opticks_gpu_optical_photon_simulation.html (Jan 2016)
    http://simoncblyth.bitbucket.org/env/presentation/optical_photon_simulation_with_nvidia_optix.html (July 2015)

.. class:: small

   **Executive Summary**

   *Opticks* integrates *Geant4* simulations with state-of-the-art **NVIDIA OptiX** GPU ray tracing.

   * DayaBay, JUNO can expect: **Opticks > 1000x G4** (workstation GPUs) 


   **Contents**

   * Neutrino Detection via Optical Photons 
   * Optical Photon Simulation Problem
   * NVIDIA OptiX GPU Ray Tracing Framework
   * Brief History of GPU Optical Photon Simulation Development
   * Introducing *Opticks* : Recreating G4 Context on GPU
   * Validating *Opticks* against *Geant4*
   * *Opticks* Overview 

   |  Simon C Blyth, National Taiwan University
   |  **January 2016** 




:i:`Detecting Neutrinos via Optical Photons 1`
---------------------------------------------------------------

:i:`Detecting Neutrinos via Optical Photons 2`
---------------------------------------------------------------

.. sidebar:: Neutrino Detection via Optical Photons 

      .. class:: small

          Inverse beta decay: electron anti-neutrino captured on 
          proton producing prompt positron and delayed neutron signals.
          Despite overburden cosmic muons remain important backgrounds.

          :red:`-> large transparent target volumes coupled to Photomultiplier Tubes`

          **Scintillator:** DayaBay/JUNO, Double Chooz, RENO, KamLAND
      
          **Water Cerenkov:** SNO, SuperK/HyperK, IceCube/PINGU, KM3NeT, Baikal-GVD


          Detailed model of **Optical Photon Propagation**
          critical to detector design/use.


:i:`JPMT Before Contact 1`
--------------------------


:i:`JPMT Before Contact 2`
--------------------------


.. sidebar:: Optical Photon Simulation Problem

    .. class:: small
        
         Cosmic muons can yield many millions
         of optical photons in Daya Bay (even more in JUNO).
         Optical photon propagation dominates 
         *Geant4* simulation time ~95% for Daya Bay.

         Cosmic Muon Sample sizes severely limited by 
         CPU time practicalities.

         **Hybrid Solution** 

         External propagation possible as optical photons 
         are isolated in simulation chain.
         
         * produced by Cerenkov/Scintillation
         * yield only PMT hits


:i:`JPMT Before Contact 3`
---------------------------

.. sidebar:: Geant4/Opticks Interface

    .. class:: small

          * collect "steps" in customized G4 Cerenkov/Scintillation processes
          * massively parallel generation, propagation of optical photons costing no CPU memory
          * return PMT hits to G4 collections
          * subsequent electronics simulation unchanged



:small:`NVIDIA OptiX GPU Ray Tracing Framework`
-------------------------------------------------------------------

.. sidebar:: Ray Tracing ?

    .. class:: small

        Pixels calculated by tracing rays from image plane into geometry, 
        recursively doing reflection, refraction, shadow calculations.

    .. image:: /env/optix/samples/optix-tutorial-10.png 
       :width: 400px
       :align: right

    .. class:: small

        Ray Tracing more realistic (closer to physics) than rasterized projection


.. class:: small

    **Apply Image Synthesis Tool to Photon Simulation**

    Same rate determining step : **geometry intersection** 

    **OptiX Provides:**

    :blue:`CUDA compiler optimized for Ray Tracing` 
 
    * state-of-the-art accelerated intersection 

    * regular improvements, new GPU tuning 


    :red:`NVIDIA expertise on efficient GPU(s) usage` 

    * persistent warps sized to fill machine

    * load balancing between warps, GPUs


    **IHEP Performance Check** 

    Used IHEP 4 GPU workstation to verify 
    near linear performance scaling across multiple GPUs



.. class:: tiny

    https://developer.nvidia.com/optix 

    https://research.nvidia.com/publication/optix-general-purpose-ray-tracing-engine



:small:`Brief History of GPU Optical Photon Simulation Development`
----------------------------------------------------------------------

.. sidebar:: Hybrid Simulation

      .. class:: small

            Combining G4 with external simulation
            requires "context" duplication  
 
            * geometry, materials, surfaces 
            * runtime bridging of event data 

            Ray Tracing demands translation:  

            * volumes -> surfaces 


.. class:: small

   **1704** 

   * Newton published *Opticks* 

   **2013(Aug-)** [liberate geometry]

   * Develop *G4DAE* geometry exporter that writes tesselated COLLADA 3D files, 
     including all material and surface properties.

   **2014** [integrate geometry/event data with *Chroma*]

   * Integrate *G4DAE* geometries with *Chroma* 
   * Connect event data via *G4DAEChroma* runtime bridge 
   * Port Cerenkov/Scintillation photon generation to GPU avoiding transport overhead

   **2015** [replace *Chroma* with *Opticks*]

   * Develop *Opticks* based on the *NVIDIA OptiX* ray tracing framework
   * Achieve match between *Opticks* and *Geant4* for simple geometries 
   * Speedup factor of 200x with a mobile GPU, expected to exceed 1000x with multi-GPU workstations.  



:small:`Introducing Opticks : Recreating G4 Context on GPU`
-------------------------------------------------------------

.. sidebar:: Opticks ~15 C++ Pkgs 

      .. class:: small

          Organized by dependencies

          * :red:`Recreates Geant4 context on GPU`
          * :blue:`Optical simulation by OptiX programs` 
          * :blue:`Photon Indexing by Thrust`

          Interop between OpenGL/OptiX/Thrust/CUDA  

          * :blue:`shared GPU buffers, efficient visualization`

          C++ code but NumPy analysis/debugging by using 
          :red:`.npy serialization` for all buffers 

          Externals: 

          * Boost + Asio-ZMQ, ZMQ
          * CUDA 7.0, Thrust 1.8
          * OptiX 3.8, OpenGL 4.1 
          * OpenMesh 4.1, ImGUI  


.. class:: small

   **Basis packages**

   * *Opticks* : definitions, configuration
   * *NPY* : host array handling, persistency, analysis
   * *NumpyServer* : network IO of *NPY* arrays

   **Geometry packages** 

   * *AssimpWrap* : G4DAE geometry loading with Assimp fork
   * *GGeo* : preparing geometry for GPU
   * *OpenMeshRap* : mesh fixing 

   **GPU library interface packages** 

   * *OpticksOp* : high level GPU control 
   * *OptiXRap* : OptiX control
   * *ThrustRap* : photon indexing
   * *CUDAWrap* : persist cuRAND state 
   * *OGLWrap* : OpenGL visualization

   **Main packages**
   
   * *GGeoView* : visualization, Opticks main
   * *CFG4* : Geant4 10.2 comparison, separate main


:small:`Opticks Absolute Reflection compared to Fresnel expectation`
-----------------------------------------------------------------------

.. class:: tiny

   Comparison of simulated absolute reflection of S and P polarized single events against 
   expectation from Fresnel formula. Using uniform planar incident cyclindrically directed light.

.. image:: /env/numerics/npy/reflection.png
   :width: 700px
   :align: center


:small:`Opticks Prism Deviation vs Incident angles for 10 wavelengths`
------------------------------------------------------------------------

.. class:: tiny

   Prism geometry and Snell's law at two refractions allows deviation 
   angle vs incident angle to be predicted.  Comparison of simulation
   results with expectations for 10 wavelengths   
   using refractive index of Schott F2 Flint Glass.

.. image:: /env/numerics/npy/prism-deviation.png
   :width: 900px
   :align: center



:small:`Validating Opticks against Geant4`
----------------------------------------------------------------

.. sidebar:: *CfG4* package 

   .. class:: small
     
      * G4 step recorder in *Opticks* event format 
      * load events into *Opticks* for visualization 

.. class:: small

   Compare *Opticks*/*Geant4* propagations with simple test geometries  
   and light sources. For each test shape: 
   
   * *OptiX*: analytic intersection code 
   * *OpenGL*: tesselation for visualization
   * *Geant4*: geometry construction code in *CfG4* package
   
   ===========================================  =================  =================  ================== 
     Shape                                        OptiX              OpenGL             Geant4
   ===========================================  =================  =================  ================== 
     sphere                                        Y                  Y                   Y
     box                                           needs debug        Y                   Y
     prism                                         Y                  Y                            
     convex lens                                   Y                  Y                            
     DayaBay PMT                                   Y                  Y                   needs port
   ===========================================  =================  =================  ================== 



:small:`Multiple Rainbows from a Single Drop of Water`
--------------------------------------------------------

.. image:: /env/presentation/rainbow-mechanism.png
   :width: 900px
   :align: center

.. class:: small

   Caustic bunching at least deviation causes rainbow 

   (a) Primary bow, single reflection : ray f at bow angle
   (b) Secondary bow, double reflection : ray g at bow angle
   (c) Deviation angles 0:180 degrees hemisphere opposite to incident rays

.. class:: tiny

   Jearl D. Walker, 1975, Multiple rainbows from single drops of water and other liquids
   http://patarnott.com/atms749/pdf/MultipleRainbowsSingleDrops.pdf


:small:`Disc beam 1M Photons incident on Water Sphere (S-Pol)`
----------------------------------------------------------------

.. class:: tiny

    Photons shown by lines with color representing polarization direction. S-Polarized (perpendicular to plane of incidence) 
    intersection by disc radially directed polarization. Geodesic icosahedron tesselation just for OpenGL visualization, 
    actual OptiX geometry is perfect sphere.

.. image:: /env/graphics/ggeoview/rainbow-spol-disc-incident-sphere.png
   :width: 900px
   :align: center


:small:`2ns later, Several Bows Apparent`
---------------------------------------------------------------------

.. image:: /env/graphics/ggeoview/rainbow-spol-disc-several-bows.png
   :width: 900px
   :align: center


:small:`Rainbow deviation angles`
----------------------------------------------------------

.. class:: tiny

    Deviation angle distribution of all 3M photons. Photon wavelengths
    from Plankian 6500K blackbody spectrum (implemented with inverse CDF GPU texture lookup).
    Simulated "images" obtained from wavelength spectrum of each bin using CIEXYZ weighting functions 
    converted into sRGB/D65 colorspace.   
    The two images exposed for luminance (CIE-Y) of max bin of 1st and 2nd bows.

.. image:: /env/numerics/npy/rainbow16_deviation_angle.png
   :width: 900px
   :align: center


:small:`Rainbow Spectrum for 1st six bows`
----------------------------------------------------------

.. class:: tiny

    Spectra obtained by selecting photons by internal reflection counts. 
    Colors obtained from spectra of each bin using CIEXYZ weighting functions 
    converted into sRGB/D65 colorspace.  
    Exposures by normalizing to bin with maximum luminance (CIE-Y) of each bow. 
    White lines indicate geometric optics prediction of deviation angle ranges 
    of the visible range 380-780nm. 180-360 degrees signifies exit on same 
    side of droplet as incidence.  
 

.. image:: /env/numerics/npy/rainbow6-spectrum.png
   :width: 900px
   :align: center


:small:`1M Rainbow S-Polarized, Comparison Opticks/Geant4`
------------------------------------------------------------

.. class:: tiny

   Deviation angle(degrees) of 1M parallel monochromatic photons in disc shaped beam incident on water sphere.
   Numbered bands are visible range expectations of first 11 rainbows.
   S-Polarized intersection (E field perpendicular to plane of incidence) arranged by directing polarization radially.

.. image:: /env/optix/cfg4/rainbow-cfg4-spol.png
   :width: 800px
   :align: center

:small:`Performance Comparison Opticks/Geant4`
----------------------------------------------------------

.. sidebar:: Rainbow 1M S-Pol

    .. class:: small

        .. image:: /env/optix/cfg4/rainbow-cfg4-2.png
           :width: 400px
           :align: center


.. class:: small

    **Average Propagate Time for 1M photons** 

    MacBook Pro 2013, NVIDIA GeForce GT 750M 2GB (384 cores)

    ====================  =================  =================  ================== 
     Rainbow Test            Geant4 10.2       Opticks Interop     Opticks Compute      
    ====================  =================  =================  ================== 
     1M (S-Pol)               56 s               1.62 s            0.28 s         
     1M (P-Pol)               58 s               1.71 s            0.25 s         
    ====================  =================  =================  ================== 

    * **Opticks ~200X Geant4** with 384 core GPU
    * expect **> 1000X** with multi-GPU workstation 
    * :red:`photon propagation time --> zero (effectively)`
   
    **Opticks Interop/Compute Modes**

    * **Interop**: uses visualizable OpenGL buffers
    * **Compute**: uses OptiX buffers
    * perfectly identical results, monitored by digest
    * Compute (and G4) propagated events visualizable 
      by loading into interop mode viewer



   
:i:`JPMT Inside Wide`
----------------------

.. sidebar:: Opticks Overview

   .. class:: small
     
       * *G4* integrated with GPU ray tracing
       * validation against *G4* started
       * :red:`optical propagation time --> ~zero`  
       * high performance visualization      


:i:`JPMT Wide`
----------------------

.. class:: tiny

   http://simoncblyth.bitbucket.org/env/graphics/ggeoview/jpmt-wide_half.png
  


:i:`JPMT After Contact`
-------------------------

.. class:: tiny

   http://simoncblyth.bitbucket.org/env/graphics/ggeoview/jpmt-after-contact_half.png


:i:`JPMT Approach`
----------------------

.. class:: tiny

   http://simoncblyth.bitbucket.org/env/graphics/ggeoview/jpmt-approach_half.png


:i:`JPMT Arrival`
----------------------

.. class:: tiny

   http://simoncblyth.bitbucket.org/env/graphics/ggeoview/jpmt-arrival_half.png


:i:`JPMT Inside Outside`
-------------------------

.. class:: tiny

   http://simoncblyth.bitbucket.org/env/graphics/ggeoview/jpmt-inside-outside_half.png


.. sidebar:: Photon History Selection

   Only *CK BT BT BT SA*, three boundary transmits before surface absorption 


:i:`JPMT Headview`
----------------------

.. class:: tiny

   http://simoncblyth.bitbucket.org/env/graphics/ggeoview/jpmt-headview_half.png


:i:`JPMT Backview`
----------------------

.. class:: tiny

   http://simoncblyth.bitbucket.org/env/graphics/ggeoview/jpmt-backview_half.png



