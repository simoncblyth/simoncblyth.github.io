.. meta::

   :title: Opticks + JUNO : PMT Geometry + Optical Model Progress
   :name: opticks_202303XX_More_junoPMTOpticalModel_issues_and_Validation_of_CustomG4OpBoundaryProcess_fix
   :description: (?? Mar 2023)
   :notes: Sim AFG Session 

.. include:: my_s5defs.txt

.. include:: s5_background_image.txt


.. comment

   Klop



:i:`Opticks + JUNO : More junoPMTOpticalModel Issues + Validation of CustomG4OpBoundaryProcess Fix` 
=====================================================================================================

.. raw:: html

    <div class="mytitle">
        <header>
            <h1 style="background-color:lightgrey"> 
                Opticks + JUNO : More junoPMTOpticalModel Issues + Validation of CustomG4OpBoundaryProcess Fix
                <h2 style="background-color:lightgrey;text-align:center"> Open source, https://bitbucket.org/simoncblyth/opticks </h2>
            </h1>
        </header>
    </div>
    <p style="margin-bottom:52mm;" />

.. class:: large

  * *junoPMTOpticalModel* (jPOM) standalone tests reveal more bugs, all from FastSim use:

    * :r:`over complex PMT geometry and Geant4 step histories`
    * :r:`BUGS:` polarization and propagation time within PMT 
    * :r:`MORE BUGS:` unphysical mid-vacuum reflect, refract, absorb, detect, "tunneling" 

  * reimplemented *jPOM::ModelTrigger* avoids unphysical

  * statistical matching reimpl *jPOM* vs natural geometry with *CustomG4OpBoundaryProcess*: 

    * fixes all above issues using a **more standard** approach
    * :b:`simpler geometry, simpler simulation history, less code` 
    * facilitates bringing PMT Optical Model to GPU within Opticks

.. raw:: html

    <div class="mycredit">
       <h2 style="background-color:lightgrey"> Simon C Blyth, IHEP, CAS  &mdash; ?? Mar 2023 </h2>
    </div>


.. s5_talk:: 

    This summarizes the primary issues I will present, 
    mainly with the PMT geometry and optical model.   




:small:`Standalone few PMT tests using junosw/blyth-88 branch + Opticks` 
--------------------------------------------------------------------------

.. sidebar:: :small:`Standalone Advantages`

    .. class:: small

        * :r:`Fast development cycle`, full control:

        +---------------------------------------------+
        | https://github.com/simoncblyth/j/           |
        +---------------------------------------------+
        | https://bitbucket.org/simoncblyth/opticks/  | 
        +---------------------------------------------+

        **"CustomG4OpBoundaryProcess" FIX**

        `opticks:u4/CustomART.h <https://bitbucket.org/simoncblyth/opticks/src/master/u4/CustomART.h>`_  

        * ``Layr.h`` for TMM calcs
        * ``JPMT.h`` parameter access (not PMTSimParamSvc, PMTParamSvc)

        `opticks:u4/InstrumentedG4OpBoundaryProcess.cc <https://bitbucket.org/simoncblyth/opticks/src/master/u4/InstrumentedG4OpBoundaryProcess.cc>`_
    
        * Customized with *CustomART.h* 


.. class:: small

    **j:PMTSim Standalone PMT geometry and Optical Model** 

    * https://github.com/simoncblyth/j/tree/main/PMTSim
    * "virtual pkg" : :r:`reference junosw/blyth-88 branch sources`
    * ``N=0/1`` **natural geometry switch**
    * ``POM=0/1`` **PMT Optical Model switch**

    **Optical only Geant4 simulation, with full step point recording**  

    * `opticks:u4/tests/U4SimulateTest.sh <https://bitbucket.org/simoncblyth/opticks/src/master/u4/tests/U4SimulateTest.sh>`_

    ``N=0/1 ./U4SimulateTest.sh``

    **Geant4 Simtrace intersection : 2D geometry plotting**  

    * `opticks:u4/tests/U4SimtraceTest.sh <https://bitbucket.org/simoncblyth/opticks/src/master/u4/tests/U4SimtraceTest.sh>`_

    ``N=0/1 ./U4SimtraceTest.sh``


.. s5_talk::

    The ART calculation using TMM is just complex matrix math.
    Fairly easy to do on GPU. Integrating that calculation with the 
    simulation is more difficult.

    These links point to code within Opticks and j repositories that 
    I used to create standalone few-PMT tests of the PMT optical model. 

    The test uses an optical only simulation and is integrated 
    with Opticks full photon recording. 








:i:`FewPMT_demo.png`
-----------------------


.. raw:: html

    <p style="margin-bottom:172mm;" />

.. class:: small

   two_pmt layout with HAMA, NNVT (Natural Geometry N=1)





:i:`FewPMT_demo0.png`
----------------------

.. raw:: html

    <p style="margin-bottom:172mm;" />

.. class:: small

   Compare Unnatural/Natural N=0/1 geometry simulations by skipping N=0 Pyrex/Pyrex + Vacuum/Vacuum fake points



Statistical Comparison of Simulation Histories
------------------------------------------------

.. class:: small

   +-------+--------------+------------------------------------------------------------------------------+
   |       |  Geometry    |                                                                              |
   +=======+==============+==============================================================================+
   | **A** | N=0          | Unnatural 4-volume Pyrex+Pyrex+Vacuum+Vacuum PMT Geometry (FastSim kludge)   |
   +-------+--------------+------------------------------------------------------------------------------+
   | **B** | N=1          | Natural 2-volume Pyrex+Vacuum PMT Geometry (Using CustomG4OpBoundaryProcess) | 
   +-------+--------------+------------------------------------------------------------------------------+

   As comparing simulations from different geometries : :b:`random aligned comparison is impractical`, so:

   1. skip recording fake points (Vacuum/Vacuum + Pyrex/Pyrex) -> :b:`make histories comparable` 
   2. validate using statistical comparison of photon simulation histories : **chi2 history matching**  
  
   Initial comparisons : 

   * :red:`HUGE Chi2` 

     * very different history counts between simulations 

   * find : ~2.5% of "whereAmI:Pyrex" **junoPMTOpticalModel::ModelTrigger** actually in Vacuum 

     * -> :r:`Unphysical reflect/refract/absorb/detect in middle of PMT vacuum` 
     * :b:`unphysical N=0 behaviour` -> huge chi2 in A/B comparison 



:small:`Unphysical junoPMTOpticalModel::ModelTrigger FastSim Examples`
--------------------------------------------------------------------------

.. class:: small

    FastSim **junoPMTOpticalModel::ModelTrigger** should happen:
 
    1. on Vac/Vac inner1/inner2 border in middle of PMT 
    2. on Pyrex/Pyrex pmt/body border around upper hemi-ellipsoid 

    :b:`ModelTrigger elsewhere is a BUG` -> unphysical results, including :r:`"tunneling" through geometry`  


    Commandlines to create plots showing : :r:`NNVT Unphysical mid-Vacuum Reflect/Refract/Detect/Absorb` 

    * caused by "Undefined" behaviour of **junoPMTOpticalModel::ModelTrigger** 

.. raw:: html 

    <pre class="mypretiny">
    APID=2181 AOPT=idx N=0 SUBTITLE="9:reflect at vac/vac (but obscured)" ./U4SimtraceTest.sh ana

    APID=2563 AOPT=idx N=0 SUBTITLE="7:SD at vac/vac" ./U4SimtraceTest.sh ana

    APID=2912 AOPT=idx N=0 SUBTITLE="7:vac/vac refract 11:SD detect in vac" ./U4SimtraceTest.sh ana

    APID=2942 AOPT=idx N=0 SUBTITLE="6->7:cross-geometry 7:vac/vac-reflect" ./U4SimtraceTest.sh ana

    APID=2982 AOPT=idx N=0 SUBTITLE="7:unphysical refract" ./U4SimtraceTest.sh ana

    APID=5866 AOPT=idx N=0 SUBTITLE="7:reflect at vac/vac" ./U4SimtraceTest.sh ana

    APID=7625 AOPT=idx N=0 SUBTITLE="13:detect mid vacuum" ./U4SimtraceTest.sh ana

    APID=8499 AOPT=idx N=0 SUBTITLE="13:detect mid vacuum" ./U4SimtraceTest.sh ana 
    </pre>


:i:`FewPMT_2563_Unphysical_SD_in_vacuum.png`
---------------------------------------------

:i:`FewPMT_2912_Unphysical_refract_and_detect.png`
----------------------------------------------------

:i:`FewPMT_2942_Unphysical_cross_geometry_vac_reflect.png`
------------------------------------------------------------

:i:`FewPMT_2982_Unphysical_vac_refract.png`
---------------------------------------------

:i:`FewPMT_5866_vac_reflect.png`
----------------------------------

:i:`FewPMT_7625_Unphysical_detect_mid_vacuum.png`
--------------------------------------------------

:i:`FewPMT_8499_Unphysical_detect_mid_vacuum.png`
--------------------------------------------------



:i:`FewPMT_NNVT_ModelTriggerBuggy_inner2_Pyrex_trig.png`
---------------------------------------------------------

.. raw:: html

    <p style="margin-bottom:165mm;" />

.. class:: small

    :b:`Reflection off NNVT innards => misplaced "Pyrex" ModelTrigger =>` :r:`FastSim too soon => Unphysical photons` 






:i:`FewPMT_HAMA_ModelTriggerBuggy_no_inner2_Pyrex_trig.png`
------------------------------------------------------------

.. raw:: html

    <p style="margin-bottom:165mm;" />

.. class:: small

    :r:`Why no similar ModelTriggerBuggy problem for HAMA ?` **Undefined behaviour of G4UnionSolid::DistanceToIn from Inside** 





:small:`junoPMTOpticalModel::ModelTrigger : NNVT : ~2.5% UNPHYSICAL TRIG`
------------------------------------------------------------------------------------------

::

    u4/tests/U4SimulateTest.sh 
    u4/tests/U4SimulateTest_mt.py


.. class:: small

   Check ModelTrigger position, whereAmI : 271/11214 ~2.5% unphysical

.. raw:: html 

    <pre class="mypretiny">
    mtd_trig = mtd.trig == 1
    mtd_upper = mtd.pos[:,2] > 1e-4
    mtd_mid   = np.abs( mtd.pos[:,2]) < 1e-4
    mtd_lower = mtd.pos[:,2] < -1e-4

    mtd_trig_vacuum = np.logical_and(mtd.trig == 1, mtd.whereAmI_ == 2 )
    mtd_trig_vacuum_upper = np.logical_and(mtd_trig_vacuum, mtd_upper )
    mtd_trig_vacuum_mid   = np.logical_and(mtd_trig_vacuum, mtd_mid )
    mtd_trig_vacuum_lower = np.logical_and(mtd_trig_vacuum, mtd_lower )

    mtd_trig_pyrex  = np.logical_and(mtd.trig == 1, mtd.whereAmI_ == 1 )
    mtd_trig_pyrex_upper = np.logical_and(mtd_trig_pyrex, mtd_upper )
    mtd_trig_pyrex_mid   = np.logical_and(mtd_trig_pyrex, mtd_mid )
    mtd_trig_pyrex_lower = np.logical_and(mtd_trig_pyrex, mtd_lower )
    </pre>







:small:`G4UnionSolid::DistanceToIn from Inside is "Undefined" and depends on CSG constituents : NNVT`
-------------------------------------------------------------------------------------------------------

.. raw:: html

    <pre class="mypretiny">
    &gt; u4t ; ./G4VSolid_Test.sh 
                                                                 NNVT INNER2: Just Lower-Hemi-Ellipsoid
            pos    INNER1  DistToIn DistToOut      Dist        INNER2  DistToIn DistToOut      Dist     trig
       (0,0,20)   kInside  170.0000  170.0000  170.0000      kOutside kInfinity    0.0000 kInfinity      YES
       (0,0,15)   kInside  175.0000  175.0000  175.0000      kOutside kInfinity    0.0000 kInfinity      YES
       (0,0,10)   kInside  180.0000  180.0000  180.0000      kOutside kInfinity    0.0000 kInfinity      YES
        (0,0,5)   kInside  185.0000  185.0000  185.0000      kOutside kInfinity    0.0000 kInfinity      YES
        (0,0,4)   kInside  186.0000  186.0000  186.0000      kOutside kInfinity    0.0000 kInfinity      YES
        (0,0,3)   kInside  187.0000  187.0000  187.0000      kOutside kInfinity    0.0000 kInfinity      YES
        (0,0,2)   kInside  188.0000  188.0000  188.0000      kOutside kInfinity    0.0000 kInfinity      YES
        (0,0,1)   kInside  189.0000  189.0000  189.0000      kOutside kInfinity    0.0000 kInfinity      YES
        (0,0,0)  kSurface    0.0000  190.0000  190.0000      kSurface kInfinity    0.0000    0.0000      YES
       (0,0,-1)  kOutside    1.0000  191.0000    1.0000       kInside kInfinity    1.0000    1.0000      YES
       (0,0,-2)  kOutside    2.0000  192.0000    2.0000       kInside kInfinity    2.0000    2.0000      YES
       (0,0,-3)  kOutside    3.0000  193.0000    3.0000       kInside kInfinity    3.0000    3.0000      YES
       (0,0,-4)  kOutside    4.0000  194.0000    4.0000       kInside kInfinity    4.0000    4.0000      YES
       (0,0,-5)  kOutside    5.0000  195.0000    5.0000       kInside kInfinity    5.0000    5.0000      YES
       (0,0,-6)  kOutside    6.0000  196.0000    6.0000       kInside kInfinity    6.0000    6.0000      YES
       (0,0,-7)  kOutside    7.0000  197.0000    7.0000       kInside kInfinity    7.0000    7.0000      YES
       (0,0,-8)  kOutside    8.0000  198.0000    8.0000       kInside kInfinity    8.0000    8.0000      YES
       (0,0,-9)  kOutside    9.0000  199.0000    9.0000       kInside kInfinity    9.0000    9.0000      YES
      (0,0,-10)  kOutside   10.0000  200.0000   10.0000       kInside kInfinity   10.0000   10.0000      YES
    </pre>

.. class:: small

    * DistanceToIn, DistanceToOut, ``Distance_`` in +Z direction from points along Z axis
    * CSG structure of NNVT inner1/inner2 yield mis-placed Pyrex triggers for Z > -185 mm

::

    ~/opticks/u4/tests/G4VSolid_Test.{sh,cc} 



:small:`G4UnionSolid::DistanceToIn from Inside is "Undefined" and depends on CSG constituents : HAMA`
-------------------------------------------------------------------------------------------------------

.. raw:: html

    <pre class="mypretiny">
    &gt; u4t ; ./G4VSolid_Test.sh 
                                                                 HAMA INNER2: Union of Polycone and Lower-Hemi-Ellipsoid
            pos    INNER1  DistToIn DistToOut      Dist        INNER2  DistToIn DistToOut      Dist     trig
       (0,0,20)   kInside  170.0000  170.0000  170.0000      kOutside kInfinity    0.0000 kInfinity      YES
       (0,0,15)   kInside  175.0000  175.0000  175.0000      kOutside kInfinity    0.0000 kInfinity      YES
       (0,0,10)   kInside  180.0000  180.0000  180.0000      kOutside kInfinity    0.0000 kInfinity      YES
        (0,0,5)   kInside  185.0000  185.0000  185.0000      kOutside kInfinity    0.0000 kInfinity      YES
        (0,0,4)   kInside  186.0000  186.0000  186.0000      kOutside kInfinity    0.0000 kInfinity      YES
        (0,0,3)   kInside  187.0000  187.0000  187.0000      kOutside kInfinity    0.0000 kInfinity      YES
        (0,0,2)   kInside  188.0000  188.0000  188.0000      kOutside kInfinity    0.0000 kInfinity      YES
        (0,0,1)   kInside  189.0000  189.0000  189.0000      kOutside kInfinity    0.0000 kInfinity      YES
        (0,0,0)  kSurface    0.0000  190.0000  190.0000      kSurface kInfinity    0.0000    0.0000      YES
       (0,0,-1)  kOutside    1.0000  191.0000    1.0000       kInside kInfinity    1.0000    1.0000      YES
       (0,0,-2)  kOutside    2.0000  192.0000    2.0000       kInside kInfinity    2.0000    2.0000      YES
       (0,0,-3)  kOutside    3.0000  193.0000    3.0000       kInside kInfinity    3.0000    3.0000      YES
       (0,0,-4)  kOutside    4.0000  194.0000    4.0000       kInside kInfinity    4.0000    4.0000      YES
       (0,0,-5)  kOutside    5.0000  195.0000    5.0000       kInside    0.0000    5.0000    5.0000      NO 
       (0,0,-6)  kOutside    6.0000  196.0000    6.0000       kInside    1.0000    6.0000    6.0000      NO 
       (0,0,-7)  kOutside    7.0000  197.0000    7.0000       kInside    2.0000    7.0000    7.0000      NO 
       (0,0,-8)  kOutside    8.0000  198.0000    8.0000       kInside    3.0000    8.0000    8.0000      NO 
       (0,0,-9)  kOutside    9.0000  199.0000    9.0000       kInside    4.0000    9.0000    9.0000      NO 
      (0,0,-10)  kOutside   10.0000  200.0000   10.0000       kInside    5.0000   10.0000   10.0000      NO 
    </pre>


.. class:: small

    * Undefined behaviour prevents HAMA giving mis-placed Pyrex triggers from below Z=-5 mm





:small:`Fixed ModelTrigger avoiding whereAmI bug, "Undefined" behaviour`
-------------------------------------------------------------------------

.. sidebar:: :small:`FIXED : ModelTrigger (ray style)`

    .. raw:: html 

        <pre class="mypretiny">
        G4bool ModelTrigger(const G4FastTrack &fastTrack)
        {
          ...
          bool trig = false ; 
          dist1 = Distance( _inner1_solid, pos, dir, in1 );
          if( dist1 != kInfinity && dist1 > EPSILON )
          {
            next_pos = pos + dir*dist1 ;
            trig = next_pos.z() > EPSILON ;  
            // disqualify flat face intersects 

            next_norm = _inner1_solid->SurfaceNormal(next_pos);
            next_mct  = next_norm * dir ; 
            whereAmI  = next_mct < 0. ? kInGlass : kInVacuum ; 
            // against/with normal is Glass/Vacuum
          }
          return trig ;
        }
        const G4double EPSILON = 2e-4 ;
        </pre>

    .. class:: small

        :b:`Use: Distance, SurfaceNormal` -- :r:`NOT Volumes`



.. raw:: html

   <pre class="mypretiny">
    G4bool junoPMTOpticalModel::ModelTrigger(const G4FastTrack &fastTrack)
    {   <span class="r">// GetVolume : NOT RELIABLE AT BORDERS </span> 
      ...
      if(fastTrack.GetPrimaryTrack()->GetVolume() == _inner2_phys){
          return false;
      }   <span class="r">// SIMPLISTIC VIEW OF GEOMETRY </span>
      if(fastTrack.GetPrimaryTrack()->GetVolume() == _inner1_phys){
          whereAmI = kInVacuum;
      }else{
          whereAmI = kInGlass;
          <span class="r">// BUG: REFLECTION FROM dynode/MCP -> kInGlass </span>
      }
      if(whereAmI == kInGlass){ 
          dist1 = _inner1_solid->DistanceToIn(pos, dir);
          <span class="r">dist2 = _inner2_solid->DistanceToIn(pos, dir);</span>
          <span class="r">// BUG: dist2 "Undefined" at reflect inside inner2</span>
          if(dist1 == kInfinity){ return false;
          }else if(dist1>dist2){  return false;
          }else{                  return true;}     
          <span class="r">// BUG: depends on "Undefined" behaviour (+CSG constituents) </span> 
      }else{
          dist1 = _inner1_solid->DistanceToOut(pos, dir);
          dist2 = _inner2_solid->DistanceToIn(pos, dir);
          if(dist2 == kInfinity){ return true;}
          <span class="b"> // reliance on edge handling : not a good approach</span> 
      }
      return false;
    }  
 
  </pre>

.. class:: small

    * :b:`Need to fix FastSim approach : to have something to validate new natural geometry approach with`
    * ``Simulation/DetSimV2/PMTSim/src/junoPMTOpticalModel.cc``



:i:`FewPMT_NNVT_ModelTriggerSimple_avoids_issue.png`
-----------------------------------------------------

.. raw:: html

    <p style="margin-bottom:165mm;" />

.. class:: small

    :r:`ModelTriggerSimple` : Avoids **Undefined trig behavior** + Unphysical mid-Vacuum Reflect/Refract/Detect/Absorb, "Tunneling" 





:small:`N0_one_pmt_FewPMT_hamaLogicalPMT_rain_line_012last.png`
----------------------------------------------------------------------

.. raw:: html

    <p style="margin-bottom:165mm;" />

.. class:: small

    HAMA "rain_line" check photon positions : 0th:blue 1st:red last:cyan


:small:`N1_one_pmt_FewPMT_hamaLogicalPMT_rain_line_012last.png`
----------------------------------------------------------------------



:small:`NNVT : "rain_line" Example of Statistical History Comparison`
------------------------------------------------------------------------

.. raw:: html

   <pre class="mypretiny">
    ./U4SimulateTest.sh cf ## PMT Geometry : A(N=0) Unnatural+FastSim, B(N=1) Natural+CustomBoundary  
    GEOM/GEOMList/IMPL/LAYOUT/CHECK : FewPMT/nnvtLogicalPMT/ModelTriggerSimple/one_pmt/rain_line 
    <span class="b">c2sum :    60.2333 c2n :    67.0000 c2per:     0.8990  C2CUT:   30 </span>

    np.c_[siq,_quo,siq,sabo2,sc2,sabo1][:25]  ## A-B history frequency chi2 comparison 
    [[' 0' TO BT SD                             ' 37975  37525' ' 2.6821' '  1268   1268']
     [' 1' TO BT SA                             ' 32161  32735' ' 5.0770' '  1174   1200']
     [' 2' TO BT BT SR SA                       '  4980   4998' ' 0.0325' ' 11979  12125']
     [' 3' TO BT BT SA                          '  4392   4362' ' 0.1028' ' 10275  10285']
     [' 4' TO BT BT SR BT BT SA                 '  4366   4366' ' 0.0000' ' 21394  21384']
     [' 5' TO BT BR BT SA                       '  3225   3153' ' 0.8128' '  1286   1269']
     [' 6' TO SA                                '  2281   2283' ' 0.0009' '     0      0']
     [' 7' TO BT BT SR BR SR SA                 '  1185   1280' ' 3.6613' ' 22175  22191']
     [' 8' TO BT BT SR BR SA                    '  1151   1150' ' 0.0004' ' 21484  21399']
     [' 9' TO BR SA                             '  1051   1091' ' 0.7470' '  1154   1154']
     ['10' TO BT BT SR SR SA                    '   742    730' ' 0.0978' ' 11888  11906']
     ['11' TO BT BT SR BR SR BT BT SA           '   714    694' ' 0.2841' ' 22163  22168']
     ['12' TO BT BT SR BR SR SR SA              '   396    324' ' 7.2000' ' 22136  23759']
     ['13' TO BT BT SR SR BT BT SA              '   368    357' ' 0.1669' ' 18370  18360']
     ['14' TO BT AB                             '   341    367' ' 0.9548' '  1483   1417']
     ['15' TO BT BT SR BR SR SR BT BT SA        '   363    338' ' 0.8916' ' 22134  22135']
     ['16' TO BT BT SR SR SR SA                 '   285    276' ' 0.1444' ' 11903  12085']
     ['17' TO BT BT SR SR SR BT BT SA           '   239    238' ' 0.0021' ' 13690  13690']
     ['18' TO BT BT SR BR SR BR SR BT BT SA     '   225    236' ' 0.2625' ' 22345  22388']

                                                      A      B    (A-B)^2   APID[0] BPID[0]
                                                                -------
                                                                  (A+B)        
   </pre>

.. class:: small

    Compare simulations by chi2 comparison of photon history counts 

    * TO:Torch, BT:BoundaryTransmit, SD:SurfDetect, SA:SurfAbsorb, SR:SpecularReflect, BR:FresnelReflect, AB:BulkAbsorb




:small:`HAMA : "rain_line" Example of Statistical History Comparison`
------------------------------------------------------------------------

.. raw:: html

   <pre class="mypretiny">
    ./U4SimulateTest.sh cf ## PMT Geometry : A(N=0) Unnatural+FastSim, B(N=1) Natural+CustomBoundary  
    GEOM/GEOMList/IMPL/LAYOUT/CHECK : FewPMT/hamaLogicalPMT/ModelTriggerSimple/one_pmt/rain_line 
    <span class="b">c2sum :    41.2803 c2n :    43.0000 c2per:     0.9600  C2CUT:   30</span> 

    np.c_[siq,_quo,siq,sabo2,sc2,sabo1][:25]  ## A-B history frequency chi2 comparison 
    [[' 0' 'TO BT SD                        '' 37923  37958' ' 0.0161' '  1262   1274']
     [' 1' 'TO BT SA                        '' 32806  32562' ' 0.9108' '  1185   1207']
     [' 2' 'TO BT BT SA                     '' 12071  12233' ' 1.0798' ' 10532  10430']
     [' 3' 'TO BT BT SR SA                  ''  3757   3741' ' 0.0341' ' 12754  12407']
     [' 4' 'TO BT BR BT SA                  ''  3204   3250' ' 0.3279' '  1465   1464']
     [' 5' 'TO SA                           ''  2277   2274' ' 0.0020' '     1      0']
     [' 6' 'TO BT BT SR SR SA               ''  1857   1859' ' 0.0011' ' 12391  12393']
     [' 7' 'TO BR SA                        ''  1129   1215' ' 3.1553' '  1154   1154']
     [' 8' 'TO BT BT SR SR SR BT BT SA      ''   613    580' ' 0.9128' ' 16112  16120']
     [' 9' 'TO BT BT SR SR SR SA            ''   584    576' ' 0.0552' ' 13493  16172']
     ['10' 'TO BT BT SR BT BT SA            ''   357    375' ' 0.4426' ' 34234  34225']
     ['11' 'TO BT AB                        ''   356    325' ' 1.4112' '  1367   1317']
     ['12' 'TO BT BT SR BR SA               ''   287    305' ' 0.5473' ' 34230  34221']
     ['13' 'TO BT BT SR SR BT BT SA         ''   243    226' ' 0.6162' ' 27497  27530']
     ['14' 'TO BT BT SR SR SR BR SA         ''   232    206' ' 1.5434' ' 16755  16130']
     ['15' 'TO BT BT SR SR SR BR BT BT SA   ''   200    206' ' 0.0887' ' 16715  16760']
     ['16' 'TO BT BT BR SR SA               ''   181    179' ' 0.0111' ' 10909  10984']
     ['17' 'TO BT BT SR SR SR BR SR SA      ''   146    180' ' 3.5460' ' 16223  16205']
     ['18' 'TO BT BT SR SR SR BR BR SR SA   ''   148    131' ' 1.0358' ' 17957  16775']
     ['19' 'TO AB                           ''   147    126' ' 1.6154' '    86     68']
     ['20' 'TO BT BT SR SR SR BR BR SA      ''   113    111' ' 0.0179' ' 16724  16934']

                                                   A      B    (A-B)^2   APID[0] BPID[0]
                                                              -------
                                                               (A+B)        
 

   </pre>



:small:`Checks with different initial photon pos/dir/shapes` 
------------------------------------------------------------------

.. class:: small

    **opticks/u4/tests/U4SimulateTest.sh checks** 

    FewPMT/(hama,nnvt)LogicalPMT/ModelTriggerSimple/one_pmt/...  using 100k/50k photons 
    
    +----------------------+-----------------------------------------------------+----------------------------------------------------+
    |                      |                                                     |           c2sum/c2n:c2per(C2CUT)                   |
    |                      |                                                     +----------------------------------------------------+
    |  check               |                                                     |        HAMA               |          NNVT          |
    +======================+=====================================================+===========================+========================+
    |  rain_disc           |   3D beam directly onto PMT front face              |  32.56/41  0.794 (30)     | 41.91/46:0.911 (30)    |
    +----------------------+-----------------------------------------------------+---------------------------+------------------------+
    |  rain_line           |   2D line directly onto PMT midline                 |  41.28/43  0.960 (30)     | 28.85/45:0.641 (30)    |
    +----------------------+-----------------------------------------------------+---------------------------+------------------------+
    |  up_rain_line        |   2D line shooting PMT from behind                  |  10.80/24  0.450 (30)     | 6.41/12:0.534 (30)     |            
    +----------------------+-----------------------------------------------------+---------------------------+------------------------+
    |  rain_dynode         |   2D line from vacuuum directed onto dynode         |  12.08/11  1.098 (30)     | 23.76/35:0.679 (30)    |
    +----------------------+-----------------------------------------------------+---------------------------+------------------------+
    |  rain_dynode_diag    |   2D line diagonnally directed from mid-vacuum      |  8.31/26  0.320 (30)      | 42.82/56:0.765 (30)    |
    +----------------------+-----------------------------------------------------+---------------------------+------------------------+
    |  lhs_window_line     |   2D line from left directed onto PMT window        |  37.53/34  1.104 (30)     | 26.74/43:0.622 (30)    |
    +----------------------+-----------------------------------------------------+---------------------------+------------------------+
    |  lhs_reflector_line  |   2D line from left directed onto PMT reflector     |  14.35/18  0.797 (30)     | 15.75/19:0.829 (30)    |
    +----------------------+-----------------------------------------------------+---------------------------+------------------------+

    Obtained using ``opticks/u4/tests/cf.sh`` (runs both simulations and compares)

    :r:`Reasonable Chi2 for all checks` => :b:`consistent simulation histories with Unnatural/Natural geometry`



:small:`N0_one_pmt_FewPMT_hamaLogicalPMT_lhs_window_line_inwin.png`
----------------------------------------------------------------------




:small:`N1_one_pmt_FewPMT_hamaLogicalPMT_lhs_window_line_inwin.png`
----------------------------------------------------------------------


:small:`N0_one_pmt_FewPMT_hamaLogicalPMT_lhs_reflector_line_reflected.png`
---------------------------------------------------------------------------

:small:`N1_one_pmt_FewPMT_hamaLogicalPMT_lhs_reflector_line_reflected.png`
---------------------------------------------------------------------------









junoPMTOpticalModel Issues : All from using FastSim 
----------------------------------------------------

.. sidebar:: :small:`CustomG4OpBoundaryProcess ?`

    .. class:: small

         * simple 2 volume (Pyrex+Vacuum) geometry 
         * standard G4OpBoundaryProcess reflect/refract/absorb/TIR 
         * :r:`much less code : reuse of standard Geant4`
         * easier Opticks on GPU : simpler, more standard
 
           * no near-degenerate 1e-3 mm boundaries
           * allows same geometry on CPU and GPU 
           * avoid history rewriting for comparisons 
          
         **BUT : need to change very nasty Geant4 impl:**

         ``G4OpBoundaryProcess::PostStepDoIt``
             ugly monolith, rats nest of nested ifs 

         * Unpleasant to get familiar with 
         * Change palatable, using : ``CustomART.h``
         * Keep change separated, detailed validation vital 
                

.. raw:: html

   <p style="margin-bottom:1cm;" />


.. class:: small

   1. :r:`Four volume PMT due to FastSim limitation`

      * Two volumes (Pyrex + Vacuum) would be natural 

.. raw:: html

   <p style="margin-bottom:1cm;" />

.. class:: small

   2. Fake volumes yield many fake intersects

      * Pyrex/Pyrex + Vacuum/Vacuum same material fakes
      * :b:`complicates Geant4 step point history` 
      * :b:`complicates comparison with Opticks`

.. raw:: html

   <p style="margin-bottom:1cm;" />

.. class:: small

   3. Non-FastSim in PMT propagates at Pyrex (not Vacuum) speed

      * FastSim->SlowSim transition misses speed fixup 

.. raw:: html

   <p style="margin-bottom:1cm;" />

.. class:: small

   4. :r:`reflected + refracted polarization doesnt follow Geant4`

      * should follow G4OpBoundaryProcess, depending on S/P 

.. raw:: html

   <p style="margin-bottom:0.1cm;" />

.. class:: small

   * :b:`All issues stem from using FastSim (designed for regions)`
 
     * :b:`not good fit for 1 boundary (Pyrex/ARC/PHC/Vacuum)`


.. comment

    .. class:: small

       6. TODO: look into _qe definition 

          * justification for ``efficiency=_qe/An`` ? 



.. s5_talk::

    This summarizes the issues I found



:small:`Polarization on FresnelReflection/FresnelRefraction/TotalInternalReflection`
---------------------------------------------------------------------------------------

.. sidebar:: :small:`inline sboundary::sboundary():`

    .. raw:: html

        <pre class="mypretiny">
        _E2_t(make_float2( 2.f*n1c1/(n1c1+n2c2) , 
                           2.f*n1c1/(n2c1+n1c2) )),// (ts,tp) 
        _E2_r(make_float2( _E2_t.x - 1.f       , 
                           n2*_E2_t.y/n1 - 1.f  )),// (rs,rp)
        A_transverse(cross(p.mom, orient*normal)),
        E1_perp(dot(p.pol, A_transverse)),
        E1(make_float2(E1_perp,sqrtf(1.f-E1_perp*E1_perp)))),
        E2_t(_E2_t*E1),RR(normalize(E2_r)), 
        E2_r(_E2_r*E1),TT(normalize(E2_t)), 
        {
        p.mom = reflect
              ?
                 p.mom + 2.0f*c1*orient*normal
              :
                 eta*(p.mom) + (eta*c1 - c2)*orient*normal
              ;
        A_parallel = normalize(cross(p.mom, A_transverse));   

        <span class="b">p.pol = 
                ( reflect ?
                     ( tir ? 
                           -p.pol + 2.f*EdotN*orient*normal 
                     : 
                           RR.x*A_transverse + RR.y*A_parallel 
                     )
                  :
                     TT.x*A_transverse + TT.y*A_parallel
                )             
              ;</span>
        }  <span class="r">// IMPL BASED ON + VALIDATED AGAINST GEANT4</span>        
        </pre>


.. class:: small

   **Reflect/Refract** : :r:`INCORRECT POLARIZATION` 

.. raw:: html

    <pre class="mypretiny">
     void junoPMTOpticalModel::Reflect()
     {
         dir -= 2.*(dir*norm)*norm;
         <span class="r">pol -= 2.*(pol*norm)*norm;</span>  
     }
     void junoPMTOpticalModel::Refract()
     {
         dir = (real(_cos_theta4) - 
                _cos_theta1*_n1/_n4)*norm + (_n1/_n4)*dir;
         <span class="r">pol = (pol-(pol*dir)*dir).unit();</span>
     } 
    </pre>


.. class:: small

   ``G4OpBoundaryProcess`` polarization from:

   1. S/P Fresnel Coeff 
   2. S/P Directions : out/in plane of incidence

   **Opticks : sysrap/sboundary.h qudarap/qsim.h follows G4, ===>**

   * `opticks/src/master/sysrap/sboundary.h <https://bitbucket.org/simoncblyth/opticks/src/master/sysrap/sboundary.h>`_

    
   **Derive Fresnel from Maxwell Boundary Conditions**

   *Fresnel Equations, Alexander I. Lvovsky*
     *Encylopedia of Optical Engineering* (**fresnel-eoe.pdf**)


.. s5_talk::

    junoPMTOpticalModel is using an incorrect polarization calculation.

    * it does not match what Geant4 uses. 

    The actual polarization on reflection/refraction calculation is shown on the right. 
    That implementation is based on Geant4 and has been validated against Geant4. 
   

   


:small:`Compare Reflected Polarization Impls for Brewster Angle Incidence`
---------------------------------------------------------------------------

.. class:: small 

   * `opticks/src/master/sysrap/tests/sboundary_test.sh <https://bitbucket.org/simoncblyth/opticks/src/master/sysrap/tests/sboundary_test.sh>`_ : build, run, plot


.. image:: sboundary_test/figs/sboundary_test/pvcap/AOI_BREWSTER_linear_polarization_by_reflection.png
    :width: 550px

.. image:: sboundary_test/figs/sboundary_test/pvcap/AOI_BREWSTER_reflect_alt_pol.png
    :width: 550px

.. class:: small

    +---------------------------------------------------------------------+------------------------------------------------+
    | G4OpBoundaryProcess/qsim.h/sboundary.h : Only S-polarized survives  | junoPMTOpticalModel::Reflect : very different  |
    +---------------------------------------------------------------------+------------------------------------------------+

    * incident from left (-X), surface normal vertically upwards (+Z), intersection point in middle, 
    * Colored lines represent polarization directions of 128 photons before and after Reflection 
    * Reflected using ``sboundary.h`` (validated against ``G4OpBoundaryProcess``)
    * Compared with ``sboundary.h:alt_pol`` that duplicates ``junoPMTOpticalModel::Reflect``  

    Brewster (or polarizing) incident angle th1 : ``tan(th1) = n2/n1  ;  th1 + th2 = pi/2``


.. s5_talk::

    The different between the polarization that is currently in 
    use and the correct one can be seen clearly at the Brewster 
    angle where Geant4 clearly polarizes but the one in use does not. 


.. comment

    AOI_BREWSTER_linear_polarization_by_reflection.png
    ----------------------------------------------------

    AOI_BREWSTER_reflect_alt_pol.png
    ----------------------------------

    AOI_CRITICAL_tir_pol.png
    ---------------------------



:small:`Compare Refracted Polarization Impls for Brewster Angle Incidence`
--------------------------------------------------------------------------- 

.. class:: small 

   * `opticks/src/master/sysrap/tests/sboundary_test.sh <https://bitbucket.org/simoncblyth/opticks/src/master/sysrap/tests/sboundary_test.sh>`_ : build, run, plot


.. image:: sboundary_test/figs/sboundary_test/pvcap/AOI_BREWSTER_brewster_refract.png
    :width: 550px 

.. image:: sboundary_test/figs/sboundary_test/pvcap/AOI_BREWSTER_brewster_refract_alt_pol.png
    :width: 550px 


.. class:: small

    +-----------------------------------------------------------------+------------------------------------------------------+
    |  G4OpBoundaryProcess/qsim.h/sboundary.h : partial pol           | junoPMTOpticalModel::Refract : not partially pol     |
    +-----------------------------------------------------------------+------------------------------------------------------+

    * incident from left (-X), surface normal vertically upwards (+Z), intersection point in middle, 
    * Colored lines represent polarization directions of 128 photons before and after Refraction
    * Refracted using ``sboundary.h`` (compared with **alt_pol** that duplicates junoPMTOpticalModel::Refract )


.. comment

    AOI_BREWSTER_brewster_refract.png
    -------------------------------------

    AOI_BREWSTER_brewster_refract_alt_pol.png
    -------------------------------------------


.. comment

    :i:`LayrTest_R12860_ARTQspx.png`
    ---------------------------------

    :i:`LayrTest_R12860_Aspx.png` 
    ------------------------------

    :i:`LayrTest_R12860_Rspx.png` 
    ------------------------------

    :i:`LayrTest_R12860_Tspx.png` 
    ------------------------------



.. s5_talk::

    Similarly the polarization on refraction is also wrong. 



hamaLogicalPMT_natural.png 
----------------------------


.. raw:: html

    <p style="margin-bottom:15.6cm;" />


.. class:: large

    Natural 2-volume PMT (:b:`Pyrex` + :c:`Vacuum`) : :r:`NOT COMPATIBLE WITH FastSim`  



.. s5_talk::

    Natural geometry is not possible when using FastSim


hamaLogicalPMT_fake.png
-------------------------

.. raw:: html

    <p style="margin-bottom:3cm;" />


.. class:: normal

   |emsp| |emsp| |emsp| |emsp| 
   |emsp| |emsp| |emsp| |emsp| 
   |emsp| |emsp|
   :c:`body` hidden under :m:`inner1` :y:`inner2` 

   |emsp| |emsp| |emsp| |emsp| 
   |emsp| |emsp| |emsp| |emsp| 
   |emsp| |emsp|
   :c:`body` is :r:`FastSim envelope volume`


.. raw:: html

    <p style="margin-bottom:10cm;" />


.. class:: large

    CURRENT : **Unnatural** 4-volume PMT (Pyrex+Pyrex+Vacuum+Vacuum) => :r:`Half Fake`



.. s5_talk::

    Murky colors are because there are near degenerate Fake volumes on top of each other  
  
    * natural geometry is 2 volumes : but here there are 4 volumes
    * 2 of them are workarounds that allow FastSim to be used



:small:`junoPMTOpticalModel FastSim : Fake Volumes -> Contorted ModelTrigger`
--------------------------------------------------------------------------------

.. sidebar:: :small:`Current MultiLayer POM`

    .. raw:: html 

       <pre class="mypretiny">
         +---------------pmt-Pyrex----------------+
         |                                        |
         |                                        |
         |     +----body-Pyrex-(FSim-env)---+     |
         |     | +------------------------+ |     |
         |     | |                        | |     |
         |     | |                        | |     |
         |     | |        inner1-Vacuum   |-|     |
         |     | |                        |1e-3   |
         |     | |                        | |     |
         |     | +~~coincident~face~~~~~~~+ |     |
         |     | |                        | |     |
         |     | |                        | |     |
         |     | |        inner2-Vacuum   | |     |
         |     | |                        | |     |
         |     | |                        | |     |
         |     | +------------------------+ |     |
         |     +----------------------------+     |
         |                                        |
         |                                        |
         +----------------------------------------+
       </pre>

    .. class:: small

       * *ModelTrigger* : unnatural trig @ Vac/Vac bnd. 
       * *DoIt* : shift to edge, for ART calc 
       * only *m_mirror_opsurf* (inner2<->body) "active"


.. raw:: html

   <pre class="mypretiny">
     80 G4bool junoPMTOpticalModel::ModelTrigger(const G4FastTrack &fastTrack)
     81 {   // <span class="r"> Contorted as "pre-trigger" on where next </span>
     83     if(fastTrack.GetPrimaryTrack()->GetVolume() == _inner2_phys){
     84         return false;
     85     }
     ...
     89     pos     = fastTrack.GetPrimaryTrackLocalPosition();
     90     dir     = fastTrack.GetPrimaryTrackLocalDirection();
     94     
     95     if(fastTrack.GetPrimaryTrack()->GetVolume() == _inner1_phys){
     96         whereAmI = kInVacuum;
     97     }else{
     98         whereAmI = kInGlass;
     99     }
    100    
    101     if(whereAmI == kInGlass){
    102         dist1 = _inner1_solid->DistanceToIn(pos, dir);
    103         dist2 = _inner2_solid->DistanceToIn(pos, dir);
    104
    105         if(dist1 == kInfinity){
    106             return false;
    107         }else if(dist1>dist2){
    108             return false;
    109         }else{
    110             return true;
    111         }
    112     }else{
    113         dist1 = _inner1_solid->DistanceToOut(pos, dir);
    114         dist2 = _inner2_solid->DistanceToIn(pos, dir);
    115         
    116         if(dist2 == kInfinity){
    117             return true;
    118         }
    119     }
    120     return false;
    121 }   
  </pre>



.. s5_talk::

    The ModelTrigger determines if the FastSim doIt runs or if standard Geant4 runs

    * catching photons on fake boundaries and then pre-triggering on where they go next 
    * contorted kludge allowing inappropriate use of FastSim


.. comment

    :small:`FastSim Big Bouncer : Collect ModelTrigger positions, decisions` 
    ---------------------------------------------------------------------------

    .. sidebar:: :small:`SFastSim_Debug.hh`

        .. raw:: html

           <pre class="mypretiny">
            struct SYSRAP_API SFastSim_Debug
            {   
                static std::vector&lt;SFastSim_Debug&gt; record ;   
                static constexpr const char* NAME = "SFastSim_Debug.npy" ; 
                static constexpr int LIMIT = 100000 ; 
                static void Save(const char* dir); 
                void add(); 

                double posx ;  // fs[:,0,:3]
                double posy ;
                double posz ;
                double time ;  // fs[:,0,3]

                double dirx ;  // fs[:,1,:3]
                double diry ;
                double dirz ;
                double dist1 ; // fs[:,1,3]

                double polx ;  // fs[:,2,:3]
                double poly ;
                double polz ;
                double dist2 ; // fs[:,2,3]

                double ModelTrigger; // fs[:,3,0].astype(np.int64)
                double whereAmI ;    // fs[:,3,1].astype(np.int64)
                double c ;           // fs[:,3,2]
                double PhotonId ;    // fs[:,3,3].astype(np.int64)
           };
           </pre>

    .. raw:: html

       <pre class="mypre12">
       epsilon:tests blyth$ PID=726 ./U4SimulateTest.sh nana 
        In [1]: extra.shape
        Out[1]: (14, 4, 4)
        In [2]: extra
        Out[2]: 
        array([[[-112.83 ,    0.   ,  164.918,    0.164],
                [   0.032,    0.   ,   -0.999,    0.001],    // dist1:1e-3 mm 
                [   0.   ,   -1.   ,    0.   ,  165.005],
                [  <span class="r"> 1.</span>   ,    1.   ,    0.   ,  726.   ]], ##<span class="r"> ModelTrigger:1 </span>

               [[-112.83 ,    0.   ,  164.917,    0.164],
                [  -0.138,    0.   ,   -0.99 ,  166.512],    // dist1 and dist2 equal
                [   0.   ,   -1.   ,    0.   ,  166.512],
                [  <span class="b"> 0.</span>   ,    2.   ,    0.   ,  726.   ]], ##<span class="b"> ModelTrigger:0 </span>

               [[-156.577,    0.   , -148.846,    1.778],
                [   0.81 ,    0.   ,    0.587,  253.614],
                [   0.   ,    1.   ,    0.   ,    0.   ],
                [   0.   ,    1.   ,    0.   ,  726.   ]],

               [[ -95.   ,    0.   , -104.211,    2.166],
                [  -0.81 ,    0.   ,    0.587,  177.561],
                [   0.   ,   -1.   ,    0.   ,  169.042],
                [   0.   ,    1.   ,    0.   ,  726.   ]],

               [[-238.764,    0.   ,   -0.   ,    3.071],
                [  -0.81 ,    0.   ,    0.587,   12.404],
                [   0.   ,   -1.   ,    0.   ,   -1.   ],
                [   1.   ,    2.   ,    0.   ,  726.   ]],
                ...
       </pre>

    .. class:: small

       *ModelTrigger* "pre-triggering" *dist1* ahead as *DoIt* will shift by **dist1**   

       * :r:`Complication arising from unnatural geometry`
       * :b:`Workaround G4 FastSim needing Region, not boundary` 


.. comment

    hamaLogicalPMTWrapLV_ModelTriggerYES.png
    ------------------------------------------

    .. raw:: html

       <p style="margin-bottom:0.1cm;" />

    .. class:: small

       |emsp| |emsp| |emsp| |emsp| |emsp| Starts at upper left, here -->  

    .. raw:: html

       <p style="margin-bottom:14cm;" />

    .. class:: small

       * FastSim Workaround -> DoIt **dist1** shifts -> Effectively "Pre-Triggering" : slide red dots forwards 
       



    hamaLogicalPMTWrapLV_ModelTriggerNO.png
    ------------------------------------------


    .. raw:: html

       <p style="margin-bottom:15.5cm;" />

    .. class:: small

       * :b:`blue dots` : ModelTrigger:NO : within FastSim region, but handled by SlowSim








:small:`junoPMTOpticalModelSimple : Natural Geometry -> Simple ModelTrigger`
--------------------------------------------------------------------------------

.. sidebar:: :small:`Simplified MultiLayer POM`

    .. raw:: html 

       <pre class="mypretiny">
         +---------------pmt-Pyrex----------------+
         |                                        |
         |                                        |
         |                                        |
         |       +~inner~Vacuum~(FSim~env)+       |
         |       !                        !       |
         |       !                        !       |
         |       !                        !       |
         |       !                        !       |
         |       !                        !       |
         |       +                        +       |
         |       |                        |       |
         |       |                        |       |
         |       |                        |       |
         |       |                        |       |
         |       |                        |       |
         |       +------------------------+       |
         |                                        |
         |                                        |
         |                                        |
         +----------------------------------------+
       </pre>

    .. class:: small

       * *ModelTrigger* : z>0 : no unnatural trig 
       * override *mirror_opsurf* (inner<->pmt) @ z > 0 
       * simpler *DoIt* : no geom. queries, no shifting

.. raw:: html

   <p style="margin-bottom:6cm;" />
   <pre class="mypretiny">
    G4bool junoPMTOpticalModelSimple::ModelTrigger(
            const G4FastTrack &fastTrack)
    {
         // <span class="r"> Simple + Cheap due to natural geometry </span>
        return fastTrack.GetPrimaryTrackLocalPosition().z() > 0. ;
    }
   </pre>
        
.. class:: small

   https://github.com/simoncblyth/j/blob/main/PMTFastSim/junoPMTOpticalModelSimple.cc
    

.. s5_talk::

    I tried to get FastSim to work with a natural geometry 

    * ModelTrigger is much simpler when can trigger on where the photon is, not were its going next 


:small:`junoPMTOpticalModelSimple : Natural Geometry -> Simple DoIt`
--------------------------------------------------------------------------------

.. sidebar:: :small:`Simplified MultiLayer POM`

    .. raw:: html 

       <pre class="mypretiny">
         +---------------pmt-Pyrex----------------+
         |                                        |
         |                                        |
         |                                        |
         |       +~inner~Vacuum~(FSim~env)+       |
         |       !                        !       |
         |       !                        !       |
         |       !                        !       |
         |       !                        !       |
         |       !                        !       |
         |       +                        +       |
         |       |                        |       |
         |       |                        |       |
         |       |                        |       |
         |       |                        |       |
         |       |                        |       |
         |       +------------------------+       |
         |                                        |
         |                                        |
         |                                        |
         +----------------------------------------+
       </pre>

    .. class:: small

       * *ModelTrigger* : z>0 : no unnatural trig 
       * override *mirror_opsurf* (inner<->pmt) @ z > 0 
       * simpler *DoIt* : no geom. queries, no shifting

.. raw:: html

   <pre class="mypretiny">
    void junoPMTOpticalModelSimple::DoIt(const G4FastTrack& fastTrack, 
          G4FastStep &fastStep)
    {
        G4double energy = fastTrack.GetPrimaryTrack()->GetKineticEnergy();
        wavelength_nm = twopi*hbarc/energy/nm ;

        position = fastTrack.GetPrimaryTrackLocalPosition();
        direction = fastTrack.GetPrimaryTrackLocalDirection();
        polarization = fastTrack.GetPrimaryTrackLocalPolarization();

        G4VSolid* envelope_solid = fastTrack.GetEnvelopeSolid();
        surface_normal = envelope_solid->SurfaceNormal(position);

        minus_cos_theta = direction*surface_normal ;
        whereAmI = minus_cos_theta < 0. ? kInGlass : kInVacuum ;

        StackSpec<double> spec ;
        // ... skip : collect refractive indices, thickness into spec ...

        Stack<double,4> stack(      wavelength_nm, minus_cos_theta, spec );
        Stack<double,4> stackNormal(wavelength_nm, -1.            , spec );
        // ...
   }
   </pre>


.. class:: small

   * :r:`Simple : BUT NOT WORKABLE`
   * :b:`Cannot stop:` ``G4OpBoundaryProcess`` 
   
     * **REAL REASON FOR THE FAKE VOLUMES** 
     * Workaround limitations of Geant4 FastSim


.. s5_talk::

    doIt also simple : BUT NOT WORKABLE : AS CANNOT STOP boundary process


:small:`Pivot to CustomG4OpBoundaryProcess For PMT Optical Model ?`
---------------------------------------------------------------------

.. sidebar:: :small:`Custom Boundary POM`

    .. raw:: html 

       <pre class="mypretiny">
         +---------------pmt-Pyrex----------------+
         |                                        |
         |                                        |
         |                                        |
         |       +~inner~Vacuum~~~~~~~~~~~+       |
         |       !                        !       |
         |       !                        !       |
         |       !                        !       |
         |       !                        !       |
         |       !                        !       |
         |       +                        +       |
         |       |                        |       |
         |       |                        |       |
         |       |                        |       |
         |       |                        |       |
         |       |                        |       |
         |       +------------------------+       |
         |                                        |
         |                                        |
         |                                        |
         +----------------------------------------+
       </pre>

    .. class:: small

       ``OpSurfaceName[0] == '@'``

       * ``local_z>0`` : does MultiLayer ART calc 
       * ``!(local_z>0)`` : standard *mirror_opsurf*

.. class:: small
 
   * Cannot use natural geometry with FastSim

     * SO: ``CustomG4OpBoundaryProcess``

   **Custom Boundary Process : Advantages**

   * standard Geant4 polarization, propagation
   * less code, simpler code
   * natural geometry, avoiding fakes
   * simpler Geant4 step history (no fakes)
   * same geometry on GPU+CPU, easier Opticks validation  
   * half the geometry objects to model PMT (4->2)

   +----------------------+-----------------------+
   | Current FastSim POM  | 4 Solid, 4 LV, 4 PV   |
   +----------------------+-----------------------+
   | Custom Boundary POM  | 2 Solid, 2 LV, 2 PV   | 
   +----------------------+-----------------------+

   **Disadvantages**

   * maintain custom G4OpBoundaryProcess  
   * updating Geant4 may require care (depending on changes)  

.. raw:: html 

    <p style="margin-bottom:1cm;" />

.. class:: large

   :r:`Advantages far outweigh disadvantages`

.. s5_talk::

   Customizing Geant4 boundary process does have some disadvantages but 
   the advantages far outweigh them.  It provides a natural fix for 
   all the problems and it requires less code. 
 

:small:`u4/CustomART.h : include into CustomG4OpBoundaryProcess.cc`
-----------------------------------------------------------------------

.. sidebar:: :small:`CustomART::maybe_doIt`

    .. raw:: html

      <pre class="mypretiny">
      inline char CustomART::maybe_doIt(
           const char* OpticalSurfaceName, 
           const G4Track& aTrack, const G4Step& aStep )
      {   
          if( OpticalSurfaceName == nullptr || 
              OpticalSurfaceName[0] != '@') return 'N' ;
          
          const G4AffineTransform& transform = 
            aTrack.GetTouchable()
            ->GetHistory()->GetTopTransform();

          G4ThreeVector localPoint = 
            transform.TransformPoint(theGlobalPoint);

          if(localPoint.z() <= 0) return 'Z' ;
          
          return doIt(aTrack, aStep) ;
      }
      </pre>
             

    .. class:: small

      *doIt* TMM calc, runs only for:
 
      * OpticalSurfaceName[0]=='@' && zlocal > 0  
      * -> :b:`Transmittance, Reflectivity, Efficiency`  
      * TMM calc using Layr.h multi-layer Stack 

.. raw:: html

    <pre class="mypretiny">
    &#35;include "IPMTAccessor.h"
    &#35;include "Layr.h"    
    &#35;include "U4Touchable.h"

    struct CustomART
    {
        <span class="r">const IPMTAccessor* accessor ; // JPMT.h OR PMTAccessor.h </span> 
        
        <span class="b">G4double& theTransmittance ;   // doIt sets these 
        G4double& theReflectivity ;
        G4double& theEfficiency ;</span> 
        
        const G4ThreeVector& theGlobalPoint ;
        const G4ThreeVector& OldMomentum ;  
        const G4ThreeVector& OldPolarization ;
        const G4ThreeVector& theRecoveredNormal ;
        const G4double& thePhotonMomentum ; 
        
        CustomART(
            const IPMTAccessor* accessor,
            G4double& theTransmittance,
            G4double& theReflectivity,
            G4double& theEfficiency,
            const G4ThreeVector& theGlobalPoint,
            const G4ThreeVector& OldMomentum,  
            const G4ThreeVector& OldPolarization,
            const G4ThreeVector& theRecoveredNormal,
            const G4double& thePhotonMomentum
        );  
        char maybe_doIt(const char* OpticalSurfaceName, 
                  const G4Track& aTrack, const G4Step& aStep );
        char doIt(const G4Track& aTrack, const G4Step& aStep ); 
    };  
    </pre>

.. class:: small

   `opticks/src/master/u4/CustomART.h <https://bitbucket.org/simoncblyth/opticks/src/master/u4/CustomART.h>`_


.. s5_talk::

   Separate header for cleaner customization. 


:i:`hamaLogicalPMTWrapLV_full_history.png`
--------------------------------------------

.. raw:: html

   <p style="margin-bottom:16.5cm;" />

.. raw:: html

   <pre class="mypre20">   
   TO  BT  BT  BT  BT  SR  SR  BT  BR  BR  BT  SR  SR  SR  BT  BR  BT  SR  BT  SA   <span class="b"> Lots of fakes </span> 
   00  01 [02] 03 [04] 05  06 [07] 08  09 [10] 11  12  13 [14] 15 [16] 17 [18] 19   (7/20 Fake)
   </pre>


.. s5_talk::

   Lots of fake step points in current Geant4 histories. The ones across the 
   middle are obvious. There are others much closer together that are difficult to see. 


:i:`hamaLogicalPMTWrapLV_natural.png`
--------------------------------------

.. raw:: html

   <p style="margin-bottom:16.5cm;" />

.. raw:: html

   <pre class="mypre20">   
   TO  BT  BT  SR  SR  BR  BR  SR  SR  SR  BR  SR  BR <span class="r"> SR  SA</span>
   00  01  02  03  04  05  06  07  08  09  10  11  12 <span class="r"> 13  14</span>      <span class="b"> Simpler history, no fakes </span> 
   00  01  03  05  06  08  09  11  12  13  15  17  19  
   </pre>


.. s5_talk::

    No fakes 


:small:`Compare "big bouncer" position, time between N=0,1 (1)`
------------------------------------------------------------------

.. raw:: html

    <pre class="mypretiny">
    u4t ; ./U4SimulateTest.sh cf

    In [12]: np.c_[ar[:,0],np.arange(len(ar)),br[:,0]]
    Out[12]: 
    array([[-113.   ,    0.   ,  200.   ,    0.   ,    0.   , -113.   ,    0.   ,  200.   ,    0.   ],
           [-113.   ,    0.   ,  170.163,    0.137,    1.   , -113.   ,    0.   ,  170.163,    0.137],
           [-112.83 ,    0.   ,  164.918,    0.164,    2.   , -112.83 ,    0.   ,  164.917,    0.164],
           [-112.83 ,    0.   ,  164.917,    0.164,    3.   , -156.577,    0.   , -148.846,    1.22 ],
           [-135.824,    0.   ,    0.   ,    1.012,    4.   ,  -95.   ,    0.   , -104.211,    1.474],
           [-156.577,    0.   , -148.846,    1.778,    5.   , -248.807,    0.   ,    7.28 ,    2.108],
           [ -95.   ,    0.   , -104.211,    2.166,    6.   ,   53.206,    0.   ,  180.727,    3.269],
           [-238.764,    0.   ,   -0.   ,    3.071,    7.   ,  245.605,    0.   ,  -35.443,    4.235],
           [-248.807,    0.   ,    7.28 ,    3.112,    8.   ,   95.   ,    0.   ,  -99.428,    4.781],
           [  53.205,    0.   ,  180.727,    4.274,    9.   ,  177.724,    0.   , -134.574,    5.08 ],
           [ 214.06 ,    0.   ,    0.   ,    5.507,   10.   ,  141.059,    0.   ,  152.451,    6.046],
           [ 245.605,    0.   ,  -35.443,    5.749,   11.   , -239.66 ,    0.   ,  -55.195,    7.492],
           [  95.   ,    0.   ,  -99.428,    6.583,   12.   ,  237.91 ,    0.   ,   54.597,    9.127],
           [ 177.724,    0.   , -134.574,    7.041,   13.   ,   50.   ,    0.   ,  -63.74 ,    9.867],
           [ 160.533,    0.   ,    0.   ,    7.732,   14.   ,   58.352,    0.   ,  -69.   ,    9.9  ],
           [ 141.059,    0.   ,  152.451,    8.245,   15.   ,    0.   ,    0.   ,    0.   ,    0.   ],
           [-138.46 ,    0.   ,    0.   ,    9.867,   16.   ,    0.   ,    0.   ,    0.   ,    0.   ],
           [-239.66 ,    0.   ,  -55.195,   10.455,   17.   ,    0.   ,    0.   ,    0.   ,    0.   ],
           [   0.427,    0.   ,    0.   ,   11.71 ,   18.   ,    0.   ,    0.   ,    0.   ,    0.   ],
           [ 237.91 ,    0.   ,   54.596,   12.523,   19.   ,    0.   ,    0.   ,    0.   ,    0.   ],
           [   0.   ,    0.   ,    0.   ,    0.   ,   20.   ,    0.   ,    0.   ,    0.   ,    0.   ],
           [   0.   ,    0.   ,    0.   ,    0.   ,   21.   ,    0.   ,    0.   ,    0.   ,    0.   ],
           [   0.   ,    0.   ,    0.   ,    0.   ,   22.   ,    0.   ,    0.   ,    0.   ,    0.   ],
           [   0.   ,    0.   ,    0.   ,    0.   ,   23.   ,    0.   ,    0.   ,    0.   ,    0.   ],

    </pre>
    
.. class:: small

    +----+-----------------+------------------+---------------------------------------+
    | ar | a.record[PID]   | N=0 current geom | degenerate and fake intersect points  |
    +----+-----------------+------------------+---------------------------------------+
    | bb | b.record[PID]   | N=1 natural geom | less points, simpler history          |
    +----+-----------------+------------------+---------------------------------------+

    :r:`Need point-to-point mapping to compare`


.. s5_talk::

    This is comparing positions and times with the un-natural and natural geometry 


:small:`Compare "big bouncer" position, time between N=0,1 (2)`
------------------------------------------------------------------

.. raw:: html

    <pre class="mypretiny">
    u4t ; ./U4SimulateTest.sh cf

    In [2]: b2a  ## point-to-point mapping to skip a fakes  
    Out[2]: array([ 0,  1,  3,  5,  6,  8,  9, 11, 12, 13, 15, 17, 19])

    In [4]: abr = np.c_[ar[b2a,0],br[:len(b2a),0],ar[b2a,0]-br[:len(b2a),0]] ; abr
    Out[4]: 
    array([[-113.   ,    0.   ,  200.   ,    0.   , -113.   ,    0.   ,  200.   ,    0.   ,    0.   ,    0.   ,    0.   ,    0.   ],
           [-113.   ,    0.   ,  170.163,    0.137, -113.   ,    0.   ,  170.163,    0.137,    0.   ,    0.   ,    0.   ,    0.   ],
           [-112.83 ,    0.   ,  164.917,    0.164, -112.83 ,    0.   ,  164.917,    0.164,    0.   ,    0.   ,    0.   ,   -0.   ],
           [-156.577,    0.   , -148.846,    1.778, -156.577,    0.   , -148.846,    1.22 ,   -0.   ,    0.   ,    0.   ,    0.558],
           [ -95.   ,    0.   , -104.211,    2.166,  -95.   ,    0.   , -104.211,    1.474,    0.   ,    0.   ,    0.   ,    0.692],
           [-248.807,    0.   ,    7.28 ,    3.112, -248.807,    0.   ,    7.28 ,    2.108,    0.   ,    0.   ,   -0.   ,    1.004],
           [  53.205,    0.   ,  180.727,    4.274,   53.206,    0.   ,  180.727,    3.269,   -0.   ,    0.   ,    0.   ,    1.004],
           [ 245.605,    0.   ,  -35.443,    5.749,  245.605,    0.   ,  -35.443,    4.235,    0.   ,    0.   ,    0.   ,    1.514],
           [  95.   ,    0.   ,  -99.428,    6.583,   95.   ,    0.   ,  -99.428,    4.781,    0.   ,    0.   ,    0.   ,    1.802],
           [ 177.724,    0.   , -134.574,    7.041,  177.724,    0.   , -134.574,    5.08 ,    0.   ,    0.   ,    0.   ,    1.96 ],
           [ 141.059,    0.   ,  152.451,    8.245,  141.059,    0.   ,  152.451,    6.046,   -0.   ,    0.   ,    0.   ,    2.199],
           [-239.66 ,    0.   ,  -55.195,   10.455, -239.66 ,    0.   ,  -55.195,    7.492,    0.   ,    0.   ,    0.   ,    2.963],
           [ 237.91 ,    0.   ,   54.596,   12.523,  237.91 ,    0.   ,   54.597,    9.127,    0.   ,    0.   ,   -0.   ,    3.397]], dtype=float32)
   </pre>

.. class:: small

    :b:`Positions match closely, some times are way off` 

.. s5_talk::

    After doing point to point mapping to skip the fakes can see that the positions closely match, but the times are ns off. 


:small:`Compare "big bouncer" position, time, dist, speed between N=0,1`
--------------------------------------------------------------------------

::

    rvtime_ = lambda r:np.diff(r[:,0,3])
    rvstep_ = lambda r:np.diff(r[:,0,:3],axis=0 )   
    rvdist_ = lambda r:np.sqrt(np.sum(rvstep_(r)*rvstep_(r),axis=1))
    rvspeed_ = lambda r:rvdist_(r)/rvtime_(r)

    In [14]: np.c_[rvtime_(ar[b2a]), rvtime_(br[:len(b2a)]),
                   rvdist_(ar[b2a]), rvdist_(br[:len(b2a)]),
                  rvspeed_(ar[b2a]),rvspeed_(br[:len(b2a)])]
 
.. raw:: html

    <pre class="mypretiny">
    Out[14]: 
    array([[  0.137,   0.137,  29.837,  29.837, 218.038, 218.038],  ## Water
           [  0.027,   0.027,   5.249,   5.249, 196.216, 196.215],  ## Pyrex 
           [  1.615,   1.057, 316.798, 316.798, <span class="r">196.215</span>, 299.792],  ## Vacuum
           [  0.388,   0.254,  76.053,  76.053, <span class="r">196.215</span>, 299.792],
           [  0.946,   0.634, 189.965, 189.965, <span class="b">200.744</span>, 299.792],  ## <span class="b">comb. of Vacuum and Pyrex speeds, split at Fake </span>
           [  1.162,   1.162, 348.275, 348.275, 299.792, 299.792],
           [  1.475,   0.965, 289.392, 289.392, <span class="r">196.215</span>, 299.792],
           [  0.834,   0.546, 163.634, 163.634, <span class="r">196.215</span>, 299.792],
           [  0.458,   0.3  ,  89.881,  89.881, <span class="r">196.215</span>, 299.792],
           [  1.204,   0.965, 289.357, 289.357, <span class="b">240.315</span>, 299.792],  ## <span class="b">comb. of Vacuum and Pyrex speeds, split at Fake</span>  
           [  2.21 ,   1.447, 433.663, 433.663, 196.215, 299.792],
           [  2.068,   1.635, 490.027, 490.027, 236.919, 299.792]], dtype=float32)
    </pre>

.. class:: small

    +-----+--------------------------------+----------------------------------------------------------+
    | N=0 | Pyrex speed within PMT Vacuum  | :r:`FastSim->SlowSim transitions miss speed setup ?`     |
    +-----+--------------------------------+----------------------------------------------------------+
    | N=1 | Always Vacuum speed in Vacuum  | All standard Geant4 with customized G4OpBoundaryProcess  |
    +-----+--------------------------------+----------------------------------------------------------+


.. s5_talk::
 
   Calculating the speed for each step you can see that the un-natural geometry 
   also has un-natural propagation times with photons travelling at Pyrex speed 
   within the lower hemisphere of the PMT. The natural geometry is using standard 
   Geant4 giving the expected vacuum speed with the PMT vacuum.  



.. comment

    :small:`Rerunning Single Photons : Very Useful Debug Technique`
    -----------------------------------------------------------------

    .. sidebar:: :small:`Save/Load g4state into NP array`

        .. class:: small

            :r:`Efficiently save/restore thousands of states` 

        .. class:: small

            **MixMaxRng (G4 1042 random engine)**
          
            State of engine : 38*uint32 

        .. raw:: html

            <pre class="mypretiny">
            U4Engine::SaveState(    NP* states, int idx );
            U4Engine::RestoreState( NP* states, int idx );
            </pre>


        .. class:: small

            **Rerun "big bouncer" photon**

        .. raw:: html

            <pre class="mypretiny">
            vi U4SimulateTest.sh    # SRM_G4STATE_SAVE
            N=0 ./U4SimulateTest.sh # save g4state into ALL0
            vi U4SimulateTest.sh    # SRM_G4STATE_RERUN
            N=1 ./U4SimulateTest.sh # load ALL0, save SEL1
            </pre>
        


    * save g4state before sim each photon 
    * :r:`enables re-simulation of single photons`
    * compare between geometry versions
    * add random "burns" matching consumption

      * :b:`manual fixup, only for debug`








:i:`hamaLogicalPMT_two_pmt_geom.png`
--------------------------------------

.. s5_talk::

    Two PMT test.  Unnatural geometry on left, natural on right. 


:i:`hamaLogicalPMT_two_pmt_cf.png`
------------------------------------

.. s5_talk::

    The difference between the unnatural and natural histories is clear 


.. comment

    hamaLogicalPMT_two_pmt_check.png 
    -----------------------------------





Low dependency access to PMT data :r:`(26x faster)`
----------------------------------------------------


.. sidebar:: :small:`Why Low Dependency Access ?` 

   .. class:: small

       * CODING BEST PRACTICE

         * :r:`less deps -> more useful code`

       * test separate from the "monolith"
 
         * :r:`development cycle < 1 s (vs minutes)`

       * serialization with **NP.hh,NPFold.h** 

         * https://github.com/simoncblyth/np/  
         * :b:`0-deps (hdr-only) -> PMT data anywhere`


       **QE scan over 100 energy points, all PMTs**

       ::

           get_pmtid_qe( pmtid, en );   

       +----------------------------------+--------------+  
       |  IPMTSimParamSvc                 |   7.70 s     |
       +----------------------------------+--------------+  
       |  PMTSimParamData                 |   0.30 s     |
       +----------------------------------+--------------+
       |  IPMTSimParamSvc/PMTSimParamData |   26.10      | 
       +----------------------------------+--------------+

       * :r:`exactly same results, 26x faster` 



.. class:: small

    +--------------------------------------------------------------------------------------------------------------------------------------------------------+
    | `junosw/-/merge_requests/126 <https://code.ihep.ac.cn/JUNO/offline/junosw/-/merge_requests/126>`_   :r:`MERGED AFTER ~3 WEEKS`                         |
    +--------------------------------------------------------------------------------------------------------------------------------------------------------+
    | `junosw/-/issues/66 <https://code.ihep.ac.cn/JUNO/offline/junosw/-/issues/66>`_                                                                        |
    +--------------------------------------------------------------------------------------------------------------------------------------------------------+
    | `junosw/-/tree/blyth-66-low-dependency-PMT-data-access <https://code.ihep.ac.cn/JUNO/offline/junosw/-/tree/blyth-66-low-dependency-PMT-data-access>`_  |
    +--------------------------------------------------------------------------------------------------------------------------------------------------------+

    *PMTSimParamSvc* and *PMTParamSvc* 
        => too many deps for *CustomG4OpBoundaryProcess*

    * **hdrs for collecting data are irrelevant to access**
    * -> separate data struct from Svc 

      * header-only impl : *PMTSimParamData* *PMTParamData* 
      * *_PMTSimParamData* : serialization save/load

    * reference data struct from Svc 

      * minimal changes to Svc, API
      * consistency guaranteed
      * no change with diff src : file, DB, Frontier

    * speedup not the motivation, BUT 26x faster by:

      * :r:`calc qe_scale ONCE, not for every photon`
      * large pmtid std::map -> std::vector


.. s5_talk::

   First step is to improve access to PMT data for use from the custom boundary process   


.. comment

    Other Work : Opticks Code Reduction
    ----------------------------------------

    .. class:: small

        +-------------------------+-------------------------+--------------------------------------------------------------------------------+
        |                 pkg     |         hh/cc/cu/py     |                                                                       Base     |
        +=========================+=========================+================================================================================+
        |          :b:`sysrap`    |     :b:`197/78/1/11`    |                                           :b:`basis types, new array NP.hh`    |
        +-------------------------+-------------------------+--------------------------------------------------------------------------------+
        |        :r:`boostrap`    |       :r:`46/42/0/0`    |                                                            :r:`boost tools`    |
        +-------------------------+-------------------------+--------------------------------------------------------------------------------+
        |             :r:`npy`    |     :r:`181/165/0/6`    |                                      :r:`geo primitives, old array NPY.hpp`    |
        +-------------------------+-------------------------+--------------------------------------------------------------------------------+
        |     :r:`optickscore`    |       :r:`70/62/0/1`    |                                           :r:`old core, argument parsing`      |
        +-------------------------+-------------------------+--------------------------------------------------------------------------------+
        |            :r:`ggeo`    |       :r:`68/65/0/2`    |                         :r:`complete geometry model : no Geant4 dependency`    |
        +-------------------------+-------------------------+--------------------------------------------------------------------------------+
        |           :r:`extg4`    |       :r:`64/53/0/0`    |                           :r:`Geant4 geometry translation into GGeo model`     |
        +-------------------------+-------------------------+--------------------------------------------------------------------------------+
        |             :b:`CSG`    |       :b:`45/23/0/9`    |                                                     :b:`New geometry model`    |
        +-------------------------+-------------------------+--------------------------------------------------------------------------------+
        |        :r:`CSG_GGeo`    |         :r:`3/2/0/0`    |                                      :r:`GGeo to CSG geometry translation`     |
        +-------------------------+-------------------------+--------------------------------------------------------------------------------+
        |        :r:`GeoChain`    |         :r:`3/2/0/0`    |                                           :r:`geometry translation testing`    |
        +-------------------------+-------------------------+--------------------------------------------------------------------------------+
        |         :b:`qudarap`    |      :b:`47/27/15/1`    |        :b:`CUDA optical photon simulation, CUDA upload, download, textures`    |
        +-------------------------+-------------------------+--------------------------------------------------------------------------------+
        |        :b:`CSGOptiX`    |       :b:`20/14/4/2`    |                                         :b:`CSG intersection with OptiX 7`     |
        +-------------------------+-------------------------+--------------------------------------------------------------------------------+
        |              :b:`u4`    |       :b:`63/20/0/2`    |                  :b:`New Geant4 interface, genstep collection, U4Recorder`     |
        +-------------------------+-------------------------+--------------------------------------------------------------------------------+
        |           :b:`gdxml`    |         :b:`6/4/0/0`    |                                         :b:`GDML loaded as XML for fixups`     |
        +-------------------------+-------------------------+--------------------------------------------------------------------------------+
        |            :b:`g4cx`    |         :b:`3/2/0/0`    |                  :b:`New top level package integrating Geant4 and CSGOptiX`    |
        +-------------------------+-------------------------+--------------------------------------------------------------------------------+

        * :b:`blue : active development`,  :r:`red : plan to remove` : not used for simulation, only used for geometry translation

          * progress with U4Material, U4Surface, U4Solid, snd, snode, stree => :b:`close to removing ~7 pkgs, hundreds of files` 



OTHER WORK : U4Tree.h/stree.h : Direct Geometry Translation
--------------------------------------------------------------

.. sidebar:: :small:`Current Approach : extg4 translated`


    .. class:: small

        +---------------------------+
        | Geant4 -> *GGeo* -> CSG   |
        +---------------------------+
        
        :r:`Full intermediate GGeo model`
          * GMaterial/GMaterialLib/GSurfaceLib/...
          * GMergedMesh/GMesh
          * nnode/NCSG/...
          * :b:`(lots of code)` 



.. sidebar:: :small:`DRASTIC CODE REDUCTION NEAR`

    .. class:: small

        * ~6 pkgs, literally hundreds of classes/structs



.. class:: small


   +--------------------------------------+
   | Geant4 -> U4Tree.h/stree.h -> CSG    |
   +--------------------------------------+

   :b:`Minimal intermediate stree.h model` 
     * stree.h : n-ary tree of snode volumes
     * scsg.hh : n-ary trees of snd constituent solids
     * :r:`(much less code)`


   +----------------------------------------+
   |                                        | 
   | U4Tree                                 |
   |     G4VPhysicalVolume -> stree/snode   |
   |                                        |
   | U4Solid                                |
   |     G4VSolid -> scsg/snd               |
   |                                        |
   | U4Material                             |
   |     G4Material -> NPFold/NP            | 
   |                                        |
   | U4Surface                              |
   |     G4LogicalSurface -> NPFold/NP      |
   |                                        |
   +----------------------------------------+
   

   +--------------------------------------------------------------+
   |  stree/snode/scsg/snd -> CSGFoundry/CSGSolid/CSGPrim/CSGNode | 
   +--------------------------------------------------------------+


.. s5_talk::

    While waiting for merge : worked on direct geometry translation


:small:`Next Steps : Custom Boundary + Natural Geometry Branch`
-------------------------------------------------------------------------------

**junosw : Natural PMT Geometry Branch**

* almost all standalone tested already, need to bring into junosw monolith
* need switch : FastSim/standard-Sim, natural geometry, custom boundary

+------------------------------+---------------------------------------------+
| Primary                      |   Support                                   |
+==============================+=============================================+
| *CustomG4OpBoundaryProcess*  |  *PMTSimParamData* (merged in MR 126)       |
| *CustomART.h*                |  *PMTAccessor/IPMTAccessor* (j/Layr)        | 
| *Layr.h*                     |  *HamamatsuR12860PMTManager*                |
|                              |  *NNVTMCPPMTManager*                        |
+------------------------------+---------------------------------------------+


**Opticks : Custom boundary equivalent**

* *PMTSimParamData* *PMTAccessor* -> GPU 
* natural geometry => easier to validate (no fakes)
* standard propagation + polarization => easier (already implemented qudarap/qsim.h ) 


.. s5_talk::

    Next steps 


