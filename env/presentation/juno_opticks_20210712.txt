
.. meta::
   :note: Navigate the HTML slides by entering a page number and pressing return 
   :title: JUNO Geant4/Opticks Optical Simulation Matching
   :description: (Jul 12 2021)
   :url: https://simoncblyth.bitbucket.io/env/presentation/juno_opticks_20210712.html  
   :date: 12 July 2021

.. include:: my_s5defs.txt



.. comment

   Day 1 (Monday, July 12, 2021, 8:30–12:50 CEST/14:30–18:50 Beijing time): Simulation review

   30+10 min  




===================================================================================
JUNO Opticks/Geant4 Optical Photon Simulation Matching
===================================================================================

..

  *Opticks* replaces *Geant4* optical photon simulation with an **equivalent implementation** 
  that benefits from state-of-the-art GPU ray tracing from NVIDIA OptiX. 
  All optically relevant aspects of *Geant4* context must be translated+copied to GPU:

  * geometry : solids, structure, material+surface properties
  * generation : Cerenkov + Scintillation (using **Gensteps** from *Geant4*) 
  * propagation : Rayleigh scattering, absorption, reemission, boundary

  Achieving+maintaining **equivalence** is time consuming, BUT:

  * :red:`transformative performance benefits >1000x Geant4`   


.. class:: small

   |  Simon C Blyth,  July 12, 2021 


.. s5_talk:: 

    This talk is about achieving and maintaining **equivalence** between the implementations.


:i:`Geant4OpticksWorkflow`
----------------------------

.. s5_talk::

    This shows how Opticks is integrated with Geant4. The geometry is translated 
    and uploaded to the GPU at initialization.

    Cerenkov or Scintillation gensteps, the blue lines, are the generation parameters 
    uploaded to the GPU so optical photon generation can be done there.

    This allows the optical photon simulation to be entirely offloaded  
    to the GPU with only collected hits requiring CPU memory.
 




Outline
----------------------------------------------------

.. image:: /env/presentation/newtons-opticks.png 
   :width: 299px
   :height: 547px 
   :align: right


.. class:: small


    .. raw:: html

       <span>&nbsp;</span>

    * Simulation Matching Machinery 

      * JUNO-Offline : Tools for Optical Photon Simulation Matching  
      * Opticks : Tools for Optical Matching, Reemission Bookkeeping  
      * G4OpticksRecorder : full details of Geant4 simulation passed to Opticks
      * JUNO Offline DsG4Scintillation : Reemission Bookkeeping
      * Comparing OK/G4 photon history counts for "tut_detsim.py gun" event

    * Examples of recently fixed issues

      * OK:Photons not stopping at Tyvek, FIXED by adding explicit surfaces

    * Opticks : 1st JUNO Renders with NVIDIA OptiX 7 

      * p12:Ray trace renders
      * p13:Geometry factorization  
      * p15:Ray trace times for various geometries   


    .. raw:: html
 
       <hr/>


.. s5_talk::

    The focus of this talk is recent progress on migrating Opticks
    to work with the all new NVIDIA OptiX 7 API.
 



:small:`JUNO Offline : Tools for Optical Photon Simulation Matching`
------------------------------------------------------------------------

.. class:: small

   ``tut_detsim.py`` options: 
   
   * ``--opticks-mode 1`` : Opticks optical simulation only
   * ``--opticks-mode 2`` : Geant4 optical simulation only
   * ``--opticks-mode 3`` : both OK+G4 -> writes paired *OpticksEvent*, OK:1,2,.. G4:-1,-2,..
   * ``--opticks-anamgr`` : pass all *G4Track* *G4Step* to ``G4OpticksRecorder`` 

   Using **GtOpticksTool** GenTool to run from input photons : NumPy arrays (num_photons,4,4)::

       tut_detsim.py ...
          --opticks-mode 3 ... opticks 
          --input-photon-path /path/to/input_photons.npy  
          --input-photon-repeat 10000                         ## repeat photons  
          --input-photon-wavelength 360,380,400,420,440,460   ## override 

.. class:: small

   * create photon arrays : ``~/opticks/ana/input_photons.py,parallel_input_photons.py``
   * :red:`focus on an issue by repeating a single photon` 
   * :red:`create parallel beam of offset photons to probe problem geometry` 

 
:small:`Opticks : Tools for Optical Photon Simulation Matching`
------------------------------------------------------------------------

.. class:: small

   ``G4OpticksRecorder/CManager/CRecorder/CWriter`` 

   * records Geant4 propagations into *OpticksEvent* data structures 
   * *OpticksEvent* are persisted to *NumPy* ``.npy`` files

   ``~/opticks/ana/evt.py ab.py ...``  *NumPy* based analysis machinery 

   * ``ab.py`` : load and compare paired events 

     * ``a:OK tags:1,2,3,..`` 
     * ``b:G4 tags:-1,-2,-3,...``

   **C+S Gensteps : Geant4 -> Opticks**

   * number of photons to generate, line segment to generate them along, any other parameters needed 
   * -> number of photons **always equal** in OK and G4 

   * *Opticks* bookkeeping treats reemission as "rebirth" of a fraction of the absorbed

     * **not treated as separate photons**


:small:`G4OpticksRecorder : full details of Geant4 simulation passed to Opticks`
------------------------------------------------------------------------------------

.. sidebar:: :small:`Interface to Opticks CFG4 Package`

    .. class:: small

        **G4OpticksRecorder/CManager/CRecorder/CWriter**  

        * every G4Track+G4Step -> *OpticksEvent*

          * emulates GPU recording 

        * CPhotonInfo : G4VUserTrackInformation

          * **photon_id** retained across reemission generations

        ``tut_detsim.py --opticks-mode 3``
             Do both GPU and CPU optical generation+propagations


.. raw:: html

    <pre class="mypretiny">

     34 struct G4OK_API G4OpticksRecorder
     35 {   
     ...
     47     G4OpticksRecorder(); 
     48     virtual ~G4OpticksRecorder();
     49     
     50     void setGeometry(const GGeo* ggeo);
     51     
     52     virtual void BeginOfRunAction(const G4Run*);
     53     virtual void EndOfRunAction(const G4Run*);
     54     
     55     virtual void BeginOfEventAction(const G4Event*);
     56     virtual void EndOfEventAction(const G4Event*);
     57     
     58     virtual void PreUserTrackingAction(const G4Track*);
     59     virtual void PostUserTrackingAction(const G4Track*);
     60     
     61     virtual void UserSteppingAction(const G4Step*);
     62     
     63     void ProcessHits( const G4Step* step, bool efficiency_collect );
     64     
     65     static G4OpticksRecorder*  fInstance;
     66 
     67 private: 
     68     void TerminateEvent();
     69 
     70 };

    </pre>



:small:`JUNO Offline DsG4Scintillation : Reemission Bookkeeping`
---------------------------------------------------------------------

.. class:: small

   * Both simulations using same **REEMISSIONPROB** but different mechanics  

.. raw:: html

    <pre class="mypretiny">
     200 G4VParticleChange*
     201 DsG4Scintillation::PostStepDoIt(const G4Track& aTrack, const G4Step& aStep)
     ...
     235             flagReemission= doReemission
     236                 && aTrack.GetTrackStatus() == fStopAndKill
     237                 && aStep.GetPostStepPoint()->GetStepStatus() != fGeomBoundary;
    </pre>

.. class:: small

   * *Geant4* : bulk absorbed *G4Track* yield 0/1 reemission photon as **secondary G4Track** 
   * *Opticks* : fraction of BULK_ABSORB (AB) photons **reborn** in the same CUDA thread, no "secondary" to handle
  
   **Geant4 WITH_G4OPTICKS photon_id**

   * ``photon_id`` assigned at first S + C generation (attached to G4Track with G4VUserTrackInformation)
   * ``photon_id`` retained thru reemission generations 
         
   **CRecorder/CWriter : REJOIN reemission secondary tracks with ancestors** 

   * continue writing reemission secondary G4Track steps to original ``photon_id`` record 


:small:`Comparing OK/G4 photon history counts for "tut_detsim.py gun" event`
----------------------------------------------------------------------------------------------

.. raw:: html

    <pre class="mypretiny">
    epsilon:ana blyth$ tds3gun.sh 1    ## <b>seqhis: 64bit uint : 16x4bit step flags for each photon</b>
    In [1]: ab.his[:20]   ##  OK:1    G4:-1     OK-G4   "c2" deviation                  

    .  n           seqhis        a        b      a-b     (a-b)^2/(a+b)   label                ## optickscore/OpticksPhoton.h enum
              ## hexstring
    0000               42     1822     1721      101            2.88     SI AB                ## <b>AB : BULK_ABSORB </b>
    0001            7ccc2     1446     1406       40            0.56     SI BT BT BT SD       ## <b>SD : SURFACE_DETECT </b>
    0002           7ccc62      672      666        6            0.03     SI SC BT BT BT SD    ## <b>SC : BULK_SCATTER </b>
    0003            8ccc2      649      597       52            2.17     SI BT BT BT SA       ## <b>BT : BOUNDARY_TRANSMIT </b>
    0004             8cc2      606      615       -9            0.07     SI BT BT SA          ## <b>SI : SCINTILLATION </b>
    0005              452      538      536        2            0.00     SI RE AB             ## <b>RE : BULK_REEMIT </b>
    0006           7ccc52      433      438       -5            0.03     SI RE BT BT BT SD    
    0007              462      397      405       -8            0.08     SI SC AB
    0008           8ccc62      269      262        7            0.09     SI SC BT BT BT SA
    0009          7ccc662      242      222       20            0.86     SI SC SC BT BT BT SD
    0010            8cc62      217      212        5            0.06     SI SC BT BT SA
    0011          7ccc652      211      205        6            0.09     SI RE SC BT BT BT SD
    0012           8ccc52      200      201       -1            0.00     SI RE BT BT BT SA
    0013            8cc52      158      192      -34            3.30     SI RE BT BT SA
    0014             4552      181      165       16            0.74     SI RE RE AB
    0015               41      164      145       19            1.17     CK AB                ## <b>CK : CERENKOV</b> 
    0016          7ccc552      135      160      -25            2.12     SI RE RE BT BT BT SD
    0017             4cc2      130      115       15            0.92     SI BT BT AB
    0018             4652      120      117        3            0.04     SI RE SC AB

    .             TOTALS:    11684    11684                    52.92     52.92/63 =  0.84   pvalue:P[C2>]:0.814  1-pvalue:P[C2<]:0.186 

    In [2]: ab.his.ss[ab.his.c2 > 2.7]       ## <b><span class="alarm">largest chi-squared contributors -> next issue to look into  <span></b>
    Out[2]:
    array(['0000               42     1822     1721      101            2.88     SI AB',
           '0013            8cc52      158      192      -34            3.30     SI RE BT BT SA',
           '0020          8ccc662       75      108      -33            5.95     SI SC SC BT BT BT SA',
           '0027           8cc552       49       70      -21            3.71     SI RE RE BT BT SA',
           '0029             4562       39       66      -27            6.94     SI SC RE AB'],
   </pre>


.. s5_talk::

    This is the current status, after fixing lots of issues



:small:`Overview of issues and fixes` 
-----------------------------------------------------------------------------------------------------

.. class:: small

   * Opticks : excess BULK_ABSORB (AB), lack SURFACE_ABSORB (SA) in innerWater

     * FIX: skip near degenerate(-0.0001 mm) pointless Pyrex///Pyrex PMT solids from GPU geometry  

   * Opticks : photons not stopping at Tyvek

     * FIX: add explicit surfaces to GPU geometry corresponding to Geant4 implicit RINDEX-NoRINDEX boundaries 

   * Opticks : much less scattering in the Water

     * FIX: get Geant4 calculated **RAYLEIGH** property for "Water" into *G4Material* so Opticks can use it  



:small:`Opticks : excess AB, lack SA in innerWater (FIX: remove degenerates)` 
-----------------------------------------------------------------------------------------------------

.. raw:: html

    <pre class="mypretiny">
    In [2]: ab.his
    Out[2]: 
    ab.his
    .       seqhis_ana  cfo:sum  1:g4live:tds3gun   -1:g4live:tds3gun        c2        ab        ba 
    .                         11142     11142                  616.50/66 =  9.34 
       n             iseq         a         b    a-b               c2    [ns] label
    0000               42      1666      1621     45             0.62    [2 ] SI AB
    0001            7ccc2      1264      1258      6             0.01    [5 ] SI BT BT BT SD
    <b><span class="redbold">0002            8ccc2       581       766   -185            25.41    [5 ] SI BT BT BT SA</span></b>
    0003           7ccc62       579       543     36             1.16    [6 ] SI SC BT BT BT SD
    0004             8cc2       570       496     74             5.14    [4 ] SI BT BT SA
    0005              452       408       495    -87             8.38    [3 ] SI RE AB
    0006              462       399       351     48             3.07    [3 ] SI SC AB
    0007           7ccc52       360       385    -25             0.84    [6 ] SI RE BT BT BT SD
    0008           8ccc62       239       258    -19             0.73    [6 ] SI SC BT BT BT SA
    0009          7ccc662       218       195     23             1.28    [7 ] SI SC SC BT BT BT SD
    0010            8cc62       195       180     15             0.60    [5 ] SI SC BT BT SA
    <b><span class="redbold">0011             4cc2       268       104    164            72.30    [4 ] SI BT BT AB</span></b>
    0012           8ccc52       160       191    -31             2.74    [6 ] SI RE BT BT BT SA
    0013          7ccc652       163       165     -2             0.01    [7 ] SI RE SC BT BT BT SD
    0014               41       156       160     -4             0.05    [2 ] CK AB
    0015             4552       118       152    -34             4.28    [4 ] SI RE RE AB
    0016            8cc52       136       133      3             0.03    [5 ] SI RE BT BT SA
    0017             4662       125       114     11             0.51    [4 ] SI SC SC AB
    <b><span class="redbold">0018            4cc62       189        40    149            96.95    [5 ] SI SC BT BT AB</span></b>
    .                         11142     11142                  616.50/66 =  9.34 
    </pre>
 



:small:`Opticks : excess AB, lack SA in innerWater (FIX: remove degenerates)` 
-----------------------------------------------------------------------------------------------------

.. class:: small

   * :r:`wrong boundary means Opticks using Pyrex properties, not Water, for a fraction of photons (5%)`

.. raw:: html

    <pre class="mypretiny">
    In [3]: a.sel = "SI BT BT BT SA"      <span class="bluebold">## select photons with this history</span>
    In [15]: a.bn.reshape(-1,4).view(np.int8)[:20]     <b>## signed boundary at up to 16 steps of the photon </b>
    Out[15]: 
    A([[ 18,  17, -23, -25,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],
       [ 18,  17, -23, -27,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],
       ...
       [ 18,  17, -23, -27,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],
       [ 18,  17, <span class="redbold">-24</span>, -25,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0]], dtype=int8)

    In [17]: print(a.blib.format(a.bn.reshape(-1,4).view(np.int8)[0]))   ## 16*char(int8) packed into uint4 4*32bit 
     18 : Acrylic///LS            <span class="bluebold">##  boundary : outer-material/outer-surface/inner-surface/inner-material  </span>
     17 : Water///Acrylic         <span class="bluebold">## +ve boundary : photon direction is with the normal, exiting the shape  </span>
    -23 : Water///Pyrex           <span class="bluebold">## -ve boundary : photon direction against the normal, entering the shape </span> 
    -25 : Pyrex/NNVTMCPPMT_photocathode_logsurf2/NNVTMCPPMT_photocathode_logsurf1/Vacuum

    In [18]: print(a.blib.format(a.bn.reshape(-1,4).view(np.int8)[1]))
     18 : Acrylic///LS
     17 : Water///Acrylic
    -23 : Water///Pyrex
    -27 : Pyrex/HamamatsuR12860_photocathode_logsurf2/HamamatsuR12860_photocathode_logsurf1/Vacuum

    In [19]: print(a.blib.format(a.bn.reshape(-1,4).view(np.int8)[19]))
     18 : Acrylic///LS         
     17 : Water///Acrylic     
    <span class="redbold">-24 : Pyrex///Pyrex   ## expect Water///Pyrex --> GEOMETRY PROBLEM </span>
    -25 : Pyrex/NNVTMCPPMT_photocathode_logsurf2/NNVTMCPPMT_photocathode_logsurf1/Vacuum
    </pre>

.. class:: small

    * :b:`All LPMTs : near degenerate Water///Pyrex and "pointless" same material Pyrex///Pyrex borders offset: 0.001mm`



:i:`gpmt Hamamatsu jun28` 
---------------------------

:i:`gpmt NNVT jun28`
------------------------
 


:small:`Opticks : excess AB, lack SA in innerWater : FIX Options` 
-----------------------------------------------------------------------------------------------------

.. class:: small

    1. fix source geometry removing the pointless Pyrex///Pyrex -0.001mm boundary 

       * seems to cause no problem for Geant4 : get "microStep" of ~0.001-0.002mm 

         * eg ``--dbgseqhis 0x7ccccd`` dumps Geant4 details for photons in category 

       * experience shows is time consuming to get agreement on geometry change

    2. runtime workaround trying to notice inconsistency by maintaining state of which material are in 

       * need very strong reasons to add complexity to GPU code, so disqualify this 
 
    3. skip the near degenerate inner Pyrex solids in the translated GPU geometry 

       * easy, causing no problems because are removing a pointless Pyrex///Pyrex border
       * BUT: requires suppression of Geant4 "microSteps" in *CRecorder* to facilitate history comparison  



    **Currently using 3, with Opticks commandline option:**

   ::

       --skipsolidname 
           NNVTMCPPMT_body_solid,
           HamamatsuR12860_body_solid_1_9,
           PMT_20inch_veto_body_solid_1_2

.. comment 

   notes/issues/ok_less_SA_more_AB.rst




:small:`OK:Photons not stopping at Tyvek, FIXED by adding explicit surfaces` 
-------------------------------------------------------------------------------------------------------

.. class:: small

    * Major problems -> huge chi2, from zeros in history table 
    * G4: implicit RINDEX-NoRINDEX surface at Tyvek///Water boundary 
    * OK: FIX with explicit surface **Tyvek//Implicit_RINDEX_NoRINDEX_pInnerWater_pCentralDetector/Water**

.. raw:: html

    <pre class="mypretiny">
    In [7]: ab.a.seqhis_ana.table.compare(ab.b.seqhis_ana.table, ordering="sum")                                                                                                                                                                
    Out[7]: 
    .                   cfo:sum  1:g4live:tds3gun   -1:g4live:tds3gun      
    .                         11278     11278                  <span class="r">1766.28/69 = 25.60</span>  (pval:0.000 prob:1.000)  
    0000               42      1653      1665    -12             0.04    [2 ] SI AB
    0001            7ccc2      1292      1230     62             1.52    [5 ] SI BT BT BT SD
    0002            8ccc2       590       674    -84             5.58    [5 ] SI BT BT BT SA
    0003           7ccc62       581       552     29             0.74    [6 ] SI SC BT BT BT SD
    0004              452       422       534   -112            13.12    [3 ] SI RE AB
    0005           7ccc52       380       397    -17             0.37    [6 ] SI RE BT BT BT SD
    0006              462       392       367     25             0.82    [3 ] SI SC AB
    0007           8ccc62       251       267    -16             0.49    [6 ] SI SC BT BT BT SA
    <b><span class="redbold">0008             8cc2         0       464   -464           464.00    [4 ] SI BT BT SA</span></b>
    0009          7ccc662       219       213      6             0.08    [7 ] SI SC SC BT BT BT SD
    0010             4cc2       278       127    151            56.30    [4 ] SI BT BT AB
    0011           8ccc52       154       188    -34             3.38    [6 ] SI RE BT BT BT SA
    0012          7ccc652       157       159     -2             0.01    [7 ] SI RE SC BT BT BT SD
    0013               41       142       144     -2             0.01    [2 ] CK AB
    0014            4cc62       197        71    126            59.24    [5 ] SI SC BT BT AB
    0015             4552       124       142    -18             1.22    [4 ] SI RE RE AB
    0016             4662       137       121     16             0.99    [4 ] SI SC SC AB
    0017             4652       121       112      9             0.35    [4 ] SI RE SC AB
    0018          7ccc552       102       124    -22             2.14    [7 ] SI RE RE BT BT BT SD
    0019           7cccc2        53       154   -101            49.28    [6 ] SI BT BT BT BT SD
    <b><span class="redbold">0020            8cc62         0       186   -186           186.00    [5 ] SI SC BT BT SA</span></b>
    0021          8ccc662        69       107    -38             8.20    [7 ] SI SC SC BT BT BT SA
    </pre>


:small:`Prepare an input photon that misses PMTs for checking the Water` 
---------------------------------------------------------------------------------------------

.. raw:: html

    <pre class="mypretiny">
    epsilon:ana blyth$ tds3gun.sh 1

    In [1]: b.sel = "SI BT BT SA"    <b># selecting G4 photons that go direct to Tyvek</b>

    In [2]: b.ox.shape               <b># ox : final photons array honours the selection</b>
    Out[2]: (464, 4, 4)

    In [3]: p = b.ox[0:1] ; p        <b># first photon</b>  
    Out[3]:
    A([[[ 14210.083 ,   5228.8896, -13142.859 ,    110.41  ],        <b># position, time</b>
        [     0.7191,      0.2595,     -0.6447,      1.    ],        <b># direction, weight</b>
        [    -0.4468,     -0.538 ,     -0.7148,    415.3976],        <b># polarization, wavelength </b>
        [     0.    ,      0.    ,      0.    ,      0.    ]]],      <b># uint flags: not visible as float</b>
        dtype=float32)  

    In [4]: p[0,0,:3] -= p[0,1,:3]*2220.   <b># back up the photon by 2220mm to position 10mm into the water</b>

    In [5]: np.save("/tmp/check_innerwater.npy", p )
    </pre>

.. class:: small

    **Perform both Geant4 and Opticks simulations with 100k repeats of the input photon** 

::

   tut_detsim.py ... 
       --opticks-mode 3     ## enable Geant4 + Opticks simulations
       --opticks-anamgr     ## G4Track, G4Step --> G4OpticksRecorder
       opticks              ## GtOpticksTool input photon "GenTool" 
       --input-photon-path /tmp/check_innerwater.npy
       --input-photon-repeat 100000


:small:`<< OK:SC with the 100k input photons in Water, FIX: X4MaterialWater`
---------------------------------------------------------------------------------------------

.. raw:: html

    <pre class="mypretiny">
    epsilon:ana blyth$ tds3ip.sh 1
    In [1]: ab.his[:15]
    Out[1]:
    ab.his
    .       seqhis_ana  cfo:sum  1:g4live:tds3ip   -1:g4live:tds3ip     
    .                        100000    100000                  739.41/9 = 82.16  (pval:0.000 prob:1.000)
    0000               8d     93766     92777    989             5.24   [2 ] TO SA
    0001               4d      6031      5918    113             1.07   [2 ] TO AB
    <b><span class="redbold">0002             7c6d        38       311   -273           213.55   [4 ] TO SC BT SD
    0003              86d        33       236   -203           153.19   [3 ] TO SC SA
    0004            4cc6d        10       212   -202           183.80   [5 ] TO SC BT BT AB
    0005             8c6d        13        80    -67            48.27   [4 ] TO SC BT SA
    0006              46d        20        63    -43            22.28   [3 ] TO SC AB
    0007          8ccac6d         0        72    -72            72.00   [7 ] TO SC BT SR BT BT SA
    0008           46cc6d         1        39    -38            36.10   [6 ] TO SC BT BT SC AB
    0009             4c6d        10        21    -11             3.90   [4 ] TO SC BT AB
    0010            7cc6d         2        27    -25             0.00   [5 ] TO SC BT BT SD
    0011       ccacccac6d         0        26    -26             0.00   [10] TO SC BT SR BT BT BT SR BT BT
    0012           4ccc6d         0        19    -19             0.00   [6 ] TO SC BT BT BT AB</span></b>
    0013         7ccccc6d         9         9      0             0.00   [8 ] TO SC BT BT BT BT BT SD
    0014          466cc6d         1        17    -16             0.00   [7 ] TO SC BT BT SC SC AB
    .                        100000    100000                  739.41/9 = 82.16  (pval:0.000 prob:1.000)  
    </pre>



.. class:: small

    * JUNO "Water" material has no **RAYLEIGH** scattering length property 
    * *G4OpRayleigh* calculates **RAYLEIGH** for materials named "Water" with **RINDEX** and no **RAYLEIGH**
   
      * BUT: *G4Material* is unchanged, only ``G4OpRayleigh::thePhysicsTable`` 
      * *Opticks* converts materials, not process physics tables 
      * https://bitbucket.org/simoncblyth/opticks/src/master/extg4/X4MaterialWater.cc
 
        * use G4OpRayleigh to calculate **RAYLEIGH** and add it to the *G4Material* so *Opticks* sees it  


.. s5_talk::

    Note that the total number of photons is always the same, so problems
    causing an decrease in one category always means there will be an increase
    in other categories. 

    Here with Opticks lots more survive though the water.  

    Because of this it would be a mistake to try to validate just by comparing 
    hits between OK and G4 









:small:`Current JUNO Geometry : Auto-Factorization by progeny digest`
------------------------------------------------------------------------


.. sidebar:: :small:`Factorize ~300,000 vol -> 10 comp`

   .. class:: small

        * **ridx**: repeat index
        * **plc**: number of placements of the instance
        * **vol**: number of volumes in the instance
        * **name**: named after outer solid    
 

.. class:: tiny

    +----+------+-----+-------------------------------------------+---------------------------+
    |ridx|   plc|  vol|   component name                          |  note                     |
    +====+======+=====+===========================================+===========================+
    |   0|     1| 3084|   3084:sWorld0x33e3370                    |  non-repeated remainder   |
    +----+------+-----+-------------------------------------------+---------------------------+
    |   1| 25600|    5|   5:PMT_3inch_pmt_solid0x43c0a40          |                           |
    +----+------+-----+-------------------------------------------+   4 types of PMT          +
    |   2| 12612|    5|   5:NNVTMCPPMTsMask0x3c2c750              |                           |
    +----+------+-----+-------------------------------------------+                           +
    |   3|  5000|    5|   5:HamamatsuR12860sMask0x3c39130         |                           |
    +----+------+-----+-------------------------------------------+                           +
    |   4|  2400|    5|   5:mask_PMT_20inch_vetosMask0x3c2e7c0    |                           |
    +----+------+-----+-------------------------------------------+---------------------------+
    |   5|   590|    1|   1:sStrutBallhead0x34be280               |                           |
    +----+------+-----+-------------------------------------------+   4 parts of same         +
    |   6|   590|    1|   1:uni10x3461bd0                         |   assembly, BUT not       |
    +----+------+-----+-------------------------------------------+   grouped as siblings     +
    |   7|   590|    1|   1:base_steel0x35a1810                   |   (not parent-child)      |
    +----+------+-----+-------------------------------------------+                           +
    |   8|   590|    1|   1:uni_acrylic30x35932f0                 |                           |
    +----+------+-----+-------------------------------------------+---------------------------+
    |   9|   504|  130|   130:sPanel0x4e71750                     |  repeated parts of TT     |
    +----+------+-----+-------------------------------------------+---------------------------+


.. class:: small

    Geom excludes "virtual" solids, via :small:`--skipsolidname NNVTMCPPMTsMask_virtual, HamamatsuR12860sMask_virtual, mask_PMT_20inch_vetosMask_virtual`

.. class:: small

   * **ridx:0** ~3000 of 3084 remainder volumes are repeated

     * ``(HBeam|ixture|anchor|Steel2|Plane|Wall|Receiver|Strut0x|sBar0x)``
     * TODO: modify instancing criteria to get more instanced, reducing remainder volumes

   * **ridx:5,6,7,8**

     * same assembly :redbold:`but not grouped together` : as siblings (not parent-child like PMTs) 
     * TODO: implement grouping of siblings : 4 -> 1   


.. class:: small

   :redbold:`Increasing instancing : reduces memory for geometry + improves performance`



:small:`Notes on how the renders and tables were created`
------------------------------------------------------------

.. class:: small

    * ~/opticks/notes/misc/snapscan-varying-enabledmergedmesh-option.rst 

    In summary:

.. raw:: html

    <pre class="mypretiny">
    snapscan.sh --cvd 1 --rtx 1     # on P, create jpg snaps and metadata json 
    snap.sh                         # on G, grab them
    snap.py --rst                   # dump RST table 
    </pre>


:small:`Current JUNO Geometry : Ray Trace Times : TITAN RTX (RTX ON, 24GB)`
----------------------------------------------------------------------------------

.. sidebar:: :small:`Same viewpoint, vary GPU geometry`

   .. class:: small

        * 1920x1080 render times (~2M pixels) 
        * Geometry "factored" into 10 instances
        * **3084:sWorld** is the "remainder" geometry
        * ``-e`` option controls components
        * tilde: ``-e ~8,``  **excludes** listed 
        * **relative** compares to "ONLY PMT" 
                
   .. class:: small

        * very large range of times
        * with **1:uni_acrylic** : 65-100x slower
        * next offender is **3084:sWorld**

.. class:: tiny

    +---+----------+----------+----------+--------------------------------------------------------------------------+
    |idx|        -e|   time(s)|  relative|    enabled geometry description                                          |
    +===+==========+==========+==========+==========================================================================+
    |  0|        5,|    0.0020|    0.1162|    ONLY: 1:sStrutBallhead0x34be280                                       |
    +---+----------+----------+----------+--------------------------------------------------------------------------+
    |  1|        7,|    0.0030|    0.1766|    ONLY: 1:base_steel0x35a1810                                           |
    +---+----------+----------+----------+--------------------------------------------------------------------------+
    |  2|        9,|    0.0038|    0.2233|    ONLY: 130:sPanel0x4e71750                                             |
    +---+----------+----------+----------+--------------------------------------------------------------------------+
    |  3|        4,|    0.0044|    0.2578|    ONLY: 5:mask_PMT_20inch_vetosMask0x3c2e7c0                            |
    +---+----------+----------+----------+--------------------------------------------------------------------------+
    |  4|        6,|    0.0056|    0.3250|    ONLY: 1:uni10x3461bd0                                                 |
    +---+----------+----------+----------+--------------------------------------------------------------------------+
    |  5|        3,|    0.0068|    0.3957|    ONLY: 5:HamamatsuR12860sMask0x3c39130                                 |
    +---+----------+----------+----------+--------------------------------------------------------------------------+
    |  6|        1,|    0.0073|    0.4288|    ONLY: 5:PMT_3inch_pmt_solid0x43c0a40                                  |
    +---+----------+----------+----------+--------------------------------------------------------------------------+
    |  7|        2,|    0.0074|    0.4345|    ONLY: 5:NNVTMCPPMTsMask0x3c2c750                                      |
    +---+----------+----------+----------+--------------------------------------------------------------------------+
    |  8|   1,2,3,4|    0.0171|    1.0000|    ONLY PMT                                                              |
    +---+----------+----------+----------+--------------------------------------------------------------------------+
    |  9|        0,|    0.0511|    2.9827|    ONLY: 3084:sWorld0x33e3370                                            |
    +---+----------+----------+----------+--------------------------------------------------------------------------+
    | 10|       ~8,|    0.0882|    5.1466|    EXCL: 1:uni_acrylic30x35932f0                                         |
    +---+----------+----------+----------+--------------------------------------------------------------------------+
    | 11|        8,|    1.1154|   65.1113|    ONLY: 1:uni_acrylic30x35932f0                                         |
    +---+----------+----------+----------+--------------------------------------------------------------------------+
    | 12|       ~0,|    1.3928|   81.3006|    EXCL: 3084:sWorld0x33e3370                                            |
    +---+----------+----------+----------+--------------------------------------------------------------------------+
    | 13|       ~5,|    1.6898|   98.6400|    EXCL: 1:sStrutBallhead0x34be280                                       |
    +---+----------+----------+----------+--------------------------------------------------------------------------+
    | 14|       ~6,|    1.6900|   98.6520|    EXCL: 1:uni10x3461bd0                                                 |
    +---+----------+----------+----------+--------------------------------------------------------------------------+
    | 15|       ~7,|    1.6942|   98.8969|    EXCL: 1:base_steel0x35a1810                                           |
    +---+----------+----------+----------+--------------------------------------------------------------------------+
    | 16|       ~4,|    1.6949|   98.9376|    EXCL: 5:mask_PMT_20inch_vetosMask0x3c2e7c0                            |
    +---+----------+----------+----------+--------------------------------------------------------------------------+
    | 17|        ~0|    1.7078|   99.6925|    ALL                                                                   |
    +---+----------+----------+----------+--------------------------------------------------------------------------+
    | 18|       ~3,|    1.7103|   99.8371|    EXCL: 5:HamamatsuR12860sMask0x3c39130                                 |
    +---+----------+----------+----------+--------------------------------------------------------------------------+
    | 19|       ~9,|    1.7157|  100.1534|    EXCL: 130:sPanel0x4e71750                                             |
    +---+----------+----------+----------+--------------------------------------------------------------------------+
    | 20|       ~2,|    1.7285|  100.8994|    EXCL: 5:NNVTMCPPMTsMask0x3c2c750                                      |
    +---+----------+----------+----------+--------------------------------------------------------------------------+
    | 21|       ~1,|    1.7457|  101.9019|    EXCL: 5:PMT_3inch_pmt_solid0x43c0a40                                  |
    +---+----------+----------+----------+--------------------------------------------------------------------------+


.. class:: tiny 

    **eg:** OpSnapTest --targetpvn lLowerChimney_phys --eye -1,-1,-1 -e 1,2,3,4 --nameprefix lLowerChimney_phys__1,2,3,4__ --rtx 1 --cvd 1 --tracer 


.. comment

    snap.py --pagejpg
    snap.py --refjpg 


:blue:`[0]lLowerChimney_phys__5,__00000`
----------------------------------------

:blue:`[1]lLowerChimney_phys__7,__00000`
----------------------------------------

:blue:`[2]lLowerChimney_phys__9,__00000`
----------------------------------------

:blue:`[3]lLowerChimney_phys__4,__00000`
----------------------------------------

:blue:`[4]lLowerChimney_phys__6,__00000`
----------------------------------------

:blue:`[5]lLowerChimney_phys__3,__00000`
----------------------------------------

:blue:`[6]lLowerChimney_phys__1,__00000`
----------------------------------------

:blue:`[7]lLowerChimney_phys__2,__00000`
----------------------------------------

:blue:`[8]lLowerChimney_phys__1,2,3,4__00000`
---------------------------------------------

:blue:`[9]lLowerChimney_phys__0,__00000`
----------------------------------------

:blue:`[10]lLowerChimney_phys__t8,__00000`
------------------------------------------

:blue:`[11]lLowerChimney_phys__8,__00000`
-----------------------------------------

:blue:`[12]lLowerChimney_phys__t0,__00000`
------------------------------------------

:blue:`[13]lLowerChimney_phys__t5,__00000`
------------------------------------------

:blue:`[14]lLowerChimney_phys__t6,__00000`
------------------------------------------

:blue:`[15]lLowerChimney_phys__t7,__00000`
------------------------------------------

:blue:`[16]lLowerChimney_phys__t4,__00000`
------------------------------------------

:blue:`[17]lLowerChimney_phys_all_00000`
----------------------------------------

:blue:`[18]lLowerChimney_phys__t3,__00000`
------------------------------------------

:blue:`[19]lLowerChimney_phys__t9,__00000`
------------------------------------------

:blue:`[20]lLowerChimney_phys__t2,__00000`
------------------------------------------

:blue:`[21]lLowerChimney_phys__t1,__00000`
------------------------------------------




:small:`Ray Trace Movies 1920x1080 (~2M pixels) Fly Around Fastener`
-----------------------------------------------------------------------------------

.. class:: tiny

    /afs/ihep.ac.cn/users/b/blyth/flight/RoundaboutXY_XZ__lFasteners_phys__~0__8__/RoundaboutXY_XZ__lFasteners_phys__~0__8__.mp4  (56M) 

.. class:: small

    Fly around fastener: ``-e ~0`` (ALL GEOMETRY)   

    * frame times 1.68-1.71s 
    * lots of coincident surface speckle inside **uni_acrylic3** (large file size: 56M for 20s, 512 frames)
    * **uni_acrylic3** : polycone with complemented (subtracted) 8 column "Greek Temple" 
    * **uni1** : 8 column "Greek Temple" 

.. raw:: html

    <hr/>


.. class:: tiny

    /afs/ihep.ac.cn/users/b/blyth/flight/RoundaboutXY_XZ__lFasteners_phys__~8,__8__/RoundaboutXY_XZ__lFasteners_phys__~8,__8__.mp4  (15M)

.. class:: small

    Same flight as above but using option ``-e ~8,`` (EXCLUDE **uni_acrylic3**) 

    * frame times 0.07-0.09s (small file size: 15M for 20s) :redbold:`> 20x faster with exclusion` 
    * **interior of the fastener is irrelevant for optical photons** (:redbold:`do you agree ?`) 

    * :bluebold:`TODO : implement a exterior only version of the fastener`, with **tut_detsim.py** option  

.. raw:: html

    <hr/>

.. raw:: html

    <pre class="mypretiny">
    epsilon:blyth$ ggeo.py 5:9/ --names      ##  PV, LV and Solid names for volumes in ridx 5,6,7,8 
    nrpo(  68488     5     0     0 )     lSteel_phys0x34c07b0       lSteel0x34c0680       93 sStrutBallhead0x34be280 
    nrpo(  69078     6     0     0 )     lFasteners_phys0x3461f60   lFasteners0x3461e20   94 uni10x3461bd0 
    nrpo(  69668     7     0     0 )     lUpper_phys0x35499e0       lUpper0x3549920       95 base_steel0x35a1810 
    <span class="redbold">nrpo(  70258     8     0     0 )     lAddition_phys0x3593690    lAddition0x3593510    96 uni_acrylic30x35932f0</span> 
    </pre>

.. class:: tiny

    * Movies created by ``opticks/bin/flight.sh`` using ``OpFlightPathTest`` and ``ffmpeg``


.. comment

    * **~0**  : ALL GEOMETRY (twiddle of zero gives all bits set)  **~0,** : EXCLUDE ridx:0  (comma indicates positional bit setting)

    /Users/blyth/Movies/flight/RoundaboutXY_XZ__lFasteners_phys__~0__8__/RoundaboutXY_XZ__lFasteners_phys__~0__8__.mp4
    /Users/blyth/Movies/flight/RoundaboutXY_XZ__lFasteners_phys__~8,__8__/RoundaboutXY_XZ__lFasteners_phys__~8,__8__.mp4


:small:`Double Greek Temple`
------------------------------

.. sidebar:: :small:`Inside Greek Temple`

    * lots of coincident surface speckle 
    * dark columns : indicate inside surface (subtracted Greek Temple)



:small:`tds-mu   (tds : tut_detsim.py)`
------------------------------------------

.. raw:: html

    <pre class="mypretiny">
    tds-mu () 
    { 
        tds --particles mu- --momentums 215000
    }
    tds () 
    { 
        local opts="--opticks-mode 1 --no-guide_tube --pmt20inch-polycone-neck --pmt20inch-simplify-csg --evtmax 2";
        tds-elog-1;
        tds-ectrl;
        tds- $opts gun $*
    }
    tds-ectrl () 
    { 
        local msg="=== $FUNCNAME :";
        local extra;
        <span class="redbold">extra="--rngmax 100 --skipsolidname NNVTMCPPMTsMask_virtual,HamamatsuR12860sMask_virtual,mask_PMT_20inch_vetosMask_virtual -e ~8, --rtx 1 --cvd 1"; </span>
        unset OPTICKS_EMBEDDED_COMMANDLINE_EXTRA;
        if [ -n "$extra" ]; then
            export OPTICKS_EMBEDDED_COMMANDLINE_EXTRA="$extra";
            echo $msg OPTICKS_EMBEDDED_COMMANDLINE_EXTRA ${OPTICKS_EMBEDDED_COMMANDLINE_EXTRA};
        fi;
        ...
    }
    </pre>


:small:`tds-mu : first runs with current geometry : usinge -e ~8,`
---------------------------------------------------------------------


.. class:: small

   * using ``-e ~8,`` : disabling the slow **uni_acrylic**
   * TODO: avoid changing fastener, just remove interior of fastener

.. raw:: html

    <pre class="mypretiny">
    tds-mu
    ... 
    2021-04-26 04:24:16.509 INFO  [198647] [OPropagator::launch@287] 0 : (0;52694115,1)  launch time 41.0858
    2021-04-26 04:24:17.348 INFO  [198647] [OEvent::downloadHits@485]  nhit 15288267 --dbghit N hitmask 0x40 SD SURFACE_DETECT
    2021-04-26 04:24:17.807 INFO  [198647] [OEvent::downloadHiys@519]  nhiy 15288267 --dbghit N hitmask 0x40 SD SURFACE_DETECT
    2021-04-26 04:24:19.115 FATAL [198647] [G4Opticks::propagateOpticalPhotons@1152]  m_way_enabled num_hiys 15288267
     junoSD_PMT_v2_Opticks::EndOfEvent.propagateOpticalPhotons  eventID 0 num_gensteps 108871 num_photons 52694115 num_hit 15288267 way_enabled 1 waymask 3
    0      gp.x 14847.53   gp.y -1223.14   gp.z -12286.16  gp.R 19310.49   pmt 14494   CK|RE|SD|BT|EC       otk 1      oti0.00     bti 92.76    bp.x 13701.00   bp.y -1128.36   bp.z -11338.51  bp.R 17820.00  
    1      gp.x -14271.81  gp.y 8741.88    gp.z 9608.44    gp.R 19298.38   pmt 4434    CK|RE|SD|BT|EX       otk 1      oti0.00     bti 91.83    bp.x -13178.16  bp.y 8072.09    bp.z 8872.99    bp.R 17820.00  


    2021-04-26 04:26:25.326 INFO  [198647] [OPropagator::launch@287] 0 : (0;53856062,1)  launch time 46.6679
    2021-04-26 04:26:26.188 INFO  [198647] [OEvent::downloadHits@485]  nhit 15959722 --dbghit N hitmask 0x40 SD SURFACE_DETECT
    2021-04-26 04:26:26.628 INFO  [198647] [OEvent::downloadHiys@519]  nhiy 15959722 --dbghit N hitmask 0x40 SD SURFACE_DETECT
    2021-04-26 04:26:27.899 FATAL [198647] [G4Opticks::propagateOpticalPhotons@1152]  m_way_enabled num_hiys 15959722
     junoSD_PMT_v2_Opticks::EndOfEvent.propagateOpticalPhotons  eventID 1 num_gensteps 111694 num_photons 53856062 num_hit 15959722 way_enabled 1 waymask 3
    0      gp.x 14847.53   gp.y -1223.22   gp.z -12285.85  gp.R 19310.30   pmt 14494   CK|RE|SD|BT|EC       otk 1      oti0.00     bti 92.76    bp.x 13701.15   bp.y -1128.45   bp.z -11338.31  bp.R 17820.00  
    1      gp.x -14271.85  gp.y 8741.84    gp.z 9609.04    gp.R 19298.69   pmt 4434    CK|RE|SD|BT|EX       otk 1      oti0.00     bti 91.83    bp.x -13177.96  bp.y 8071.91    bp.z 8873.44    bp.R 17820.00  
    </pre>

.. class:: small

    * 215 GeV muon giving : 52 - 54M photons,  ~15 M hits, GPU launch 41-46 s, 
    * BUT > 2min between launches ?  How much is Geant4 ? GPU overhead ?
    * NEXT: 

      * profile whats happening between launches
      * make connection between Opticks hits and hit collections 
      * hit validations



:small:`OptiX7 : "Foundry" based CSG geometry model : Solid/Prim/Node`
------------------------------------------------------------------------

.. sidebar:: :small:`Foundry : Solids + constituents`

    .. raw:: html

        <pre class="mypretiny">
         23 struct Foundry
         24 {
        ...
         97     void upload();  
        ...
        101     std::vector&lt;Solid&gt;  solid ;
        102     std::vector&lt;Prim&gt;   prim ;
        103     std::vector&lt;Node&gt;   node ;
        104     std::vector&lt;float4&gt; plan ;
        105     std::vector&lt;qat4&gt;   tran ;
        106     std::vector&lt;qat4&gt;   itra ;
        107 
        108     Solid*   d_solid ;
        109     <span class="redbold">Prim*    d_prim ; </span>
        110     <span class="redbold">Node*    d_node ; </span>
        111     <span class="redbold">float4*  d_plan ; </span>
        112     qat4*    d_tran ;
        113     <span class="redbold">qat4*    d_itra ; </span>
        114 };
        </pre>


.. class:: small

    **All solids+constituents created via Foundry (ref by index)**

    * **Solid** : 1 or more **Prim**  : ( **Solid** -> **GAS** )
    * **Prim** : 1 or more **Node**  : (**Prim** ~ *G4VSolid*) 

      * (*nodeOffset*, *numNode*) -> SBT HitGroup record

    * **Node** : CSG constituents 

      * basis shapes : sphere, box3, cone, cylinder, ...
      * boolean operators : union, intersection, difference

    * **qat4** : scale-rotate-translate transform
    * **float4** : planes (normal + distance to origin)

    **Node** Examples:

    * *Ellipsoid* : sphere with scale transform 
    * *ConvexPolyhedron_Tetrahedron* : (*planeIdx*, *numPlanes*)

    *Foundry::upload* 
         :redbold:`all solids in geometry -> only four GPU allocations` 

         * *d_prim*, *d_node*, *d_plan*, *d_itra*


.. class:: tiny 

    https://github.com/simoncblyth/OptiXTest/blob/main/Foundry.h
    https://github.com/simoncblyth/OptiXTest/blob/main/qat4.h


:small:`OptiX 7 Intersect Prim (numNode, nodeOffset) ~ HitGroupData`
-----------------------------------------------------------------------

.. sidebar:: :small:`CSG Node : 4 quads`

    .. raw:: html 

        <pre class="mypretiny">
        union quad  // cross-type convenience
        {
           float4 f ;
           int4   i ;
           uint4  u ; 
        };  

        struct Node
        {
            quad q0 ;
            quad q1 ; 
            quad q2 ; 
            quad q3 ; 

            __device__ 
           unsigned typecode() const { return q2.u.w ; } 
        };


        struct HitGroupData   // effectively Prim 
        {
            int numNode ;   
            int nodeOffset ; 
        };

        </pre>


.. raw:: html

    <pre class="mypretiny">

    150 extern "C" __global__ void __intersection__is()
    151 {
    152     HitGroupData* hg = (HitGroupData*)optixGetSbtDataPointer();
    153     int numNode = hg->numNode ;
    154     int nodeOffset = hg->nodeOffset ;
    155 
    156     <span class="redbold">const Node* node = params.node + nodeOffset ;</span>
    157     const float4* plan = params.plan ;
    158     const qat4*   itra = params.itra ;
    159 
    160     const float  t_min = optixGetRayTmin() ;
    161     const float3 ray_origin = optixGetObjectRayOrigin();
    162     const float3 ray_direction = optixGetObjectRayDirection();
    163 
    164     float4 isect ;
    165     if(intersect_prim(isect, numNode, node, plan, itra, 
                 t_min , ray_origin, ray_direction ))
    166     {
    167         const unsigned hitKind = 0u ;
    168         unsigned a0, a1, a2, a3;
    169 
    170         a0 = float_as_uint( isect.x );
    171         a1 = float_as_uint( isect.y );
    172         a2 = float_as_uint( isect.z );
    173         a3 = float_as_uint( isect.w ) ;
    174 
    175         optixReportIntersection( isect.w, hitKind, a0, a1, a2, a3 );
    176     }
    177 }
    </pre>

.. class:: small 

   * **nodeOffset : points to first Node in tree of numNode** 





:small:`CSG Parade Grid 1`
---------------------------


:small:`CSG Boolean Parade Grid`
----------------------------------



"Extra" Background Slides Follow 
------------------------------------


:small:`CSG Complete Binary Tree Serialization -> simplifies GPU side`
---------------------------------------------------------------------------------

.. sidebar:: Bit Twiddling Navigation

    .. class:: small

        * parent(i) = i/2 = i >> 1 

        * leftchild(i) = 2*i = i << 1

        * rightchild(i) = 2*i + 1 = (i << 1) + 1

        * leftmost(height)  =  1 << height


.. class:: small

    Geant4 solid -> CSG binary tree (leaf primitives, non-leaf operators, 4x4 transforms on any node)

    Serialize to **complete binary tree** buffer:
 
    * no need to deserialize, no child/parent pointers
    * bit twiddling navigation :red:`avoids recursion`
    * simple approach profits from small size of binary trees 
    * BUT: very inefficient when unbalanced 

    **Height 3 complete binary tree with level order indices:**
.. raw:: html

    <pre class="mypre">
                                                       depth     elevation

                         1                               0           3   

              10                   11                    1           2   

         100       101        110        111             2           1   
                        
     1000 1001  1010 1011  1100 1101  1110  1111         3           0   
    </pre>
    <hr/>

.. class:: small

    **postorder_next(i,elevation) = i & 1 ? i >> 1 : (i << elevation) + (1 << elevation) ;**   // from pattern of bits
 
.. class:: tiny

   Postorder tree traverse visits all nodes, starting from leftmost, such that children 
   are visited prior to their parents.


.. s5_talk::

    CSG implementation is greatly simplified by 
    use of complete binary tree serialization.  

    Boolean solids with large numbers of constituents cause a 
    problem, because complete binary tree serialization is
    very inefficient for unbalanced trees.

    Tree balancing helps, but still there is a complexity limit.
    G4Boolean abuse solids with hundreds of constituents would be 
    better implemented with custom primitives.




:small:`CSG Deep Tree : Positivize tree using De Morgan's laws`
------------------------------------------------------------------------------------

.. sidebar:: Positive form CSG Trees

   .. class:: small

       Apply deMorgan pushing negations down tree 

       * **A - B -> A * !B**
       * **!(A*B) -> !A + !B**
       * **!(A+B) -> !A * !B**
       * **!(A - B) -> !(A*!B) -> !A + B**

       End with only UNION, INTERSECT operators, 
       and some complemented leaves.

       :red:`COMMUTATIVE -> easily rearranged`


.. class:: small

    1st step to allow balancing : **Positivize** : remove CSG difference **di** operators 


.. raw:: html

   <pre class="mypretiny">
                                                        ...    ...

                                                  un          cy                                        

                                          un          cy                                                

                                  un          cy                                                        

                          un          cy                                                                

                  un          cy                                                                        

          di          cy                                                                                

      cy      cy                                                 

   </pre>

   <pre class="mypretiny">
                                                        ...    ...

                                                  un          cy                                        

                                          un          cy                                                

                                  un          cy                                                        

                          un          cy                                                                

                  un          cy                                                                        

          in          cy                                                                                

      cy      !cy                                                 

   </pre>



.. s5_talk::

   Positivized tree easier to work with 




:i:`CSG Examples`
--------------------------


.. s5_talk::

    Some examples of CSG.

    You might be able to see a problem in the top left. CSG modelling 
    must avoid coincident surfaces in subtractions, otherwise you get spurious intersects.




